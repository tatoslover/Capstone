{"version":3,"names":["_default","PerformanceWrapper","children","cov_1nc2xda5tb","f","showDashboard","setShowDashboard","s","_react","useState","isProduction","setIsProduction","useEffect","window","b","prod","process","env","NODE_ENV","_performance","initPerformanceMonitoring","localStorage","getItem","handleKeyDown","event","ctrlKey","shiftKey","key","preventDefault","prev","addEventListener","toggleButton","document","createElement","innerHTML","title","style","cssText","transform","background","body","appendChild","removeEventListener","contains","removeChild","preconnectLink","rel","href","NEXT_PUBLIC_API_URL","head","scryfallPreconnect","performanceMeta","name","content","checkPageLoad","performance","timing","loadTime","loadEventEnd","navigationStart","console","warn","memoryCheck","setInterval","memory","usedPercent","usedJSHeapSize","jsHeapSizeLimit","toFixed","clearInterval","_jsxruntime","jsxs","Fragment","jsx","_PerformanceDashboard","default","isVisible","onClose"],"sources":["/Users/samuellove/Documents/GitHub/Capstone/frontend/components/PerformanceWrapper.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { initPerformanceMonitoring } from '../utils/performance';\nimport PerformanceDashboard from './PerformanceDashboard';\n\nconst PerformanceWrapper = ({ children }) => {\n  const [showDashboard, setShowDashboard] = useState(false);\n  const [isProduction, setIsProduction] = useState(false);\n\n  useEffect(() => {\n    // Only run on client side\n    if (typeof window === 'undefined') return;\n\n    // Check if we're in production\n    const prod = process.env.NODE_ENV === 'production';\n    setIsProduction(prod);\n\n    // Initialize performance monitoring\n    initPerformanceMonitoring();\n\n    // Only show dashboard toggle in development or if explicitly enabled\n    if (!prod || localStorage.getItem('enablePerformanceDashboard') === 'true') {\n      // Add keyboard shortcut to toggle dashboard (Ctrl+Shift+P)\n      const handleKeyDown = (event) => {\n        if (event.ctrlKey && event.shiftKey && event.key === 'P') {\n          event.preventDefault();\n          setShowDashboard(prev => !prev);\n        }\n      };\n\n      window.addEventListener('keydown', handleKeyDown);\n\n      // Add performance monitoring toggle button in development\n      if (!prod) {\n        const toggleButton = document.createElement('button');\n        toggleButton.innerHTML = '📊';\n        toggleButton.title = 'Toggle Performance Dashboard (Ctrl+Shift+P)';\n        toggleButton.style.cssText = `\n          position: fixed;\n          top: 10px;\n          right: 10px;\n          z-index: 10000;\n          background: #3b82f6;\n          color: white;\n          border: none;\n          border-radius: 50%;\n          width: 40px;\n          height: 40px;\n          cursor: pointer;\n          font-size: 16px;\n          box-shadow: 0 2px 10px rgba(0,0,0,0.3);\n          transition: all 0.2s ease;\n        `;\n\n        toggleButton.addEventListener('mouseenter', () => {\n          toggleButton.style.transform = 'scale(1.1)';\n          toggleButton.style.background = '#2563eb';\n        });\n\n        toggleButton.addEventListener('mouseleave', () => {\n          toggleButton.style.transform = 'scale(1)';\n          toggleButton.style.background = '#3b82f6';\n        });\n\n        toggleButton.addEventListener('click', () => {\n          setShowDashboard(prev => !prev);\n        });\n\n        document.body.appendChild(toggleButton);\n\n        return () => {\n          window.removeEventListener('keydown', handleKeyDown);\n          if (document.body.contains(toggleButton)) {\n            document.body.removeChild(toggleButton);\n          }\n        };\n      }\n\n      return () => {\n        window.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n  }, []);\n\n  // Performance optimization: Add resource hints\n  useEffect(() => {\n    // Only run on client side\n    if (typeof window === 'undefined') return;\n\n    // Preconnect to backend API\n    const preconnectLink = document.createElement('link');\n    preconnectLink.rel = 'preconnect';\n    preconnectLink.href = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001';\n    document.head.appendChild(preconnectLink);\n\n    // Preconnect to Scryfall API\n    const scryfallPreconnect = document.createElement('link');\n    scryfallPreconnect.rel = 'preconnect';\n    scryfallPreconnect.href = 'https://api.scryfall.com';\n    document.head.appendChild(scryfallPreconnect);\n\n    // Add performance meta tags\n    const performanceMeta = document.createElement('meta');\n    performanceMeta.name = 'performance-monitoring';\n    performanceMeta.content = 'enabled';\n    document.head.appendChild(performanceMeta);\n\n    return () => {\n      if (document.head.contains(preconnectLink)) {\n        document.head.removeChild(preconnectLink);\n      }\n      if (document.head.contains(scryfallPreconnect)) {\n        document.head.removeChild(scryfallPreconnect);\n      }\n      if (document.head.contains(performanceMeta)) {\n        document.head.removeChild(performanceMeta);\n      }\n    };\n  }, []);\n\n  // Log performance warnings in development\n  useEffect(() => {\n    // Only run on client side and in development\n    if (typeof window === 'undefined' || isProduction) return;\n\n    // Monitor for slow page loads\n    const checkPageLoad = () => {\n      if (window.performance && window.performance.timing) {\n        const loadTime = window.performance.timing.loadEventEnd - window.performance.timing.navigationStart;\n        if (loadTime > 3000) {\n          console.warn(`🐌 Page load took ${loadTime}ms (threshold: 3000ms)`);\n        }\n      }\n    };\n\n    window.addEventListener('load', checkPageLoad);\n\n    // Monitor for memory leaks\n    const memoryCheck = setInterval(() => {\n      if (window.performance && window.performance.memory) {\n        const memory = window.performance.memory;\n        const usedPercent = (memory.usedJSHeapSize / memory.jsHeapSizeLimit) * 100;\n\n        if (usedPercent > 80) {\n          console.warn(`🧠 High memory usage: ${usedPercent.toFixed(1)}%`);\n        }\n      }\n    }, 30000); // Check every 30 seconds\n\n    return () => {\n      window.removeEventListener('load', checkPageLoad);\n      clearInterval(memoryCheck);\n    };\n  }, [isProduction]);\n\n  return (\n    <>\n      {children}\n      {showDashboard && (\n        <PerformanceDashboard\n          isVisible={showDashboard}\n          onClose={() => setShowDashboard(false)}\n        />\n      )}\n\n      {/* Performance-related styles */}\n      <style jsx>{`\n        /* Optimise font loading */\n        @font-face {\n          font-family: 'system';\n          font-style: normal;\n          font-weight: 300;\n          src: local('.SFNSText-Light'), local('.HelveticaNeueDeskInterface-Light'),\n               local('.LucidaGrandeUI'), local('Ubuntu Light'), local('Segoe UI Light'),\n               local('Roboto-Light'), local('DroidSans'), local('Tahoma');\n        }\n\n        /* Smooth scrolling performance */\n        * {\n          scroll-behavior: smooth;\n        }\n\n        /* GPU acceleration for animations */\n        .performance-optimised {\n          will-change: transform;\n          transform: translateZ(0);\n        }\n\n        /* Reduce motion for users who prefer it */\n        @media (prefers-reduced-motion: reduce) {\n          * {\n            animation-duration: 0.01ms !important;\n            animation-iteration-count: 1 !important;\n            transition-duration: 0.01ms !important;\n            scroll-behavior: auto !important;\n          }\n        }\n\n        /* Dark mode performance optimisation */\n        @media (prefers-color-scheme: dark) {\n          * {\n            color-scheme: dark;\n          }\n        }\n\n        /* Print optimisations */\n        @media print {\n          .performance-dashboard,\n          .performance-toggle {\n            display: none !important;\n          }\n        }\n      `}</style>\n    </>\n  );\n};\n\nexport default PerformanceWrapper;\n"],"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","ignoreList":[]}