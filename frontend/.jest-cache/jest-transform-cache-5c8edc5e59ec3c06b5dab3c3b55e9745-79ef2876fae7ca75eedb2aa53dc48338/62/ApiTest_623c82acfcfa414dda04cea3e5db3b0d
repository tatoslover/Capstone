acef5b020cc167b3eca75e4997864fb1
"use strict";

/* istanbul ignore next */
function cov_4btmzfiav() {
  var path = "/Users/samuellove/Documents/GitHub/Capstone/frontend/components/ApiTest.js";
  var hash = "1ec91064abdf4014ddc80d867e918ccbb881ec6e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/samuellove/Documents/GitHub/Capstone/frontend/components/ApiTest.js",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 82
        }
      },
      "5": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "6": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 53
        }
      },
      "7": {
        start: {
          line: 15,
          column: 40
        },
        end: {
          line: 15,
          column: 95
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "9": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 316,
          column: 1
        }
      },
      "10": {
        start: {
          line: 22,
          column: 42
        },
        end: {
          line: 22,
          column: 66
        }
      },
      "11": {
        start: {
          line: 23,
          column: 38
        },
        end: {
          line: 23,
          column: 65
        }
      },
      "12": {
        start: {
          line: 24,
          column: 42
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "13": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 35,
          column: 15
        }
      },
      "15": {
        start: {
          line: 26,
          column: 31
        },
        end: {
          line: 35,
          column: 13
        }
      },
      "16": {
        start: {
          line: 37,
          column: 25
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 27
        }
      },
      "18": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 39
        }
      },
      "20": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "21": {
        start: {
          line: 43,
          column: 27
        },
        end: {
          line: 43,
          column: 64
        }
      },
      "22": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 79
        }
      },
      "23": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 61
        }
      },
      "24": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "25": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 42
        }
      },
      "26": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "27": {
        start: {
          line: 53,
          column: 26
        },
        end: {
          line: 53,
          column: 69
        }
      },
      "28": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 78
        }
      },
      "29": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "30": {
        start: {
          line: 57,
          column: 29
        },
        end: {
          line: 57,
          column: 84
        }
      },
      "31": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 82
        }
      },
      "32": {
        start: {
          line: 61,
          column: 29
        },
        end: {
          line: 63,
          column: 14
        }
      },
      "33": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 80
        }
      },
      "34": {
        start: {
          line: 66,
          column: 32
        },
        end: {
          line: 68,
          column: 14
        }
      },
      "35": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 90
        }
      },
      "36": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 67
        }
      },
      "37": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 74
        }
      },
      "38": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 64
        }
      },
      "39": {
        start: {
          line: 77,
          column: 31
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "40": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 43
        }
      },
      "41": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "42": {
        start: {
          line: 81,
          column: 31
        },
        end: {
          line: 81,
          column: 85
        }
      },
      "43": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 94
        }
      },
      "44": {
        start: {
          line: 84,
          column: 33
        },
        end: {
          line: 91,
          column: 14
        }
      },
      "45": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 86
        }
      },
      "46": {
        start: {
          line: 94,
          column: 37
        },
        end: {
          line: 96,
          column: 14
        }
      },
      "47": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 80
        }
      },
      "48": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 76
        }
      },
      "49": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 84
        }
      },
      "50": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 65
        }
      },
      "51": {
        start: {
          line: 105,
          column: 25
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "52": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 44
        }
      },
      "53": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "54": {
        start: {
          line: 109,
          column: 34
        },
        end: {
          line: 109,
          column: 88
        }
      },
      "55": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 89
        }
      },
      "56": {
        start: {
          line: 112,
          column: 32
        },
        end: {
          line: 112,
          column: 75
        }
      },
      "57": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 93
        }
      },
      "58": {
        start: {
          line: 115,
          column: 33
        },
        end: {
          line: 115,
          column: 84
        }
      },
      "59": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 100
        }
      },
      "60": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 66
        }
      },
      "61": {
        start: {
          line: 121,
          column: 24
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "62": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 27
        }
      },
      "63": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 23
        }
      },
      "64": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 31
        }
      },
      "65": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 63
        }
      },
      "66": {
        start: {
          line: 125,
          column: 37
        },
        end: {
          line: 125,
          column: 61
        }
      },
      "67": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 29
        }
      },
      "68": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 63
        }
      },
      "69": {
        start: {
          line: 127,
          column: 37
        },
        end: {
          line: 127,
          column: 61
        }
      },
      "70": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 35
        }
      },
      "71": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 63
        }
      },
      "72": {
        start: {
          line: 129,
          column: 37
        },
        end: {
          line: 129,
          column: 61
        }
      },
      "73": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 29
        }
      },
      "74": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 27
        }
      },
      "75": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 28
        }
      },
      "76": {
        start: {
          line: 134,
          column: 27
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "77": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "78": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 33
        }
      },
      "79": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 33
        }
      },
      "80": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 33
        }
      },
      "81": {
        start: {
          line: 144,
          column: 24
        },
        end: {
          line: 144,
          column: 75
        }
      },
      "82": {
        start: {
          line: 144,
          column: 48
        },
        end: {
          line: 144,
          column: 67
        }
      },
      "83": {
        start: {
          line: 145,
          column: 24
        },
        end: {
          line: 145,
          column: 75
        }
      },
      "84": {
        start: {
          line: 145,
          column: 48
        },
        end: {
          line: 145,
          column: 67
        }
      },
      "85": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 315,
          column: 7
        }
      },
      "86": {
        start: {
          line: 273,
          column: 66
        },
        end: {
          line: 308,
          column: 33
        }
      },
      "87": {
        start: {
          line: 317,
          column: 17
        },
        end: {
          line: 317,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 21,
            column: 17
          }
        },
        loc: {
          start: {
            line: 21,
            column: 20
          },
          end: {
            line: 316,
            column: 1
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 23
          }
        },
        loc: {
          start: {
            line: 25,
            column: 52
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 23
          },
          end: {
            line: 26,
            column: 24
          }
        },
        loc: {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 35,
            column: 13
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 37,
            column: 26
          }
        },
        loc: {
          start: {
            line: 37,
            column: 29
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 40,
            column: 28
          }
        },
        loc: {
          start: {
            line: 40,
            column: 37
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 40
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 49,
            column: 25
          },
          end: {
            line: 49,
            column: 26
          }
        },
        loc: {
          start: {
            line: 49,
            column: 35
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 49
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 77,
            column: 31
          },
          end: {
            line: 77,
            column: 32
          }
        },
        loc: {
          start: {
            line: 77,
            column: 41
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 77
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 105,
            column: 25
          },
          end: {
            line: 105,
            column: 26
          }
        },
        loc: {
          start: {
            line: 105,
            column: 35
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 105
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 121,
            column: 24
          },
          end: {
            line: 121,
            column: 25
          }
        },
        loc: {
          start: {
            line: 121,
            column: 34
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 121
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 125,
            column: 26
          },
          end: {
            line: 125,
            column: 27
          }
        },
        loc: {
          start: {
            line: 125,
            column: 37
          },
          end: {
            line: 125,
            column: 61
          }
        },
        line: 125
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 127,
            column: 26
          },
          end: {
            line: 127,
            column: 27
          }
        },
        loc: {
          start: {
            line: 127,
            column: 37
          },
          end: {
            line: 127,
            column: 61
          }
        },
        line: 127
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 129,
            column: 26
          },
          end: {
            line: 129,
            column: 27
          }
        },
        loc: {
          start: {
            line: 129,
            column: 37
          },
          end: {
            line: 129,
            column: 61
          }
        },
        line: 129
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 134,
            column: 27
          },
          end: {
            line: 134,
            column: 28
          }
        },
        loc: {
          start: {
            line: 134,
            column: 37
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 134
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 144,
            column: 43
          },
          end: {
            line: 144,
            column: 44
          }
        },
        loc: {
          start: {
            line: 144,
            column: 48
          },
          end: {
            line: 144,
            column: 67
          }
        },
        line: 144
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 145,
            column: 43
          },
          end: {
            line: 145,
            column: 44
          }
        },
        loc: {
          start: {
            line: 145,
            column: 48
          },
          end: {
            line: 145,
            column: 67
          }
        },
        line: 145
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 273,
            column: 42
          },
          end: {
            line: 273,
            column: 43
          }
        },
        loc: {
          start: {
            line: 273,
            column: 66
          },
          end: {
            line: 308,
            column: 33
          }
        },
        line: 273
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 32
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 37
          },
          end: {
            line: 25,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 25,
            column: 49
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "4": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 137,
            column: 33
          }
        }, {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 139,
            column: 33
          }
        }, {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 141,
            column: 33
          }
        }],
        line: 135
      },
      "5": {
        loc: {
          start: {
            line: 179,
            column: 34
          },
          end: {
            line: 179,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 46
          },
          end: {
            line: 179,
            column: 64
          }
        }, {
          start: {
            line: 179,
            column: 67
          },
          end: {
            line: 179,
            column: 82
          }
        }],
        line: 179
      },
      "6": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 226,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 21
          }
        }, {
          start: {
            line: 217,
            column: 25
          },
          end: {
            line: 217,
            column: 36
          }
        }, {
          start: {
            line: 217,
            column: 54
          },
          end: {
            line: 226,
            column: 14
          }
        }],
        line: 217
      },
      "7": {
        loc: {
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 270,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 227,
            column: 34
          }
        }, {
          start: {
            line: 227,
            column: 52
          },
          end: {
            line: 270,
            column: 14
          }
        }],
        line: 227
      },
      "8": {
        loc: {
          start: {
            line: 285,
            column: 44
          },
          end: {
            line: 285,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 285,
            column: 71
          },
          end: {
            line: 285,
            column: 74
          }
        }, {
          start: {
            line: 285,
            column: 77
          },
          end: {
            line: 285,
            column: 80
          }
        }],
        line: 285
      },
      "9": {
        loc: {
          start: {
            line: 300,
            column: 28
          },
          end: {
            line: 306,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 28
          },
          end: {
            line: 300,
            column: 42
          }
        }, {
          start: {
            line: 300,
            column: 60
          },
          end: {
            line: 306,
            column: 30
          }
        }],
        line: 300
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/samuellove/Documents/GitHub/Capstone/frontend/components/ApiTest.js"],
      sourcesContent: ["import { useState, useEffect } from \"react\";\nimport { apiService } from \"../services/apiService\";\nimport ConnectionStatus from \"./ConnectionStatus\";\n\nconst ApiTest = () => {\n  const [testResults, setTestResults] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentTest, setCurrentTest] = useState(\"\");\n\n  const addResult = (name, status, details = \"\") => {\n    setTestResults((prev) => [\n      ...prev,\n      {\n        id: Date.now(),\n        name,\n        status,\n        details,\n        timestamp: new Date().toLocaleTimeString(),\n      },\n    ]);\n  };\n\n  const clearResults = () => {\n    setTestResults([]);\n  };\n\n  const runHealthCheck = async () => {\n    setCurrentTest(\"Health Check\");\n    try {\n      const result = await apiService.health();\n      addResult(\"Health Check\", \"PASS\", JSON.stringify(result, null, 2));\n    } catch (error) {\n      addResult(\"Health Check\", \"FAIL\", error.message);\n    }\n  };\n\n  const runUserTests = async () => {\n    setCurrentTest(\"User CRUD Tests\");\n\n    try {\n      // Get all users\n      const users = await apiService.users.getAll();\n      addResult(\"Get All Users\", \"PASS\", `Found ${users.length} users`);\n\n      if (users.length > 0) {\n        // Get first user\n        const user = await apiService.users.getById(users[0].id);\n        addResult(\"Get User by ID\", \"PASS\", `Username: ${user.username}`);\n      }\n\n      // Create test user\n      const testUser = await apiService.users.create({\n        username: `test_user_${Date.now()}`,\n      });\n      addResult(\"Create User\", \"PASS\", `Created user ID: ${testUser.id}`);\n\n      // Update test user\n      const updatedUser = await apiService.users.update(testUser.id, {\n        username: `updated_${testUser.username}`,\n      });\n      addResult(\n        \"Update User\",\n        \"PASS\",\n        `Updated username: ${updatedUser.username}`,\n      );\n\n      // Delete test user\n      await apiService.users.delete(testUser.id);\n      addResult(\"Delete User\", \"PASS\", \"User deleted successfully\");\n    } catch (error) {\n      addResult(\"User CRUD Tests\", \"FAIL\", error.message);\n    }\n  };\n\n  const runFavouritesTests = async () => {\n    setCurrentTest(\"Favourites Tests\");\n\n    try {\n      // Get favourites for first user\n      const favourites = await apiService.favourites.getByUserId(1);\n      addResult(\n        \"Get User Favourites\",\n        \"PASS\",\n        `Found ${favourites.length} favourites`,\n      );\n\n      // Add a test favourite\n      const newFavourite = await apiService.favourites.create({\n        user_id: 1,\n        card_name: \"Test Card\",\n        ability_type: \"Test Ability\",\n        mana_cost: \"{2}{R}\",\n        color_identity: \"R\",\n        notes: \"This is a test favourite\",\n      });\n      addResult(\"Create Favourite\", \"PASS\", `Added: ${newFavourite.card_name}`);\n\n      // Update the favourite\n      const updatedFavourite = await apiService.favourites.update(\n        newFavourite.id,\n        {\n          notes: \"Updated test notes\",\n        },\n      );\n      addResult(\"Update Favourite\", \"PASS\", \"Notes updated successfully\");\n\n      // Delete the favourite\n      await apiService.favourites.delete(newFavourite.id);\n      addResult(\"Delete Favourite\", \"PASS\", \"Favourite deleted successfully\");\n    } catch (error) {\n      addResult(\"Favourites Tests\", \"FAIL\", error.message);\n    }\n  };\n\n  const runCardTests = async () => {\n    setCurrentTest(\"Card Search Tests\");\n\n    try {\n      // Search for cards\n      const searchResults = await apiService.cards.search(\"lightning\");\n      addResult(\n        \"Card Search\",\n        \"PASS\",\n        `Found ${searchResults.data.length} cards`,\n      );\n\n      // Get random cards\n      const randomCards = await apiService.cards.random();\n      addResult(\n        \"Random Cards\",\n        \"PASS\",\n        `Got ${randomCards.data.length} random cards`,\n      );\n\n      // Get random cards by ability\n      const abilityCards = await apiService.cards.random(\"flying\");\n      addResult(\n        \"Cards by Ability\",\n        \"PASS\",\n        `Found ${abilityCards.data.length} flying cards`,\n      );\n    } catch (error) {\n      addResult(\"Card Search Tests\", \"FAIL\", error.message);\n    }\n  };\n\n  const runAllTests = async () => {\n    setIsRunning(true);\n    clearResults();\n\n    await runHealthCheck();\n    await new Promise((resolve) => setTimeout(resolve, 500)); // Small delay between tests\n\n    await runUserTests();\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    await runFavouritesTests();\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    await runCardTests();\n\n    setCurrentTest(\"\");\n    setIsRunning(false);\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case \"PASS\":\n        return \"#22c55e\";\n      case \"FAIL\":\n        return \"#ef4444\";\n      default:\n        return \"#6b7280\";\n    }\n  };\n\n  const passedTests = testResults.filter((t) => t.status === \"PASS\").length;\n  const failedTests = testResults.filter((t) => t.status === \"FAIL\").length;\n\n  return (\n    <div className=\"api-test-container\">\n      <div className=\"test-header\">\n        <h1>API Testing Dashboard</h1>\n        <p>\n          Test the connection between frontend and backend (real or mock API)\n        </p>\n\n        <div className=\"connection-status-display\">\n          <ConnectionStatus showDetails={true} />\n        </div>\n      </div>\n\n      <div className=\"test-controls\">\n        <button\n          onClick={runAllTests}\n          disabled={isRunning}\n          className=\"btn\"\n          style={{ fontSize: \"1rem\", padding: \"1rem 2rem\" }}\n        >\n          {isRunning ? \"Running Tests...\" : \"Run All Tests\"}\n        </button>\n\n        <div className=\"individual-tests\">\n          <button\n            onClick={runHealthCheck}\n            disabled={isRunning}\n            className=\"btn btn-outline\"\n          >\n            Health Check\n          </button>\n          <button\n            onClick={runUserTests}\n            disabled={isRunning}\n            className=\"btn btn-outline\"\n          >\n            User CRUD\n          </button>\n          <button\n            onClick={runFavouritesTests}\n            disabled={isRunning}\n            className=\"btn btn-outline\"\n          >\n            Favourites\n          </button>\n          <button\n            onClick={runCardTests}\n            disabled={isRunning}\n            className=\"btn btn-outline\"\n          >\n            Card Search\n          </button>\n        </div>\n\n        <button onClick={clearResults} className=\"btn btn-danger\">\n          Clear Results\n        </button>\n      </div>\n\n      {isRunning && currentTest && (\n        <div className=\"current-test\">\n          <div className=\"spinner\"></div>\n          Running: {currentTest}\n        </div>\n      )}\n\n      {testResults.length > 0 && (\n        <div className=\"card test-summary\">\n          <h3 className=\"card-title\">Test Summary</h3>\n          <div className=\"summary-stats\">\n            <span className=\"stat stat-total\">Total: {testResults.length}</span>\n            <span className=\"stat stat-pass\">Passed: {passedTests}</span>\n            <span className=\"stat stat-fail\">Failed: {failedTests}</span>\n            <span className=\"stat stat-rate\">\n              Success Rate:{\" \"}\n              {Math.round((passedTests / testResults.length) * 100)}%\n            </span>\n          </div>\n        </div>\n      )}\n\n      <div className=\"test-results\">\n        {testResults.map((result) => (\n          <div\n            key={result.id}\n            className={`test-result test-result-${result.status.toLowerCase()}`}\n          >\n            <div className=\"result-header\">\n              <span\n                className=\"result-status\"\n                style={{ color: getStatusColor(result.status) }}\n              >\n                {result.status === \"PASS\" ? \"\u2705\" : \"\u274C\"} {result.status}\n              </span>\n              <span className=\"result-name\">{result.name}</span>\n              <span className=\"result-time\">{result.timestamp}</span>\n            </div>\n            {result.details && (\n              <div className=\"result-details\">\n                <pre>{result.details}</pre>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      <style jsx>{`\n        .api-test-container {\n          max-width: 1200px;\n          margin: 0 auto;\n          padding: 2rem;\n        }\n\n        .test-header {\n          text-align: center;\n          margin-bottom: 2rem;\n        }\n\n        .test-header h1 {\n          color: var(--theme-accent);\n          margin-bottom: 0.5rem;\n        }\n\n        .test-header p {\n          color: var(--theme-textLight);\n          margin-bottom: 1rem;\n        }\n\n        .connection-status-display {\n          display: flex;\n          justify-content: center;\n          margin-top: 1rem;\n        }\n\n        .test-controls {\n          display: flex;\n          flex-direction: column;\n          gap: 1rem;\n          margin-bottom: 2rem;\n          align-items: center;\n        }\n\n        .individual-tests {\n          display: flex;\n          gap: 0.5rem;\n          flex-wrap: wrap;\n          justify-content: center;\n        }\n\n        .current-test {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 0.5rem;\n          padding: 1rem;\n          background: rgba(255, 193, 7, 0.1);\n          border: 1px solid var(--theme-warning);\n          border-radius: 0.5rem;\n          margin-bottom: 1rem;\n          color: var(--theme-warning);\n          font-weight: 500;\n        }\n\n        .spinner {\n          width: 1rem;\n          height: 1rem;\n          border: 2px solid var(--theme-warning);\n          border-top: 2px solid transparent;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n        }\n\n        @keyframes spin {\n          0% {\n            transform: rotate(0deg);\n          }\n          100% {\n            transform: rotate(360deg);\n          }\n        }\n\n        .test-summary {\n          margin-bottom: 1rem;\n        }\n\n        .summary-stats {\n          display: flex;\n          gap: 1rem;\n          flex-wrap: wrap;\n        }\n\n        .stat {\n          font-weight: 500;\n          padding: 0.25rem 0.5rem;\n          border-radius: 0.25rem;\n          font-size: 0.875rem;\n        }\n\n        .stat-total {\n          background: rgba(26, 26, 26, 0.9);\n          color: var(--theme-text);\n          border: 1px solid var(--theme-border);\n        }\n\n        .stat-pass {\n          background: rgba(40, 167, 69, 0.1);\n          color: var(--theme-success);\n          border: 1px solid var(--theme-success);\n        }\n\n        .stat-fail {\n          background: rgba(220, 53, 69, 0.1);\n          color: var(--theme-error);\n          border: 1px solid var(--theme-error);\n        }\n\n        .stat-rate {\n          background: rgba(0, 123, 255, 0.1);\n          color: var(--theme-primary);\n          border: 1px solid var(--theme-primary);\n        }\n\n        .test-results {\n          display: flex;\n          flex-direction: column;\n          gap: 0.5rem;\n        }\n\n        .test-result {\n          background: rgba(26, 26, 26, 0.95);\n          backdrop-filter: blur(2px);\n          border: 1px solid var(--theme-border);\n          border-radius: 0.5rem;\n          padding: 1rem;\n        }\n\n        .test-result-pass {\n          border-left: 4px solid var(--theme-success);\n        }\n\n        .test-result-fail {\n          border-left: 4px solid var(--theme-error);\n        }\n\n        .result-header {\n          display: flex;\n          align-items: center;\n          gap: 1rem;\n          font-weight: 500;\n        }\n\n        .result-status {\n          font-size: 0.875rem;\n        }\n\n        .result-name {\n          flex: 1;\n          color: var(--theme-text);\n        }\n\n        .result-time {\n          font-size: 0.75rem;\n          color: var(--theme-textLight);\n          font-weight: normal;\n        }\n\n        .result-details {\n          margin-top: 0.5rem;\n          padding-top: 0.5rem;\n          border-top: 1px solid var(--theme-border);\n        }\n\n        .result-details pre {\n          font-size: 0.75rem;\n          color: var(--theme-textLight);\n          background: rgba(0, 0, 0, 0.3);\n          padding: 0.5rem;\n          border-radius: 0.25rem;\n          overflow-x: auto;\n          white-space: pre-wrap;\n          margin: 0;\n          border: 1px solid var(--theme-border);\n        }\n\n        @media (max-width: 640px) {\n          .api-test-container {\n            padding: 1rem;\n          }\n\n          .individual-tests {\n            flex-direction: column;\n            align-items: center;\n          }\n\n          .summary-stats {\n            flex-direction: column;\n            gap: 0.5rem;\n          }\n\n          .result-header {\n            flex-direction: column;\n            align-items: flex-start;\n            gap: 0.5rem;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ApiTest;\n"],
      names: ["ApiTest", "testResults", "setTestResults", "useState", "isRunning", "setIsRunning", "currentTest", "setCurrentTest", "addResult", "name", "status", "details", "prev", "id", "Date", "now", "timestamp", "toLocaleTimeString", "clearResults", "runHealthCheck", "result", "apiService", "health", "JSON", "stringify", "error", "message", "runUserTests", "users", "getAll", "length", "user", "getById", "username", "testUser", "create", "updatedUser", "update", "delete", "runFavouritesTests", "favourites", "getByUserId", "newFavourite", "user_id", "card_name", "ability_type", "mana_cost", "color_identity", "notes", "updatedFavourite", "runCardTests", "searchResults", "cards", "search", "data", "randomCards", "random", "abilityCards", "runAllTests", "Promise", "resolve", "setTimeout", "getStatusColor", "passedTests", "filter", "t", "failedTests", "div", "h1", "p", "ConnectionStatus", "showDetails", "button", "onClick", "disabled", "style", "fontSize", "padding", "h3", "span", "Math", "round", "map", "toLowerCase", "color", "pre"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1ec91064abdf4014ddc80d867e918ccbb881ec6e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4btmzfiav = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4btmzfiav();
cov_4btmzfiav().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_4btmzfiav().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_4btmzfiav().f[0]++;
    cov_4btmzfiav().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_4btmzfiav().s[3]++, require("react/jsx-runtime"));
const _style =
/* istanbul ignore next */
(/*#__PURE__*/cov_4btmzfiav().s[4]++, _interop_require_default(require("styled-jsx/style")));
const _react =
/* istanbul ignore next */
(cov_4btmzfiav().s[5]++, require("react"));
const _apiService =
/* istanbul ignore next */
(cov_4btmzfiav().s[6]++, require("../services/apiService"));
const _ConnectionStatus =
/* istanbul ignore next */
(/*#__PURE__*/cov_4btmzfiav().s[7]++, _interop_require_default(require("./ConnectionStatus")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_4btmzfiav().f[1]++;
  cov_4btmzfiav().s[8]++;
  return /* istanbul ignore next */(cov_4btmzfiav().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_4btmzfiav().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_4btmzfiav().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_4btmzfiav().b[0][1]++, {
    default: obj
  });
}
/* istanbul ignore next */
cov_4btmzfiav().s[9]++;
const ApiTest = () => {
  /* istanbul ignore next */
  cov_4btmzfiav().f[2]++;
  const [testResults, setTestResults] =
  /* istanbul ignore next */
  (cov_4btmzfiav().s[10]++, (0, _react.useState)([]));
  const [isRunning, setIsRunning] =
  /* istanbul ignore next */
  (cov_4btmzfiav().s[11]++, (0, _react.useState)(false));
  const [currentTest, setCurrentTest] =
  /* istanbul ignore next */
  (cov_4btmzfiav().s[12]++, (0, _react.useState)(""));
  /* istanbul ignore next */
  cov_4btmzfiav().s[13]++;
  const addResult = (name, status, details =
  /* istanbul ignore next */
  (cov_4btmzfiav().b[2][0]++, "")) => {
    /* istanbul ignore next */
    cov_4btmzfiav().f[3]++;
    cov_4btmzfiav().s[14]++;
    setTestResults(prev => {
      /* istanbul ignore next */
      cov_4btmzfiav().f[4]++;
      cov_4btmzfiav().s[15]++;
      return [...prev, {
        id: Date.now(),
        name,
        status,
        details,
        timestamp: new Date().toLocaleTimeString()
      }];
    });
  };
  /* istanbul ignore next */
  cov_4btmzfiav().s[16]++;
  const clearResults = () => {
    /* istanbul ignore next */
    cov_4btmzfiav().f[5]++;
    cov_4btmzfiav().s[17]++;
    setTestResults([]);
  };
  /* istanbul ignore next */
  cov_4btmzfiav().s[18]++;
  const runHealthCheck = async () => {
    /* istanbul ignore next */
    cov_4btmzfiav().f[6]++;
    cov_4btmzfiav().s[19]++;
    setCurrentTest("Health Check");
    /* istanbul ignore next */
    cov_4btmzfiav().s[20]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_4btmzfiav().s[21]++, await _apiService.apiService.health());
      /* istanbul ignore next */
      cov_4btmzfiav().s[22]++;
      addResult("Health Check", "PASS", JSON.stringify(result, null, 2));
    } catch (error) {
      /* istanbul ignore next */
      cov_4btmzfiav().s[23]++;
      addResult("Health Check", "FAIL", error.message);
    }
  };
  /* istanbul ignore next */
  cov_4btmzfiav().s[24]++;
  const runUserTests = async () => {
    /* istanbul ignore next */
    cov_4btmzfiav().f[7]++;
    cov_4btmzfiav().s[25]++;
    setCurrentTest("User CRUD Tests");
    /* istanbul ignore next */
    cov_4btmzfiav().s[26]++;
    try {
      // Get all users
      const users =
      /* istanbul ignore next */
      (cov_4btmzfiav().s[27]++, await _apiService.apiService.users.getAll());
      /* istanbul ignore next */
      cov_4btmzfiav().s[28]++;
      addResult("Get All Users", "PASS", `Found ${users.length} users`);
      /* istanbul ignore next */
      cov_4btmzfiav().s[29]++;
      if (users.length > 0) {
        /* istanbul ignore next */
        cov_4btmzfiav().b[3][0]++;
        // Get first user
        const user =
        /* istanbul ignore next */
        (cov_4btmzfiav().s[30]++, await _apiService.apiService.users.getById(users[0].id));
        /* istanbul ignore next */
        cov_4btmzfiav().s[31]++;
        addResult("Get User by ID", "PASS", `Username: ${user.username}`);
      } else
      /* istanbul ignore next */
      {
        cov_4btmzfiav().b[3][1]++;
      }
      // Create test user
      const testUser =
      /* istanbul ignore next */
      (cov_4btmzfiav().s[32]++, await _apiService.apiService.users.create({
        username: `test_user_${Date.now()}`
      }));
      /* istanbul ignore next */
      cov_4btmzfiav().s[33]++;
      addResult("Create User", "PASS", `Created user ID: ${testUser.id}`);
      // Update test user
      const updatedUser =
      /* istanbul ignore next */
      (cov_4btmzfiav().s[34]++, await _apiService.apiService.users.update(testUser.id, {
        username: `updated_${testUser.username}`
      }));
      /* istanbul ignore next */
      cov_4btmzfiav().s[35]++;
      addResult("Update User", "PASS", `Updated username: ${updatedUser.username}`);
      // Delete test user
      /* istanbul ignore next */
      cov_4btmzfiav().s[36]++;
      await _apiService.apiService.users.delete(testUser.id);
      /* istanbul ignore next */
      cov_4btmzfiav().s[37]++;
      addResult("Delete User", "PASS", "User deleted successfully");
    } catch (error) {
      /* istanbul ignore next */
      cov_4btmzfiav().s[38]++;
      addResult("User CRUD Tests", "FAIL", error.message);
    }
  };
  /* istanbul ignore next */
  cov_4btmzfiav().s[39]++;
  const runFavouritesTests = async () => {
    /* istanbul ignore next */
    cov_4btmzfiav().f[8]++;
    cov_4btmzfiav().s[40]++;
    setCurrentTest("Favourites Tests");
    /* istanbul ignore next */
    cov_4btmzfiav().s[41]++;
    try {
      // Get favourites for first user
      const favourites =
      /* istanbul ignore next */
      (cov_4btmzfiav().s[42]++, await _apiService.apiService.favourites.getByUserId(1));
      /* istanbul ignore next */
      cov_4btmzfiav().s[43]++;
      addResult("Get User Favourites", "PASS", `Found ${favourites.length} favourites`);
      // Add a test favourite
      const newFavourite =
      /* istanbul ignore next */
      (cov_4btmzfiav().s[44]++, await _apiService.apiService.favourites.create({
        user_id: 1,
        card_name: "Test Card",
        ability_type: "Test Ability",
        mana_cost: "{2}{R}",
        color_identity: "R",
        notes: "This is a test favourite"
      }));
      /* istanbul ignore next */
      cov_4btmzfiav().s[45]++;
      addResult("Create Favourite", "PASS", `Added: ${newFavourite.card_name}`);
      // Update the favourite
      const updatedFavourite =
      /* istanbul ignore next */
      (cov_4btmzfiav().s[46]++, await _apiService.apiService.favourites.update(newFavourite.id, {
        notes: "Updated test notes"
      }));
      /* istanbul ignore next */
      cov_4btmzfiav().s[47]++;
      addResult("Update Favourite", "PASS", "Notes updated successfully");
      // Delete the favourite
      /* istanbul ignore next */
      cov_4btmzfiav().s[48]++;
      await _apiService.apiService.favourites.delete(newFavourite.id);
      /* istanbul ignore next */
      cov_4btmzfiav().s[49]++;
      addResult("Delete Favourite", "PASS", "Favourite deleted successfully");
    } catch (error) {
      /* istanbul ignore next */
      cov_4btmzfiav().s[50]++;
      addResult("Favourites Tests", "FAIL", error.message);
    }
  };
  /* istanbul ignore next */
  cov_4btmzfiav().s[51]++;
  const runCardTests = async () => {
    /* istanbul ignore next */
    cov_4btmzfiav().f[9]++;
    cov_4btmzfiav().s[52]++;
    setCurrentTest("Card Search Tests");
    /* istanbul ignore next */
    cov_4btmzfiav().s[53]++;
    try {
      // Search for cards
      const searchResults =
      /* istanbul ignore next */
      (cov_4btmzfiav().s[54]++, await _apiService.apiService.cards.search("lightning"));
      /* istanbul ignore next */
      cov_4btmzfiav().s[55]++;
      addResult("Card Search", "PASS", `Found ${searchResults.data.length} cards`);
      // Get random cards
      const randomCards =
      /* istanbul ignore next */
      (cov_4btmzfiav().s[56]++, await _apiService.apiService.cards.random());
      /* istanbul ignore next */
      cov_4btmzfiav().s[57]++;
      addResult("Random Cards", "PASS", `Got ${randomCards.data.length} random cards`);
      // Get random cards by ability
      const abilityCards =
      /* istanbul ignore next */
      (cov_4btmzfiav().s[58]++, await _apiService.apiService.cards.random("flying"));
      /* istanbul ignore next */
      cov_4btmzfiav().s[59]++;
      addResult("Cards by Ability", "PASS", `Found ${abilityCards.data.length} flying cards`);
    } catch (error) {
      /* istanbul ignore next */
      cov_4btmzfiav().s[60]++;
      addResult("Card Search Tests", "FAIL", error.message);
    }
  };
  /* istanbul ignore next */
  cov_4btmzfiav().s[61]++;
  const runAllTests = async () => {
    /* istanbul ignore next */
    cov_4btmzfiav().f[10]++;
    cov_4btmzfiav().s[62]++;
    setIsRunning(true);
    /* istanbul ignore next */
    cov_4btmzfiav().s[63]++;
    clearResults();
    /* istanbul ignore next */
    cov_4btmzfiav().s[64]++;
    await runHealthCheck();
    /* istanbul ignore next */
    cov_4btmzfiav().s[65]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_4btmzfiav().f[11]++;
      cov_4btmzfiav().s[66]++;
      return setTimeout(resolve, 500);
    }); // Small delay between tests
    /* istanbul ignore next */
    cov_4btmzfiav().s[67]++;
    await runUserTests();
    /* istanbul ignore next */
    cov_4btmzfiav().s[68]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_4btmzfiav().f[12]++;
      cov_4btmzfiav().s[69]++;
      return setTimeout(resolve, 500);
    });
    /* istanbul ignore next */
    cov_4btmzfiav().s[70]++;
    await runFavouritesTests();
    /* istanbul ignore next */
    cov_4btmzfiav().s[71]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_4btmzfiav().f[13]++;
      cov_4btmzfiav().s[72]++;
      return setTimeout(resolve, 500);
    });
    /* istanbul ignore next */
    cov_4btmzfiav().s[73]++;
    await runCardTests();
    /* istanbul ignore next */
    cov_4btmzfiav().s[74]++;
    setCurrentTest("");
    /* istanbul ignore next */
    cov_4btmzfiav().s[75]++;
    setIsRunning(false);
  };
  /* istanbul ignore next */
  cov_4btmzfiav().s[76]++;
  const getStatusColor = status => {
    /* istanbul ignore next */
    cov_4btmzfiav().f[14]++;
    cov_4btmzfiav().s[77]++;
    switch (status) {
      case "PASS":
        /* istanbul ignore next */
        cov_4btmzfiav().b[4][0]++;
        cov_4btmzfiav().s[78]++;
        return "#22c55e";
      case "FAIL":
        /* istanbul ignore next */
        cov_4btmzfiav().b[4][1]++;
        cov_4btmzfiav().s[79]++;
        return "#ef4444";
      default:
        /* istanbul ignore next */
        cov_4btmzfiav().b[4][2]++;
        cov_4btmzfiav().s[80]++;
        return "#6b7280";
    }
  };
  const passedTests =
  /* istanbul ignore next */
  (cov_4btmzfiav().s[81]++, testResults.filter(t => {
    /* istanbul ignore next */
    cov_4btmzfiav().f[15]++;
    cov_4btmzfiav().s[82]++;
    return t.status === "PASS";
  }).length);
  const failedTests =
  /* istanbul ignore next */
  (cov_4btmzfiav().s[83]++, testResults.filter(t => {
    /* istanbul ignore next */
    cov_4btmzfiav().f[16]++;
    cov_4btmzfiav().s[84]++;
    return t.status === "FAIL";
  }).length);
  /* istanbul ignore next */
  cov_4btmzfiav().s[85]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "jsx-72faee7ecbca80f5" + " " + "api-test-container",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "jsx-72faee7ecbca80f5" + " " + "test-header",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
        className: "jsx-72faee7ecbca80f5",
        children: "API Testing Dashboard"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "jsx-72faee7ecbca80f5",
        children: "Test the connection between frontend and backend (real or mock API)"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "jsx-72faee7ecbca80f5" + " " + "connection-status-display",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_ConnectionStatus.default, {
          showDetails: true
        })
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "jsx-72faee7ecbca80f5" + " " + "test-controls",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        onClick: runAllTests,
        disabled: isRunning,
        style: {
          fontSize: "1rem",
          padding: "1rem 2rem"
        },
        className: "jsx-72faee7ecbca80f5" + " " + "btn",
        children: isRunning ?
        /* istanbul ignore next */
        (cov_4btmzfiav().b[5][0]++, "Running Tests...") :
        /* istanbul ignore next */
        (cov_4btmzfiav().b[5][1]++, "Run All Tests")
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "jsx-72faee7ecbca80f5" + " " + "individual-tests",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: runHealthCheck,
          disabled: isRunning,
          className: "jsx-72faee7ecbca80f5" + " " + "btn btn-outline",
          children: "Health Check"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: runUserTests,
          disabled: isRunning,
          className: "jsx-72faee7ecbca80f5" + " " + "btn btn-outline",
          children: "User CRUD"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: runFavouritesTests,
          disabled: isRunning,
          className: "jsx-72faee7ecbca80f5" + " " + "btn btn-outline",
          children: "Favourites"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: runCardTests,
          disabled: isRunning,
          className: "jsx-72faee7ecbca80f5" + " " + "btn btn-outline",
          children: "Card Search"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        onClick: clearResults,
        className: "jsx-72faee7ecbca80f5" + " " + "btn btn-danger",
        children: "Clear Results"
      })]
    }),
    /* istanbul ignore next */
    (cov_4btmzfiav().b[6][0]++, isRunning) &&
    /* istanbul ignore next */
    (cov_4btmzfiav().b[6][1]++, currentTest) &&
    /* istanbul ignore next */
    (cov_4btmzfiav().b[6][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "jsx-72faee7ecbca80f5" + " " + "current-test",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "jsx-72faee7ecbca80f5" + " " + "spinner"
      }), "Running: ", currentTest]
    })),
    /* istanbul ignore next */
    (cov_4btmzfiav().b[7][0]++, testResults.length > 0) &&
    /* istanbul ignore next */
    (cov_4btmzfiav().b[7][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "jsx-72faee7ecbca80f5" + " " + "card test-summary",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "jsx-72faee7ecbca80f5" + " " + "card-title",
        children: "Test Summary"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "jsx-72faee7ecbca80f5" + " " + "summary-stats",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
          className: "jsx-72faee7ecbca80f5" + " " + "stat stat-total",
          children: ["Total: ", testResults.length]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
          className: "jsx-72faee7ecbca80f5" + " " + "stat stat-pass",
          children: ["Passed: ", passedTests]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
          className: "jsx-72faee7ecbca80f5" + " " + "stat stat-fail",
          children: ["Failed: ", failedTests]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
          className: "jsx-72faee7ecbca80f5" + " " + "stat stat-rate",
          children: ["Success Rate:", " ", Math.round(passedTests / testResults.length * 100), "%"]
        })]
      })]
    })), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "jsx-72faee7ecbca80f5" + " " + "test-results",
      children: testResults.map(result => {
        /* istanbul ignore next */
        cov_4btmzfiav().f[17]++;
        cov_4btmzfiav().s[86]++;
        return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "jsx-72faee7ecbca80f5" + " " + `test-result test-result-${result.status.toLowerCase()}`,
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "jsx-72faee7ecbca80f5" + " " + "result-header",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
              style: {
                color: getStatusColor(result.status)
              },
              className: "jsx-72faee7ecbca80f5" + " " + "result-status",
              children: [result.status === "PASS" ?
              /* istanbul ignore next */
              (cov_4btmzfiav().b[8][0]++, "✅") :
              /* istanbul ignore next */
              (cov_4btmzfiav().b[8][1]++, "❌"), " ", result.status]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "jsx-72faee7ecbca80f5" + " " + "result-name",
              children: result.name
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "jsx-72faee7ecbca80f5" + " " + "result-time",
              children: result.timestamp
            })]
          }),
          /* istanbul ignore next */
          (cov_4btmzfiav().b[9][0]++, result.details) &&
          /* istanbul ignore next */
          (cov_4btmzfiav().b[9][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "jsx-72faee7ecbca80f5" + " " + "result-details",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
              className: "jsx-72faee7ecbca80f5",
              children: result.details
            })
          }))]
        }, result.id);
      })
    }), (0, _jsxruntime.jsx)(_style.default, {
      id: "72faee7ecbca80f5",
      children: ".api-test-container.jsx-72faee7ecbca80f5{max-width:1200px;margin:0 auto;padding:2rem}.test-header.jsx-72faee7ecbca80f5{text-align:center;margin-bottom:2rem}.test-header.jsx-72faee7ecbca80f5 h1.jsx-72faee7ecbca80f5{color:var(--theme-accent);margin-bottom:.5rem}.test-header.jsx-72faee7ecbca80f5 p.jsx-72faee7ecbca80f5{color:var(--theme-textLight);margin-bottom:1rem}.connection-status-display.jsx-72faee7ecbca80f5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-top:1rem}.test-controls.jsx-72faee7ecbca80f5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:1rem;margin-bottom:2rem;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center}.individual-tests.jsx-72faee7ecbca80f5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:.5rem;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center}.current-test.jsx-72faee7ecbca80f5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:.5rem;padding:1rem;background:rgba(255,193,7,.1);border:1px solid var(--theme-warning);-webkit-border-radius:.5rem;-moz-border-radius:.5rem;border-radius:.5rem;margin-bottom:1rem;color:var(--theme-warning);font-weight:500}.spinner.jsx-72faee7ecbca80f5{width:1rem;height:1rem;border:2px solid var(--theme-warning);border-top:2px solid transparent;-webkit-border-radius:50%;-moz-border-radius:50%;border-radius:50%;-webkit-animation:spin 1s linear infinite;-moz-animation:spin 1s linear infinite;-o-animation:spin 1s linear infinite;animation:spin 1s linear infinite}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-moz-keyframes spin{0%{-moz-transform:rotate(0deg);transform:rotate(0deg)}100%{-moz-transform:rotate(360deg);transform:rotate(360deg)}}@-o-keyframes spin{0%{-o-transform:rotate(0deg);transform:rotate(0deg)}100%{-o-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);-moz-transform:rotate(360deg);-o-transform:rotate(360deg);transform:rotate(360deg)}}.test-summary.jsx-72faee7ecbca80f5{margin-bottom:1rem}.summary-stats.jsx-72faee7ecbca80f5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;gap:1rem;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}.stat.jsx-72faee7ecbca80f5{font-weight:500;padding:.25rem .5rem;-webkit-border-radius:.25rem;-moz-border-radius:.25rem;border-radius:.25rem;font-size:.875rem}.stat-total.jsx-72faee7ecbca80f5{background:rgba(26,26,26,.9);color:var(--theme-text);border:1px solid var(--theme-border)}.stat-pass.jsx-72faee7ecbca80f5{background:rgba(40,167,69,.1);color:var(--theme-success);border:1px solid var(--theme-success)}.stat-fail.jsx-72faee7ecbca80f5{background:rgba(220,53,69,.1);color:var(--theme-error);border:1px solid var(--theme-error)}.stat-rate.jsx-72faee7ecbca80f5{background:rgba(0,123,255,.1);color:var(--theme-primary);border:1px solid var(--theme-primary)}.test-results.jsx-72faee7ecbca80f5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:.5rem}.test-result.jsx-72faee7ecbca80f5{background:rgba(26,26,26,.95);-webkit-backdrop-filter:blur(2px);backdrop-filter:blur(2px);border:1px solid var(--theme-border);-webkit-border-radius:.5rem;-moz-border-radius:.5rem;border-radius:.5rem;padding:1rem}.test-result-pass.jsx-72faee7ecbca80f5{border-left:4px solid var(--theme-success)}.test-result-fail.jsx-72faee7ecbca80f5{border-left:4px solid var(--theme-error)}.result-header.jsx-72faee7ecbca80f5{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:1rem;font-weight:500}.result-status.jsx-72faee7ecbca80f5{font-size:.875rem}.result-name.jsx-72faee7ecbca80f5{-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;color:var(--theme-text)}.result-time.jsx-72faee7ecbca80f5{font-size:.75rem;color:var(--theme-textLight);font-weight:normal}.result-details.jsx-72faee7ecbca80f5{margin-top:.5rem;padding-top:.5rem;border-top:1px solid var(--theme-border)}.result-details.jsx-72faee7ecbca80f5 pre.jsx-72faee7ecbca80f5{font-size:.75rem;color:var(--theme-textLight);background:rgba(0,0,0,.3);padding:.5rem;-webkit-border-radius:.25rem;-moz-border-radius:.25rem;border-radius:.25rem;overflow-x:auto;white-space:pre-wrap;margin:0;border:1px solid var(--theme-border)}@media(max-width:640px){.api-test-container.jsx-72faee7ecbca80f5{padding:1rem}.individual-tests.jsx-72faee7ecbca80f5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center}.summary-stats.jsx-72faee7ecbca80f5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:.5rem}.result-header.jsx-72faee7ecbca80f5{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-moz-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:.5rem}}"
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_4btmzfiav().s[87]++, ApiTest);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,