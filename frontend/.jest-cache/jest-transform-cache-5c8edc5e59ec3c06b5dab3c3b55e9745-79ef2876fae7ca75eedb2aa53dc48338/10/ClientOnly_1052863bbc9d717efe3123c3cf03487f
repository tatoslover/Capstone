af88ebc9371b1ce848a44ce072a9fcbf
"use strict";

/* istanbul ignore next */
function cov_22jnqm7xm8() {
  var path = "/Users/samuellove/Documents/GitHub/Capstone/frontend/components/ClientOnly.js";
  var hash = "6599af445781d85d9b8b4ec7a7ca8ca78e2a3cc4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/samuellove/Documents/GitHub/Capstone/frontend/components/ClientOnly.js",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 29
        },
        end: {
          line: 11,
          column: 72
        }
      },
      "4": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 51
        }
      },
      "5": {
        start: {
          line: 13,
          column: 39
        },
        end: {
          line: 13,
          column: 51
        }
      },
      "6": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "7": {
        start: {
          line: 15,
          column: 27
        },
        end: {
          line: 15,
          column: 40
        }
      },
      "8": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 20
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 66
        }
      },
      "10": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "11": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 19
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 10
        }
      },
      "14": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 53
        }
      },
      "15": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 30
        }
      },
      "17": {
        start: {
          line: 33,
          column: 17
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "18": {
        start: {
          line: 36,
          column: 32
        },
        end: {
          line: 36,
          column: 88
        }
      },
      "19": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "20": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "21": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 95
        }
      },
      "22": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 44,
          column: 13
        }
      },
      "23": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 57
        }
      },
      "24": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "25": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 25
        }
      },
      "26": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "27": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 31
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 18
        }
      },
      "29": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 72,
          column: 1
        }
      },
      "30": {
        start: {
          line: 64,
          column: 40
        },
        end: {
          line: 64,
          column: 67
        }
      },
      "31": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 67,
          column: 11
        }
      },
      "32": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 28
        }
      },
      "33": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "34": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 24
        }
      },
      "35": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 20
        }
      },
      "36": {
        start: {
          line: 73,
          column: 17
        },
        end: {
          line: 73,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 33
          }
        },
        loc: {
          start: {
            line: 12,
            column: 47
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 16,
            column: 40
          }
        },
        loc: {
          start: {
            line: 16,
            column: 61
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 34
          }
        },
        loc: {
          start: {
            line: 20,
            column: 53
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 63,
            column: 24
          }
        },
        loc: {
          start: {
            line: 63,
            column: 56
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 63
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 65,
            column: 27
          }
        },
        loc: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 65
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 29
          },
          end: {
            line: 17,
            column: 45
          }
        }, {
          start: {
            line: 17,
            column: 48
          },
          end: {
            line: 17,
            column: 65
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 20
          }
        }, {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 21,
            column: 27
          }
        }, {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 21,
            column: 45
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "5": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 20
          }
        }, {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 47
          }
        }, {
          start: {
            line: 24,
            column: 51
          },
          end: {
            line: 24,
            column: 76
          }
        }],
        line: 24
      },
      "6": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "7": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 13
          }
        }, {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 31
          }
        }],
        line: 30
      },
      "8": {
        loc: {
          start: {
            line: 36,
            column: 32
          },
          end: {
            line: 36,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 32
          },
          end: {
            line: 36,
            column: 53
          }
        }, {
          start: {
            line: 36,
            column: 57
          },
          end: {
            line: 36,
            column: 88
          }
        }],
        line: 36
      },
      "9": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "10": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 29
          }
        }, {
          start: {
            line: 38,
            column: 33
          },
          end: {
            line: 38,
            column: 79
          }
        }],
        line: 38
      },
      "11": {
        loc: {
          start: {
            line: 39,
            column: 23
          },
          end: {
            line: 39,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 47
          },
          end: {
            line: 39,
            column: 88
          }
        }, {
          start: {
            line: 39,
            column: 91
          },
          end: {
            line: 39,
            column: 95
          }
        }],
        line: 39
      },
      "12": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: 42,
            column: 19
          },
          end: {
            line: 44,
            column: 13
          }
        }],
        line: 40
      },
      "13": {
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 20
          }
        }, {
          start: {
            line: 40,
            column: 25
          },
          end: {
            line: 40,
            column: 33
          }
        }, {
          start: {
            line: 40,
            column: 37
          },
          end: {
            line: 40,
            column: 45
          }
        }],
        line: 40
      },
      "14": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "15": {
        loc: {
          start: {
            line: 63,
            column: 36
          },
          end: {
            line: 63,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 47
          },
          end: {
            line: 63,
            column: 51
          }
        }],
        line: 63
      },
      "16": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/samuellove/Documents/GitHub/Capstone/frontend/components/ClientOnly.js"],
      sourcesContent: ["import React, { useState, useEffect } from 'react';\n\n/**\n * ClientOnly component to prevent SSR hydration mismatches\n *\n * This component ensures that its children are only rendered on the client side,\n * preventing issues with server-side rendering when components depend on browser APIs.\n *\n * @param {Object} props - Component props\n * @param {React.ReactNode} props.children - Child components to render client-side only\n * @param {React.ReactNode} props.fallback - Optional fallback to show during SSR\n * @returns {React.ReactElement|null} The children on client-side, fallback on server-side\n */\nconst ClientOnly = ({ children, fallback = null }) => {\n  const [hasMounted, setHasMounted] = useState(false);\n\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  if (!hasMounted) {\n    return fallback;\n  }\n\n  return children;\n};\n\nexport default ClientOnly;\n"],
      names: ["ClientOnly", "children", "fallback", "hasMounted", "setHasMounted", "useState", "useEffect"],
      mappings: ";;;;+BA2BA;;;eAAA;;;+DA3B2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE3C;;;;;;;;;;CAUC,GACD,MAAMA,aAAa,CAAC,EAAEC,QAAQ,EAAEC,WAAW,IAAI,EAAE;IAC/C,MAAM,CAACC,YAAYC,cAAc,GAAGC,IAAAA,eAAQ,EAAC;IAE7CC,IAAAA,gBAAS,EAAC;QACRF,cAAc;IAChB,GAAG,EAAE;IAEL,IAAI,CAACD,YAAY;QACf,OAAOD;IACT;IAEA,OAAOD;AACT;MAEA,WAAeD"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6599af445781d85d9b8b4ec7a7ca8ca78e2a3cc4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22jnqm7xm8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22jnqm7xm8();
cov_22jnqm7xm8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_22jnqm7xm8().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_22jnqm7xm8().f[0]++;
    cov_22jnqm7xm8().s[2]++;
    return _default;
  }
});
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_22jnqm7xm8().s[3]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_22jnqm7xm8().f[1]++;
  cov_22jnqm7xm8().s[4]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_22jnqm7xm8().b[0][0]++;
    cov_22jnqm7xm8().s[5]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_22jnqm7xm8().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_22jnqm7xm8().s[6]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_22jnqm7xm8().s[7]++, new WeakMap());
  /* istanbul ignore next */
  cov_22jnqm7xm8().s[8]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_22jnqm7xm8().f[2]++;
    cov_22jnqm7xm8().s[9]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_22jnqm7xm8().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_22jnqm7xm8().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_22jnqm7xm8().f[3]++;
  cov_22jnqm7xm8().s[10]++;
  if (
  /* istanbul ignore next */
  (cov_22jnqm7xm8().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_22jnqm7xm8().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_22jnqm7xm8().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_22jnqm7xm8().b[2][0]++;
    cov_22jnqm7xm8().s[11]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_22jnqm7xm8().b[2][1]++;
  }
  cov_22jnqm7xm8().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_22jnqm7xm8().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_22jnqm7xm8().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_22jnqm7xm8().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_22jnqm7xm8().b[4][0]++;
    cov_22jnqm7xm8().s[13]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_22jnqm7xm8().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_22jnqm7xm8().s[14]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_22jnqm7xm8().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_22jnqm7xm8().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_22jnqm7xm8().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_22jnqm7xm8().b[6][0]++;
    cov_22jnqm7xm8().s[16]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_22jnqm7xm8().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_22jnqm7xm8().s[17]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_22jnqm7xm8().s[18]++,
  /* istanbul ignore next */
  (cov_22jnqm7xm8().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_22jnqm7xm8().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_22jnqm7xm8().s[19]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_22jnqm7xm8().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_22jnqm7xm8().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_22jnqm7xm8().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_22jnqm7xm8().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_22jnqm7xm8().s[21]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_22jnqm7xm8().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_22jnqm7xm8().b[11][1]++, null));
      /* istanbul ignore next */
      cov_22jnqm7xm8().s[22]++;
      if (
      /* istanbul ignore next */
      (cov_22jnqm7xm8().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_22jnqm7xm8().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_22jnqm7xm8().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_22jnqm7xm8().b[12][0]++;
        cov_22jnqm7xm8().s[23]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_22jnqm7xm8().b[12][1]++;
        cov_22jnqm7xm8().s[24]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_22jnqm7xm8().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_22jnqm7xm8().s[25]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_22jnqm7xm8().s[26]++;
  if (cache) {
    /* istanbul ignore next */
    cov_22jnqm7xm8().b[14][0]++;
    cov_22jnqm7xm8().s[27]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_22jnqm7xm8().b[14][1]++;
  }
  cov_22jnqm7xm8().s[28]++;
  return newObj;
}
/**
 * ClientOnly component to prevent SSR hydration mismatches
 *
 * This component ensures that its children are only rendered on the client side,
 * preventing issues with server-side rendering when components depend on browser APIs.
 *
 * @param {Object} props - Component props
 * @param {React.ReactNode} props.children - Child components to render client-side only
 * @param {React.ReactNode} props.fallback - Optional fallback to show during SSR
 * @returns {React.ReactElement|null} The children on client-side, fallback on server-side
 */
/* istanbul ignore next */
cov_22jnqm7xm8().s[29]++;
const ClientOnly = ({
  children,
  fallback =
  /* istanbul ignore next */
  (cov_22jnqm7xm8().b[15][0]++, null)
}) => {
  /* istanbul ignore next */
  cov_22jnqm7xm8().f[4]++;
  const [hasMounted, setHasMounted] =
  /* istanbul ignore next */
  (cov_22jnqm7xm8().s[30]++, (0, _react.useState)(false));
  /* istanbul ignore next */
  cov_22jnqm7xm8().s[31]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_22jnqm7xm8().f[5]++;
    cov_22jnqm7xm8().s[32]++;
    setHasMounted(true);
  }, []);
  /* istanbul ignore next */
  cov_22jnqm7xm8().s[33]++;
  if (!hasMounted) {
    /* istanbul ignore next */
    cov_22jnqm7xm8().b[16][0]++;
    cov_22jnqm7xm8().s[34]++;
    return fallback;
  } else
  /* istanbul ignore next */
  {
    cov_22jnqm7xm8().b[16][1]++;
  }
  cov_22jnqm7xm8().s[35]++;
  return children;
};
const _default =
/* istanbul ignore next */
(cov_22jnqm7xm8().s[36]++, ClientOnly);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsImNvdl8yMmpucW03eG04IiwicyIsIkNsaWVudE9ubHkiLCJjaGlsZHJlbiIsImZhbGxiYWNrIiwiYiIsImYiLCJoYXNNb3VudGVkIiwic2V0SGFzTW91bnRlZCIsIl9yZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0Il0sInNvdXJjZXMiOlsiL1VzZXJzL3NhbXVlbGxvdmUvRG9jdW1lbnRzL0dpdEh1Yi9DYXBzdG9uZS9mcm9udGVuZC9jb21wb25lbnRzL0NsaWVudE9ubHkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbi8qKlxuICogQ2xpZW50T25seSBjb21wb25lbnQgdG8gcHJldmVudCBTU1IgaHlkcmF0aW9uIG1pc21hdGNoZXNcbiAqXG4gKiBUaGlzIGNvbXBvbmVudCBlbnN1cmVzIHRoYXQgaXRzIGNoaWxkcmVuIGFyZSBvbmx5IHJlbmRlcmVkIG9uIHRoZSBjbGllbnQgc2lkZSxcbiAqIHByZXZlbnRpbmcgaXNzdWVzIHdpdGggc2VydmVyLXNpZGUgcmVuZGVyaW5nIHdoZW4gY29tcG9uZW50cyBkZXBlbmQgb24gYnJvd3NlciBBUElzLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wcyAtIENvbXBvbmVudCBwcm9wc1xuICogQHBhcmFtIHtSZWFjdC5SZWFjdE5vZGV9IHByb3BzLmNoaWxkcmVuIC0gQ2hpbGQgY29tcG9uZW50cyB0byByZW5kZXIgY2xpZW50LXNpZGUgb25seVxuICogQHBhcmFtIHtSZWFjdC5SZWFjdE5vZGV9IHByb3BzLmZhbGxiYWNrIC0gT3B0aW9uYWwgZmFsbGJhY2sgdG8gc2hvdyBkdXJpbmcgU1NSXG4gKiBAcmV0dXJucyB7UmVhY3QuUmVhY3RFbGVtZW50fG51bGx9IFRoZSBjaGlsZHJlbiBvbiBjbGllbnQtc2lkZSwgZmFsbGJhY2sgb24gc2VydmVyLXNpZGVcbiAqL1xuY29uc3QgQ2xpZW50T25seSA9ICh7IGNoaWxkcmVuLCBmYWxsYmFjayA9IG51bGwgfSkgPT4ge1xuICBjb25zdCBbaGFzTW91bnRlZCwgc2V0SGFzTW91bnRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRIYXNNb3VudGVkKHRydWUpO1xuICB9LCBbXSk7XG5cbiAgaWYgKCFoYXNNb3VudGVkKSB7XG4gICAgcmV0dXJuIGZhbGxiYWNrO1xuICB9XG5cbiAgcmV0dXJuIGNoaWxkcmVuO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ2xpZW50T25seTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBMkJBOzs7Ozs7V0FBQUEsUUFBQTs7Ozs7eUVBM0IyQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUUzQzs7Ozs7Ozs7Ozs7QUFBQTtBQUFBQyxjQUFBLEdBQUFDLENBQUE7QUFXQSxNQUFNQyxVQUFBLEdBQWFBLENBQUM7RUFBRUMsUUFBUTtFQUFFQyxRQUFBO0VBQUE7RUFBQSxDQUFBSixjQUFBLEdBQUFLLENBQUEsV0FBVyxJQUFJO0FBQUEsQ0FBRTtFQUFBO0VBQUFMLGNBQUEsR0FBQU0sQ0FBQTtFQUMvQyxNQUFNLENBQUNDLFVBQUEsRUFBWUMsYUFBQSxDQUFjO0VBQUE7RUFBQSxDQUFBUixjQUFBLEdBQUFDLENBQUEsUUFBRyxJQUFBUSxNQUFBLENBQUFDLFFBQVEsRUFBQztFQUFBO0VBQUFWLGNBQUEsR0FBQUMsQ0FBQTtFQUU3QyxJQUFBUSxNQUFBLENBQUFFLFNBQVMsRUFBQztJQUFBO0lBQUFYLGNBQUEsR0FBQU0sQ0FBQTtJQUFBTixjQUFBLEdBQUFDLENBQUE7SUFDUk8sYUFBQSxDQUFjO0VBQ2hCLEdBQUcsRUFBRTtFQUFBO0VBQUFSLGNBQUEsR0FBQUMsQ0FBQTtFQUVMLElBQUksQ0FBQ00sVUFBQSxFQUFZO0lBQUE7SUFBQVAsY0FBQSxHQUFBSyxDQUFBO0lBQUFMLGNBQUEsR0FBQUMsQ0FBQTtJQUNmLE9BQU9HLFFBQUE7RUFDVDtFQUFBO0VBQUE7SUFBQUosY0FBQSxHQUFBSyxDQUFBO0VBQUE7RUFBQUwsY0FBQSxHQUFBQyxDQUFBO0VBRUEsT0FBT0UsUUFBQTtBQUNUO01BRUFKLFFBQUE7QUFBQTtBQUFBLENBQUFDLGNBQUEsR0FBQUMsQ0FBQSxRQUFlQyxVQUFBIiwiaWdub3JlTGlzdCI6W119