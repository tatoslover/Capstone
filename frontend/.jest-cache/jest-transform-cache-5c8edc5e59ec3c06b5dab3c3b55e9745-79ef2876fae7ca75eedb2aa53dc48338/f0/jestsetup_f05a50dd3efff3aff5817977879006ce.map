{"version":3,"sources":["/Users/samuellove/Documents/GitHub/Capstone/frontend/jest.setup.js"],"sourcesContent":["import '@testing-library/jest-dom';\n\n// Mock Next.js Image component\njest.mock('next/image', () => ({\n  __esModule: true,\n  default: (props) => {\n    // eslint-disable-next-line jsx-a11y/alt-text, @next/next/no-img-element\n    return <img {...props} />;\n  },\n}));\n\n// Mock Next.js Link component\njest.mock('next/link', () => ({\n  __esModule: true,\n  default: ({ children, href, ...props }) => {\n    return (\n      <a href={href} {...props}>\n        {children}\n      </a>\n    );\n  },\n}));\n\n// Mock Next.js router\njest.mock('next/router', () => ({\n  useRouter: () => ({\n    route: '/',\n    pathname: '/',\n    query: {},\n    asPath: '/',\n    push: jest.fn(),\n    replace: jest.fn(),\n    reload: jest.fn(),\n    back: jest.fn(),\n    prefetch: jest.fn(),\n    beforePopState: jest.fn(),\n    events: {\n      on: jest.fn(),\n      off: jest.fn(),\n      emit: jest.fn(),\n    },\n  }),\n}));\n\n// Mock localStorage\nconst localStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n};\n\nObject.defineProperty(window, 'localStorage', {\n  value: localStorageMock,\n});\n\n// Mock sessionStorage\nconst sessionStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n};\n\nObject.defineProperty(window, 'sessionStorage', {\n  value: sessionStorageMock,\n});\n\n// Mock window.matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(), // deprecated\n    removeListener: jest.fn(), // deprecated\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n});\n\n// Mock IntersectionObserver\nglobal.IntersectionObserver = class IntersectionObserver {\n  constructor() {}\n  disconnect() {}\n  observe() {}\n  unobserve() {}\n};\n\n// Mock ResizeObserver\nglobal.ResizeObserver = class ResizeObserver {\n  constructor(cb) {\n    this.cb = cb;\n  }\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n};\n\n// Mock fetch globally\nglobal.fetch = jest.fn();\n\n// Mock console methods to reduce noise in tests\nconst originalError = console.error;\nconst originalWarn = console.warn;\n\nbeforeEach(() => {\n  console.error = jest.fn();\n  console.warn = jest.fn();\n});\n\nafterEach(() => {\n  console.error = originalError;\n  console.warn = originalWarn;\n});\n\n// Custom matchers for better testing\nexpect.extend({\n  toBeWithinRange(received, floor, ceiling) {\n    const pass = received >= floor && received <= ceiling;\n    if (pass) {\n      return {\n        message: () =>\n          `expected ${received} not to be within range ${floor} - ${ceiling}`,\n        pass: true,\n      };\n    } else {\n      return {\n        message: () =>\n          `expected ${received} to be within range ${floor} - ${ceiling}`,\n        pass: false,\n      };\n    }\n  },\n});\n\n// Set up environment variables for testing\nprocess.env.NEXT_PUBLIC_API_URL = 'http://localhost:3001';\nprocess.env.NODE_ENV = 'test';\n\n// Mock CSS modules\njest.mock('*.module.css', () => ({}));\njest.mock('*.module.scss', () => ({}));\njest.mock('*.module.sass', () => ({}));\n\n// Global test utilities\nglobal.testUtils = {\n  // Helper to create mock user\n  createMockUser: (overrides = {}) => ({\n    id: 1,\n    username: 'testuser',\n    created_at: '2023-01-01T00:00:00Z',\n    ...overrides,\n  }),\n\n  // Helper to create mock card\n  createMockCard: (overrides = {}) => ({\n    id: 'abc123',\n    name: 'Lightning Bolt',\n    mana_cost: '{R}',\n    type_line: 'Instant',\n    oracle_text: 'Lightning Bolt deals 3 damage to any target.',\n    ...overrides,\n  }),\n\n  // Helper to create mock favourite\n  createMockFavourite: (overrides = {}) => ({\n    id: 1,\n    user_id: 1,\n    card_name: 'Lightning Bolt',\n    scryfall_id: 'abc123',\n    ability_type: 'instant',\n    notes: 'Great damage spell',\n    created_at: '2023-01-01T00:00:00Z',\n    ...overrides,\n  }),\n\n  // Helper to wait for async operations\n  waitForAsync: () => new Promise(resolve => setTimeout(resolve, 0)),\n\n  // Helper to trigger resize events\n  triggerResize: () => {\n    global.dispatchEvent(new Event('resize'));\n  },\n};\n\n// Clean up after each test\nafterEach(() => {\n  // Clear all mocks\n  jest.clearAllMocks();\n\n  // Reset fetch mock\n  if (global.fetch && global.fetch.mockClear) {\n    global.fetch.mockClear();\n  }\n\n  // Clear localStorage\n  localStorageMock.getItem.mockClear();\n  localStorageMock.setItem.mockClear();\n  localStorageMock.removeItem.mockClear();\n  localStorageMock.clear.mockClear();\n\n  // Clear sessionStorage\n  sessionStorageMock.getItem.mockClear();\n  sessionStorageMock.setItem.mockClear();\n  sessionStorageMock.removeItem.mockClear();\n  sessionStorageMock.clear.mockClear();\n});\n"],"names":["jest","mock","__esModule","default","props","img","children","href","a","useRouter","route","pathname","query","asPath","push","fn","replace","reload","back","prefetch","beforePopState","events","on","off","emit","localStorageMock","getItem","setItem","removeItem","clear","Object","defineProperty","window","value","sessionStorageMock","writable","mockImplementation","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","global","IntersectionObserver","constructor","disconnect","observe","unobserve","ResizeObserver","cb","fetch","originalError","console","error","originalWarn","warn","beforeEach","afterEach","expect","extend","toBeWithinRange","received","floor","ceiling","pass","message","process","env","NEXT_PUBLIC_API_URL","NODE_ENV","testUtils","createMockUser","overrides","id","username","created_at","createMockCard","name","mana_cost","type_line","oracle_text","createMockFavourite","user_id","card_name","scryfall_id","ability_type","notes","waitForAsync","Promise","resolve","setTimeout","triggerResize","Event","clearAllMocks","mockClear"],"mappings":"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"}