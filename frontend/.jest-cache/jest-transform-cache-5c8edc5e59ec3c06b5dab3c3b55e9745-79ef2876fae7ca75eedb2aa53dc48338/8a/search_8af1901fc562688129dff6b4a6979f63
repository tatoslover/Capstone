0124af956b575c0f9f5ec22524e9721a
"use strict";

/* istanbul ignore next */
function cov_139yh3e5by() {
  var path = "/Users/samuellove/Documents/GitHub/Capstone/frontend/pages/search.js";
  var hash = "ea00b3e6fd2a1508deaa215c650582e67841bbc6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/samuellove/Documents/GitHub/Capstone/frontend/pages/search.js",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 26
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "5": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 38
        }
      },
      "6": {
        start: {
          line: 14,
          column: 30
        },
        end: {
          line: 14,
          column: 94
        }
      },
      "7": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 43
        }
      },
      "8": {
        start: {
          line: 16,
          column: 34
        },
        end: {
          line: 16,
          column: 102
        }
      },
      "9": {
        start: {
          line: 17,
          column: 31
        },
        end: {
          line: 17,
          column: 92
        }
      },
      "10": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 57
        }
      },
      "11": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 53
        }
      },
      "12": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 6
        }
      },
      "13": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 43
        }
      },
      "14": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "15": {
        start: {
          line: 28,
          column: 42
        },
        end: {
          line: 28,
          column: 68
        }
      },
      "16": {
        start: {
          line: 29,
          column: 46
        },
        end: {
          line: 29,
          column: 70
        }
      },
      "17": {
        start: {
          line: 30,
          column: 34
        },
        end: {
          line: 30,
          column: 61
        }
      },
      "18": {
        start: {
          line: 31,
          column: 30
        },
        end: {
          line: 31,
          column: 54
        }
      },
      "19": {
        start: {
          line: 32,
          column: 42
        },
        end: {
          line: 32,
          column: 69
        }
      },
      "20": {
        start: {
          line: 33,
          column: 44
        },
        end: {
          line: 33,
          column: 67
        }
      },
      "21": {
        start: {
          line: 34,
          column: 44
        },
        end: {
          line: 34,
          column: 68
        }
      },
      "22": {
        start: {
          line: 35,
          column: 32
        },
        end: {
          line: 35,
          column: 65
        }
      },
      "23": {
        start: {
          line: 36,
          column: 36
        },
        end: {
          line: 36,
          column: 63
        }
      },
      "24": {
        start: {
          line: 37,
          column: 44
        },
        end: {
          line: 37,
          column: 68
        }
      },
      "25": {
        start: {
          line: 38,
          column: 42
        },
        end: {
          line: 38,
          column: 65
        }
      },
      "26": {
        start: {
          line: 39,
          column: 27
        },
        end: {
          line: 39,
          column: 29
        }
      },
      "27": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 50,
          column: 11
        }
      },
      "28": {
        start: {
          line: 42,
          column: 26
        },
        end: {
          line: 42,
          column: 61
        }
      },
      "29": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "30": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "31": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 54
        }
      },
      "32": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 55
        }
      },
      "33": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 61,
          column: 7
        }
      },
      "34": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "35": {
        start: {
          line: 54,
          column: 26
        },
        end: {
          line: 54,
          column: 40
        }
      },
      "36": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 35
        }
      },
      "37": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 33
        }
      },
      "38": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 76,
          column: 6
        }
      },
      "39": {
        start: {
          line: 64,
          column: 22
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "40": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 69,
          column: 17
        }
      },
      "41": {
        start: {
          line: 67,
          column: 37
        },
        end: {
          line: 67,
          column: 86
        }
      },
      "42": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 68,
          column: 36
        }
      },
      "43": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 28
        }
      },
      "44": {
        start: {
          line: 71,
          column: 30
        },
        end: {
          line: 71,
          column: 34
        }
      },
      "45": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 28
        }
      },
      "46": {
        start: {
          line: 78,
          column: 21
        },
        end: {
          line: 85,
          column: 6
        }
      },
      "47": {
        start: {
          line: 79,
          column: 27
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "48": {
        start: {
          line: 80,
          column: 49
        },
        end: {
          line: 80,
          column: 60
        }
      },
      "49": {
        start: {
          line: 80,
          column: 79
        },
        end: {
          line: 80,
          column: 85
        }
      },
      "50": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 33
        }
      },
      "51": {
        start: {
          line: 87,
          column: 37
        },
        end: {
          line: 136,
          column: 6
        }
      },
      "52": {
        start: {
          line: 88,
          column: 23
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "53": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "54": {
        start: {
          line: 93,
          column: 27
        },
        end: {
          line: 93,
          column: 53
        }
      },
      "55": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 227
        }
      },
      "56": {
        start: {
          line: 94,
          column: 47
        },
        end: {
          line: 94,
          column: 225
        }
      },
      "57": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "58": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "59": {
        start: {
          line: 99,
          column: 29
        },
        end: {
          line: 99,
          column: 58
        }
      },
      "60": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 128
        }
      },
      "61": {
        start: {
          line: 100,
          column: 51
        },
        end: {
          line: 100,
          column: 126
        }
      },
      "62": {
        start: {
          line: 101,
          column: 19
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "63": {
        start: {
          line: 102,
          column: 31
        },
        end: {
          line: 102,
          column: 62
        }
      },
      "64": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 75
        }
      },
      "65": {
        start: {
          line: 103,
          column: 51
        },
        end: {
          line: 103,
          column: 73
        }
      },
      "66": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 129,
          column: 11
        }
      },
      "67": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "68": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 110,
          column: 56
        }
      },
      "69": {
        start: {
          line: 112,
          column: 20
        },
        end: {
          line: 112,
          column: 56
        }
      },
      "70": {
        start: {
          line: 114,
          column: 33
        },
        end: {
          line: 114,
          column: 43
        }
      },
      "71": {
        start: {
          line: 115,
          column: 33
        },
        end: {
          line: 115,
          column: 43
        }
      },
      "72": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 116,
          column: 39
        }
      },
      "73": {
        start: {
          line: 118,
          column: 40
        },
        end: {
          line: 123,
          column: 21
        }
      },
      "74": {
        start: {
          line: 124,
          column: 20
        },
        end: {
          line: 124,
          column: 87
        }
      },
      "75": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 127,
          column: 29
        }
      },
      "76": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 24
        }
      },
      "77": {
        start: {
          line: 138,
          column: 23
        },
        end: {
          line: 138,
          column: 82
        }
      },
      "78": {
        start: {
          line: 139,
          column: 23
        },
        end: {
          line: 139,
          column: 57
        }
      },
      "79": {
        start: {
          line: 140,
          column: 29
        },
        end: {
          line: 140,
          column: 100
        }
      },
      "80": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 148,
          column: 7
        }
      },
      "81": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 26
        }
      },
      "82": {
        start: {
          line: 149,
          column: 26
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "83": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "84": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 51
        }
      },
      "85": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 19
        }
      },
      "86": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "87": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 29
        }
      },
      "88": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 25
        }
      },
      "89": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 33
        }
      },
      "90": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 173,
          column: 13
        }
      },
      "91": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 67
        }
      },
      "92": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 45
        }
      },
      "93": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 165,
          column: 72
        }
      },
      "94": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 37
        }
      },
      "95": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 172,
          column: 17
        }
      },
      "96": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 171,
          column: 23
        }
      },
      "97": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 186,
          column: 13
        }
      },
      "98": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 180,
          column: 18
        }
      },
      "99": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 26
        }
      },
      "100": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 40
        }
      },
      "101": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 57
        }
      },
      "102": {
        start: {
          line: 188,
          column: 31
        },
        end: {
          line: 195,
          column: 14
        }
      },
      "103": {
        start: {
          line: 190,
          column: 32
        },
        end: {
          line: 190,
          column: 118
        }
      },
      "104": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 193,
          column: 17
        }
      },
      "105": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 192,
          column: 118
        }
      },
      "106": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 31
        }
      },
      "107": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 198,
          column: 13
        }
      },
      "108": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 117
        }
      },
      "109": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 41
        }
      },
      "110": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 47
        }
      },
      "111": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 42
        }
      },
      "112": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 213,
          column: 13
        }
      },
      "113": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 212,
          column: 24
        }
      },
      "114": {
        start: {
          line: 205,
          column: 43
        },
        end: {
          line: 205,
          column: 84
        }
      },
      "115": {
        start: {
          line: 206,
          column: 20
        },
        end: {
          line: 211,
          column: 21
        }
      },
      "116": {
        start: {
          line: 207,
          column: 24
        },
        end: {
          line: 210,
          column: 27
        }
      },
      "117": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 48
        }
      },
      "118": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 66
        }
      },
      "119": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 33
        }
      },
      "120": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 31
        }
      },
      "121": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 30
        }
      },
      "122": {
        start: {
          line: 223,
          column: 25
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "123": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 29
        }
      },
      "124": {
        start: {
          line: 226,
          column: 34
        },
        end: {
          line: 252,
          column: 5
        }
      },
      "125": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "126": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 71
        }
      },
      "127": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 19
        }
      },
      "128": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "129": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 241,
          column: 15
        }
      },
      "130": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 84
        }
      },
      "131": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 62
        }
      },
      "132": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 250,
          column: 13
        }
      },
      "133": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 90
        }
      },
      "134": {
        start: {
          line: 249,
          column: 16
        },
        end: {
          line: 249,
          column: 92
        }
      },
      "135": {
        start: {
          line: 254,
          column: 31
        },
        end: {
          line: 272,
          column: 5
        }
      },
      "136": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 41
        }
      },
      "137": {
        start: {
          line: 255,
          column: 31
        },
        end: {
          line: 255,
          column: 41
        }
      },
      "138": {
        start: {
          line: 256,
          column: 26
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "139": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "140": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 269,
          column: 13
        }
      },
      "141": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 268,
          column: 31
        }
      },
      "142": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 51
        }
      },
      "143": {
        start: {
          line: 274,
          column: 29
        },
        end: {
          line: 287,
          column: 5
        }
      },
      "144": {
        start: {
          line: 275,
          column: 29
        },
        end: {
          line: 275,
          column: 58
        }
      },
      "145": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 69
        }
      },
      "146": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 277,
          column: 43
        }
      },
      "147": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 48
        }
      },
      "148": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 286,
          column: 17
        }
      },
      "149": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "150": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 79
        }
      },
      "151": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 284,
          column: 24
        }
      },
      "152": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 283,
          column: 60
        }
      },
      "153": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 662,
          column: 7
        }
      },
      "154": {
        start: {
          line: 334,
          column: 32
        },
        end: {
          line: 334,
          column: 45
        }
      },
      "155": {
        start: {
          line: 335,
          column: 32
        },
        end: {
          line: 335,
          column: 54
        }
      },
      "156": {
        start: {
          line: 406,
          column: 59
        },
        end: {
          line: 406,
          column: 90
        }
      },
      "157": {
        start: {
          line: 424,
          column: 67
        },
        end: {
          line: 424,
          column: 92
        }
      },
      "158": {
        start: {
          line: 460,
          column: 67
        },
        end: {
          line: 460,
          column: 94
        }
      },
      "159": {
        start: {
          line: 472,
          column: 74
        },
        end: {
          line: 472,
          column: 186
        }
      },
      "160": {
        start: {
          line: 472,
          column: 103
        },
        end: {
          line: 472,
          column: 178
        }
      },
      "161": {
        start: {
          line: 473,
          column: 60
        },
        end: {
          line: 481,
          column: 69
        }
      },
      "162": {
        start: {
          line: 484,
          column: 74
        },
        end: {
          line: 484,
          column: 133
        }
      },
      "163": {
        start: {
          line: 484,
          column: 103
        },
        end: {
          line: 484,
          column: 125
        }
      },
      "164": {
        start: {
          line: 485,
          column: 60
        },
        end: {
          line: 493,
          column: 71
        }
      },
      "165": {
        start: {
          line: 505,
          column: 44
        },
        end: {
          line: 505,
          column: 64
        }
      },
      "166": {
        start: {
          line: 506,
          column: 44
        },
        end: {
          line: 506,
          column: 63
        }
      },
      "167": {
        start: {
          line: 507,
          column: 44
        },
        end: {
          line: 507,
          column: 67
        }
      },
      "168": {
        start: {
          line: 592,
          column: 96
        },
        end: {
          line: 600,
          column: 60
        }
      },
      "169": {
        start: {
          line: 608,
          column: 61
        },
        end: {
          line: 608,
          column: 78
        }
      },
      "170": {
        start: {
          line: 614,
          column: 61
        },
        end: {
          line: 614,
          column: 92
        }
      },
      "171": {
        start: {
          line: 625,
          column: 52
        },
        end: {
          line: 633,
          column: 53
        }
      },
      "172": {
        start: {
          line: 626,
          column: 56
        },
        end: {
          line: 626,
          column: 72
        }
      },
      "173": {
        start: {
          line: 627,
          column: 59
        },
        end: {
          line: 633,
          column: 53
        }
      },
      "174": {
        start: {
          line: 628,
          column: 56
        },
        end: {
          line: 628,
          column: 72
        }
      },
      "175": {
        start: {
          line: 629,
          column: 59
        },
        end: {
          line: 633,
          column: 53
        }
      },
      "176": {
        start: {
          line: 630,
          column: 56
        },
        end: {
          line: 630,
          column: 85
        }
      },
      "177": {
        start: {
          line: 632,
          column: 56
        },
        end: {
          line: 632,
          column: 86
        }
      },
      "178": {
        start: {
          line: 634,
          column: 52
        },
        end: {
          line: 638,
          column: 64
        }
      },
      "179": {
        start: {
          line: 635,
          column: 69
        },
        end: {
          line: 635,
          column: 92
        }
      },
      "180": {
        start: {
          line: 642,
          column: 61
        },
        end: {
          line: 642,
          column: 92
        }
      },
      "181": {
        start: {
          line: 648,
          column: 61
        },
        end: {
          line: 648,
          column: 87
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 20
      },
      "2": {
        name: "SearchPage",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 19
          }
        },
        loc: {
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 663,
            column: 1
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 41,
            column: 27
          }
        },
        loc: {
          start: {
            line: 41,
            column: 30
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 41
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 52,
            column: 27
          }
        },
        loc: {
          start: {
            line: 52,
            column: 30
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 52
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 42
          },
          end: {
            line: 63,
            column: 43
          }
        },
        loc: {
          start: {
            line: 63,
            column: 46
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 63
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 41
          },
          end: {
            line: 65,
            column: 42
          }
        },
        loc: {
          start: {
            line: 65,
            column: 49
          },
          end: {
            line: 71,
            column: 13
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 71,
            column: 22
          },
          end: {
            line: 71,
            column: 23
          }
        },
        loc: {
          start: {
            line: 71,
            column: 30
          },
          end: {
            line: 71,
            column: 34
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 78,
            column: 41
          },
          end: {
            line: 78,
            column: 42
          }
        },
        loc: {
          start: {
            line: 78,
            column: 45
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 78
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 80,
            column: 41
          },
          end: {
            line: 80,
            column: 42
          }
        },
        loc: {
          start: {
            line: 80,
            column: 49
          },
          end: {
            line: 80,
            column: 60
          }
        },
        line: 80
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 80,
            column: 69
          },
          end: {
            line: 80,
            column: 70
          }
        },
        loc: {
          start: {
            line: 80,
            column: 79
          },
          end: {
            line: 80,
            column: 85
          }
        },
        line: 80
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 87,
            column: 57
          },
          end: {
            line: 87,
            column: 58
          }
        },
        loc: {
          start: {
            line: 87,
            column: 61
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 87
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 94,
            column: 39
          },
          end: {
            line: 94,
            column: 40
          }
        },
        loc: {
          start: {
            line: 94,
            column: 47
          },
          end: {
            line: 94,
            column: 225
          }
        },
        line: 94
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 100,
            column: 43
          },
          end: {
            line: 100,
            column: 44
          }
        },
        loc: {
          start: {
            line: 100,
            column: 51
          },
          end: {
            line: 100,
            column: 126
          }
        },
        line: 100
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 103,
            column: 43
          },
          end: {
            line: 103,
            column: 44
          }
        },
        loc: {
          start: {
            line: 103,
            column: 51
          },
          end: {
            line: 103,
            column: 73
          }
        },
        line: 103
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 107,
            column: 22
          },
          end: {
            line: 107,
            column: 23
          }
        },
        loc: {
          start: {
            line: 107,
            column: 30
          },
          end: {
            line: 129,
            column: 9
          }
        },
        line: 107
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 142,
            column: 24
          },
          end: {
            line: 142,
            column: 25
          }
        },
        loc: {
          start: {
            line: 142,
            column: 28
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 142
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 149,
            column: 26
          },
          end: {
            line: 149,
            column: 27
          }
        },
        loc: {
          start: {
            line: 149,
            column: 41
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 149
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 188,
            column: 44
          },
          end: {
            line: 188,
            column: 45
          }
        },
        loc: {
          start: {
            line: 188,
            column: 52
          },
          end: {
            line: 195,
            column: 13
          }
        },
        line: 188
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 204,
            column: 27
          },
          end: {
            line: 204,
            column: 28
          }
        },
        loc: {
          start: {
            line: 204,
            column: 31
          },
          end: {
            line: 212,
            column: 17
          }
        },
        line: 204
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 223,
            column: 25
          },
          end: {
            line: 223,
            column: 26
          }
        },
        loc: {
          start: {
            line: 223,
            column: 34
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 223
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 226,
            column: 34
          },
          end: {
            line: 226,
            column: 35
          }
        },
        loc: {
          start: {
            line: 226,
            column: 48
          },
          end: {
            line: 252,
            column: 5
          }
        },
        line: 226
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 254,
            column: 31
          },
          end: {
            line: 254,
            column: 32
          }
        },
        loc: {
          start: {
            line: 254,
            column: 39
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 254
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 274,
            column: 29
          },
          end: {
            line: 274,
            column: 30
          }
        },
        loc: {
          start: {
            line: 274,
            column: 58
          },
          end: {
            line: 287,
            column: 5
          }
        },
        line: 274
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 279,
            column: 19
          },
          end: {
            line: 279,
            column: 20
          }
        },
        loc: {
          start: {
            line: 279,
            column: 23
          },
          end: {
            line: 286,
            column: 9
          }
        },
        line: 279
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 282,
            column: 27
          },
          end: {
            line: 282,
            column: 28
          }
        },
        loc: {
          start: {
            line: 282,
            column: 31
          },
          end: {
            line: 284,
            column: 17
          }
        },
        line: 282
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 333,
            column: 37
          },
          end: {
            line: 333,
            column: 38
          }
        },
        loc: {
          start: {
            line: 333,
            column: 41
          },
          end: {
            line: 336,
            column: 29
          }
        },
        line: 333
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 406,
            column: 54
          },
          end: {
            line: 406,
            column: 55
          }
        },
        loc: {
          start: {
            line: 406,
            column: 59
          },
          end: {
            line: 406,
            column: 90
          }
        },
        line: 406
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 424,
            column: 62
          },
          end: {
            line: 424,
            column: 63
          }
        },
        loc: {
          start: {
            line: 424,
            column: 67
          },
          end: {
            line: 424,
            column: 92
          }
        },
        line: 424
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 460,
            column: 62
          },
          end: {
            line: 460,
            column: 63
          }
        },
        loc: {
          start: {
            line: 460,
            column: 67
          },
          end: {
            line: 460,
            column: 94
          }
        },
        line: 460
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 471,
            column: 70
          },
          end: {
            line: 471,
            column: 71
          }
        },
        loc: {
          start: {
            line: 471,
            column: 78
          },
          end: {
            line: 482,
            column: 57
          }
        },
        line: 471
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 472,
            column: 95
          },
          end: {
            line: 472,
            column: 96
          }
        },
        loc: {
          start: {
            line: 472,
            column: 103
          },
          end: {
            line: 472,
            column: 178
          }
        },
        line: 472
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 483,
            column: 69
          },
          end: {
            line: 483,
            column: 70
          }
        },
        loc: {
          start: {
            line: 483,
            column: 79
          },
          end: {
            line: 494,
            column: 57
          }
        },
        line: 483
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 484,
            column: 95
          },
          end: {
            line: 484,
            column: 96
          }
        },
        loc: {
          start: {
            line: 484,
            column: 103
          },
          end: {
            line: 484,
            column: 125
          }
        },
        line: 484
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 504,
            column: 49
          },
          end: {
            line: 504,
            column: 50
          }
        },
        loc: {
          start: {
            line: 504,
            column: 53
          },
          end: {
            line: 508,
            column: 41
          }
        },
        line: 504
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 592,
            column: 67
          },
          end: {
            line: 592,
            column: 68
          }
        },
        loc: {
          start: {
            line: 592,
            column: 96
          },
          end: {
            line: 600,
            column: 60
          }
        },
        line: 592
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 608,
            column: 57
          },
          end: {
            line: 608,
            column: 58
          }
        },
        loc: {
          start: {
            line: 608,
            column: 61
          },
          end: {
            line: 608,
            column: 78
          }
        },
        line: 608
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 614,
            column: 57
          },
          end: {
            line: 614,
            column: 58
          }
        },
        loc: {
          start: {
            line: 614,
            column: 61
          },
          end: {
            line: 614,
            column: 92
          }
        },
        line: 614
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 623,
            column: 51
          },
          end: {
            line: 623,
            column: 52
          }
        },
        loc: {
          start: {
            line: 623,
            column: 59
          },
          end: {
            line: 639,
            column: 49
          }
        },
        line: 623
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 635,
            column: 65
          },
          end: {
            line: 635,
            column: 66
          }
        },
        loc: {
          start: {
            line: 635,
            column: 69
          },
          end: {
            line: 635,
            column: 92
          }
        },
        line: 635
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 642,
            column: 57
          },
          end: {
            line: 642,
            column: 58
          }
        },
        loc: {
          start: {
            line: 642,
            column: 61
          },
          end: {
            line: 642,
            column: 92
          }
        },
        line: 642
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 648,
            column: 57
          },
          end: {
            line: 648,
            column: 58
          }
        },
        loc: {
          start: {
            line: 648,
            column: 61
          },
          end: {
            line: 648,
            column: 87
          }
        },
        line: 648
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 35
          },
          end: {
            line: 21,
            column: 38
          }
        }, {
          start: {
            line: 21,
            column: 41
          },
          end: {
            line: 23,
            column: 5
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 14
          }
        }, {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 32
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 26
          }
        }, {
          start: {
            line: 53,
            column: 30
          },
          end: {
            line: 53,
            column: 44
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 69,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 69,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "6": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "7": {
        loc: {
          start: {
            line: 94,
            column: 47
          },
          end: {
            line: 94,
            column: 225
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 47
          },
          end: {
            line: 94,
            column: 87
          }
        }, {
          start: {
            line: 94,
            column: 91
          },
          end: {
            line: 94,
            column: 107
          }
        }, {
          start: {
            line: 94,
            column: 111
          },
          end: {
            line: 94,
            column: 158
          }
        }, {
          start: {
            line: 94,
            column: 162
          },
          end: {
            line: 94,
            column: 176
          }
        }, {
          start: {
            line: 94,
            column: 180
          },
          end: {
            line: 94,
            column: 225
          }
        }],
        line: 94
      },
      "8": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "9": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: 101,
            column: 19
          },
          end: {
            line: 104,
            column: 13
          }
        }],
        line: 98
      },
      "10": {
        loc: {
          start: {
            line: 100,
            column: 51
          },
          end: {
            line: 100,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 51
          },
          end: {
            line: 100,
            column: 65
          }
        }, {
          start: {
            line: 100,
            column: 69
          },
          end: {
            line: 100,
            column: 126
          }
        }],
        line: 100
      },
      "11": {
        loc: {
          start: {
            line: 101,
            column: 19
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 19
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "12": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 109,
            column: 16
          },
          end: {
            line: 110,
            column: 56
          }
        }, {
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 112,
            column: 56
          }
        }, {
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 116,
            column: 39
          }
        }, {
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 124,
            column: 87
          }
        }, {
          start: {
            line: 125,
            column: 16
          },
          end: {
            line: 125,
            column: 33
          }
        }, {
          start: {
            line: 126,
            column: 16
          },
          end: {
            line: 127,
            column: 29
          }
        }],
        line: 108
      },
      "13": {
        loc: {
          start: {
            line: 114,
            column: 33
          },
          end: {
            line: 114,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 33
          },
          end: {
            line: 114,
            column: 38
          }
        }, {
          start: {
            line: 114,
            column: 42
          },
          end: {
            line: 114,
            column: 43
          }
        }],
        line: 114
      },
      "14": {
        loc: {
          start: {
            line: 115,
            column: 33
          },
          end: {
            line: 115,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 33
          },
          end: {
            line: 115,
            column: 38
          }
        }, {
          start: {
            line: 115,
            column: 42
          },
          end: {
            line: 115,
            column: 43
          }
        }],
        line: 115
      },
      "15": {
        loc: {
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 124,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 124,
            column: 49
          }
        }, {
          start: {
            line: 124,
            column: 53
          },
          end: {
            line: 124,
            column: 54
          }
        }],
        line: 124
      },
      "16": {
        loc: {
          start: {
            line: 124,
            column: 59
          },
          end: {
            line: 124,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 59
          },
          end: {
            line: 124,
            column: 80
          }
        }, {
          start: {
            line: 124,
            column: 84
          },
          end: {
            line: 124,
            column: 85
          }
        }],
        line: 124
      },
      "17": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "18": {
        loc: {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 150,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 150,
            column: 18
          }
        }, {
          start: {
            line: 150,
            column: 22
          },
          end: {
            line: 150,
            column: 35
          }
        }],
        line: 150
      },
      "19": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        }, {
          start: {
            line: 164,
            column: 19
          },
          end: {
            line: 173,
            column: 13
          }
        }],
        line: 161
      },
      "20": {
        loc: {
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 172,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 172,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "21": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 186,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 186,
            column: 13
          }
        }, {
          start: {
            line: 182,
            column: 19
          },
          end: {
            line: 186,
            column: 13
          }
        }],
        line: 176
      },
      "22": {
        loc: {
          start: {
            line: 184,
            column: 24
          },
          end: {
            line: 184,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 24
          },
          end: {
            line: 184,
            column: 33
          }
        }, {
          start: {
            line: 184,
            column: 37
          },
          end: {
            line: 184,
            column: 39
          }
        }],
        line: 184
      },
      "23": {
        loc: {
          start: {
            line: 185,
            column: 24
          },
          end: {
            line: 185,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 24
          },
          end: {
            line: 185,
            column: 40
          }
        }, {
          start: {
            line: 185,
            column: 44
          },
          end: {
            line: 185,
            column: 56
          }
        }],
        line: 185
      },
      "24": {
        loc: {
          start: {
            line: 190,
            column: 32
          },
          end: {
            line: 190,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 32
          },
          end: {
            line: 190,
            column: 36
          }
        }, {
          start: {
            line: 190,
            column: 40
          },
          end: {
            line: 190,
            column: 49
          }
        }, {
          start: {
            line: 190,
            column: 53
          },
          end: {
            line: 190,
            column: 60
          }
        }, {
          start: {
            line: 190,
            column: 65
          },
          end: {
            line: 190,
            column: 79
          }
        }, {
          start: {
            line: 190,
            column: 83
          },
          end: {
            line: 190,
            column: 99
          }
        }, {
          start: {
            line: 190,
            column: 103
          },
          end: {
            line: 190,
            column: 117
          }
        }],
        line: 190
      },
      "25": {
        loc: {
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 193,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 193,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "26": {
        loc: {
          start: {
            line: 191,
            column: 20
          },
          end: {
            line: 191,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 20
          },
          end: {
            line: 191,
            column: 28
          }
        }, {
          start: {
            line: 191,
            column: 32
          },
          end: {
            line: 191,
            column: 36
          }
        }],
        line: 191
      },
      "27": {
        loc: {
          start: {
            line: 192,
            column: 67
          },
          end: {
            line: 192,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 67
          },
          end: {
            line: 192,
            column: 76
          }
        }, {
          start: {
            line: 192,
            column: 80
          },
          end: {
            line: 192,
            column: 89
          }
        }],
        line: 192
      },
      "28": {
        loc: {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 198,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 198,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "29": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "30": {
        loc: {
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 203,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 203,
            column: 32
          }
        }, {
          start: {
            line: 203,
            column: 36
          },
          end: {
            line: 203,
            column: 60
          }
        }],
        line: 203
      },
      "31": {
        loc: {
          start: {
            line: 206,
            column: 20
          },
          end: {
            line: 211,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 20
          },
          end: {
            line: 211,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "32": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "33": {
        loc: {
          start: {
            line: 238,
            column: 27
          },
          end: {
            line: 238,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 27
          },
          end: {
            line: 238,
            column: 41
          }
        }, {
          start: {
            line: 238,
            column: 45
          },
          end: {
            line: 238,
            column: 49
          }
        }],
        line: 238
      },
      "34": {
        loc: {
          start: {
            line: 239,
            column: 32
          },
          end: {
            line: 239,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 239,
            column: 54
          },
          end: {
            line: 239,
            column: 82
          }
        }, {
          start: {
            line: 239,
            column: 85
          },
          end: {
            line: 239,
            column: 89
          }
        }],
        line: 239
      },
      "35": {
        loc: {
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        }, {
          start: {
            line: 248,
            column: 19
          },
          end: {
            line: 250,
            column: 13
          }
        }],
        line: 246
      },
      "36": {
        loc: {
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 246,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 246,
            column: 27
          }
        }, {
          start: {
            line: 246,
            column: 31
          },
          end: {
            line: 246,
            column: 69
          }
        }],
        line: 246
      },
      "37": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 255,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 255,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "38": {
        loc: {
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 269,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 269,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "39": {
        loc: {
          start: {
            line: 271,
            column: 15
          },
          end: {
            line: 271,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 15
          },
          end: {
            line: 271,
            column: 44
          }
        }, {
          start: {
            line: 271,
            column: 48
          },
          end: {
            line: 271,
            column: 50
          }
        }],
        line: 271
      },
      "40": {
        loc: {
          start: {
            line: 274,
            column: 39
          },
          end: {
            line: 274,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 274,
            column: 46
          },
          end: {
            line: 274,
            column: 55
          }
        }],
        line: 274
      },
      "41": {
        loc: {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "42": {
        loc: {
          start: {
            line: 314,
            column: 16
          },
          end: {
            line: 320,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 314,
            column: 16
          },
          end: {
            line: 314,
            column: 23
          }
        }, {
          start: {
            line: 314,
            column: 41
          },
          end: {
            line: 320,
            column: 18
          }
        }],
        line: 314
      },
      "43": {
        loc: {
          start: {
            line: 321,
            column: 16
          },
          end: {
            line: 341,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 321,
            column: 16
          },
          end: {
            line: 321,
            column: 21
          }
        }, {
          start: {
            line: 321,
            column: 25
          },
          end: {
            line: 321,
            column: 33
          }
        }, {
          start: {
            line: 321,
            column: 51
          },
          end: {
            line: 341,
            column: 18
          }
        }],
        line: 321
      },
      "44": {
        loc: {
          start: {
            line: 342,
            column: 16
          },
          end: {
            line: 659,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 342,
            column: 16
          },
          end: {
            line: 342,
            column: 24
          }
        }, {
          start: {
            line: 342,
            column: 28
          },
          end: {
            line: 342,
            column: 34
          }
        }, {
          start: {
            line: 342,
            column: 38
          },
          end: {
            line: 342,
            column: 49
          }
        }, {
          start: {
            line: 342,
            column: 67
          },
          end: {
            line: 659,
            column: 18
          }
        }],
        line: 342
      },
      "45": {
        loc: {
          start: {
            line: 344,
            column: 24
          },
          end: {
            line: 514,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 344,
            column: 24
          },
          end: {
            line: 344,
            column: 48
          }
        }, {
          start: {
            line: 344,
            column: 66
          },
          end: {
            line: 514,
            column: 26
          }
        }],
        line: 344
      },
      "46": {
        loc: {
          start: {
            line: 359,
            column: 56
          },
          end: {
            line: 369,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 359,
            column: 56
          },
          end: {
            line: 359,
            column: 91
          }
        }, {
          start: {
            line: 359,
            column: 109
          },
          end: {
            line: 369,
            column: 58
          }
        }],
        line: 359
      },
      "47": {
        loc: {
          start: {
            line: 380,
            column: 48
          },
          end: {
            line: 396,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 380,
            column: 48
          },
          end: {
            line: 380,
            column: 96
          }
        }, {
          start: {
            line: 380,
            column: 114
          },
          end: {
            line: 396,
            column: 50
          }
        }],
        line: 380
      },
      "48": {
        loc: {
          start: {
            line: 472,
            column: 103
          },
          end: {
            line: 472,
            column: 178
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 472,
            column: 103
          },
          end: {
            line: 472,
            column: 117
          }
        }, {
          start: {
            line: 472,
            column: 121
          },
          end: {
            line: 472,
            column: 178
          }
        }],
        line: 472
      },
      "49": {
        loc: {
          start: {
            line: 501,
            column: 32
          },
          end: {
            line: 512,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 501,
            column: 33
          },
          end: {
            line: 501,
            column: 45
          }
        }, {
          start: {
            line: 501,
            column: 49
          },
          end: {
            line: 501,
            column: 67
          }
        }, {
          start: {
            line: 501,
            column: 71
          },
          end: {
            line: 501,
            column: 93
          }
        }, {
          start: {
            line: 501,
            column: 112
          },
          end: {
            line: 512,
            column: 34
          }
        }],
        line: 501
      },
      "50": {
        loc: {
          start: {
            line: 515,
            column: 24
          },
          end: {
            line: 526,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 515,
            column: 24
          },
          end: {
            line: 515,
            column: 80
          }
        }, {
          start: {
            line: 515,
            column: 98
          },
          end: {
            line: 526,
            column: 26
          }
        }],
        line: 515
      },
      "51": {
        loc: {
          start: {
            line: 523,
            column: 36
          },
          end: {
            line: 523,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 523,
            column: 36
          },
          end: {
            line: 523,
            column: 48
          }
        }, {
          start: {
            line: 523,
            column: 52
          },
          end: {
            line: 523,
            column: 81
          }
        }],
        line: 523
      },
      "52": {
        loc: {
          start: {
            line: 527,
            column: 24
          },
          end: {
            line: 657,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 527,
            column: 67
          },
          end: {
            line: 572,
            column: 26
          }
        }, {
          start: {
            line: 572,
            column: 29
          },
          end: {
            line: 657,
            column: 26
          }
        }],
        line: 527
      },
      "53": {
        loc: {
          start: {
            line: 572,
            column: 29
          },
          end: {
            line: 657,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 572,
            column: 83
          },
          end: {
            line: 588,
            column: 26
          }
        }, {
          start: {
            line: 588,
            column: 43
          },
          end: {
            line: 657,
            column: 26
          }
        }],
        line: 572
      },
      "54": {
        loc: {
          start: {
            line: 600,
            column: 43
          },
          end: {
            line: 600,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 600,
            column: 43
          },
          end: {
            line: 600,
            column: 50
          }
        }, {
          start: {
            line: 600,
            column: 54
          },
          end: {
            line: 600,
            column: 59
          }
        }],
        line: 600
      },
      "55": {
        loc: {
          start: {
            line: 602,
            column: 32
          },
          end: {
            line: 655,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 602,
            column: 32
          },
          end: {
            line: 602,
            column: 46
          }
        }, {
          start: {
            line: 602,
            column: 64
          },
          end: {
            line: 655,
            column: 34
          }
        }],
        line: 602
      },
      "56": {
        loc: {
          start: {
            line: 625,
            column: 52
          },
          end: {
            line: 633,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 625,
            column: 52
          },
          end: {
            line: 633,
            column: 53
          }
        }, {
          start: {
            line: 627,
            column: 59
          },
          end: {
            line: 633,
            column: 53
          }
        }],
        line: 625
      },
      "57": {
        loc: {
          start: {
            line: 627,
            column: 59
          },
          end: {
            line: 633,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 627,
            column: 59
          },
          end: {
            line: 633,
            column: 53
          }
        }, {
          start: {
            line: 629,
            column: 59
          },
          end: {
            line: 633,
            column: 53
          }
        }],
        line: 627
      },
      "58": {
        loc: {
          start: {
            line: 629,
            column: 59
          },
          end: {
            line: 633,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 629,
            column: 59
          },
          end: {
            line: 633,
            column: 53
          }
        }, {
          start: {
            line: 631,
            column: 59
          },
          end: {
            line: 633,
            column: 53
          }
        }],
        line: 629
      },
      "59": {
        loc: {
          start: {
            line: 636,
            column: 74
          },
          end: {
            line: 636,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 636,
            column: 100
          },
          end: {
            line: 636,
            column: 113
          }
        }, {
          start: {
            line: 636,
            column: 116
          },
          end: {
            line: 636,
            column: 131
          }
        }],
        line: 636
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0, 0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0, 0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0, 0],
      "44": [0, 0, 0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0, 0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/samuellove/Documents/GitHub/Capstone/frontend/pages/search.js"],
      sourcesContent: ["import { useState, useEffect, useMemo } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Layout from \"../components/Layout/Layout\";\nimport { CardSearch } from \"../components/Card\";\nimport SearchCard from \"../components/Search/SearchCard\";\nimport Loading from \"../components/UI/Loading\";\nimport { useTheme } from \"../contexts/ThemeContext\";\nimport { apiService } from \"../services/apiService\";\n\nexport default function SearchPage() {\n  const router = useRouter();\n  const { theme } = useTheme();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [hasSearched, setHasSearched] = useState(false);\n  const [totalResults, setTotalResults] = useState(0);\n  const [currentQuery, setCurrentQuery] = useState(\"\");\n\n  const [sortBy, setSortBy] = useState(\"relevance\");\n  const [filterBy, setFilterBy] = useState(\"all\");\n  const [searchFilter, setSearchFilter] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const resultsPerPage = 10;\n\n  // Load user from localStorage on mount\n  useEffect(() => {\n    const savedUser = localStorage.getItem(\"currentUser\");\n    if (savedUser) {\n      try {\n        setCurrentUser(JSON.parse(savedUser));\n      } catch (e) {\n        localStorage.removeItem(\"currentUser\");\n      }\n    }\n  }, []);\n\n  // Handle URL query parameters\n  useEffect(() => {\n    if (router.isReady && router.query.q) {\n      const query = router.query.q;\n      setCurrentQuery(query);\n      performSearch(query);\n    }\n  }, [router.isReady, router.query.q]);\n\n  // Extract unique card types for filtering\n  const cardTypes = useMemo(() => {\n    const types = [\n      ...new Set(\n        searchResults\n          .map((card) => {\n            if (card.type_line) {\n              const mainType = card.type_line\n                .split(\"\u2014\")[0]\n                .trim()\n                .split(\" \")[0];\n              return mainType;\n            }\n            return null;\n          })\n          .filter((type) => type),\n      ),\n    ];\n    return types.sort();\n  }, [searchResults]);\n\n  // Extract unique rarities for filtering\n  const rarities = useMemo(() => {\n    const rarityList = [\n      ...new Set(\n        searchResults.map((card) => card.rarity).filter((rarity) => rarity),\n      ),\n    ];\n    return rarityList.sort();\n  }, [searchResults]);\n\n  // Filter and sort results\n  const filteredAndSortedResults = useMemo(() => {\n    let filtered = [...searchResults];\n\n    // Apply search filter\n    if (searchFilter.trim()) {\n      const search = searchFilter.toLowerCase();\n      filtered = filtered.filter(\n        (card) =>\n          card.name.toLowerCase().includes(search) ||\n          (card.oracle_text &&\n            card.oracle_text.toLowerCase().includes(search)) ||\n          (card.type_line && card.type_line.toLowerCase().includes(search)),\n      );\n    }\n\n    // Apply type filter\n    if (filterBy !== \"all\") {\n      if (filterBy.startsWith(\"type-\")) {\n        const type = filterBy.replace(\"type-\", \"\");\n        filtered = filtered.filter(\n          (card) =>\n            card.type_line &&\n            card.type_line.toLowerCase().includes(type.toLowerCase()),\n        );\n      } else if (filterBy.startsWith(\"rarity-\")) {\n        const rarity = filterBy.replace(\"rarity-\", \"\");\n        filtered = filtered.filter((card) => card.rarity === rarity);\n      }\n    }\n\n    // Apply sorting\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case \"name\":\n          return a.name.localeCompare(b.name);\n        case \"name-desc\":\n          return b.name.localeCompare(a.name);\n        case \"mana-cost\":\n          const aCmc = a.cmc || 0;\n          const bCmc = b.cmc || 0;\n          return aCmc - bCmc;\n        case \"rarity\":\n          const rarityOrder = { common: 1, uncommon: 2, rare: 3, mythic: 4 };\n          return (rarityOrder[a.rarity] || 0) - (rarityOrder[b.rarity] || 0);\n        case \"relevance\":\n        default:\n          return 0;\n      }\n    });\n\n    return filtered;\n  }, [searchResults, searchFilter, filterBy, sortBy]);\n\n  // Pagination\n  const totalPages = Math.ceil(\n    filteredAndSortedResults.length / resultsPerPage,\n  );\n  const startIndex = (currentPage - 1) * resultsPerPage;\n  const paginatedResults = filteredAndSortedResults.slice(\n    startIndex,\n    startIndex + resultsPerPage,\n  );\n\n  // Reset to page 1 when filters change\n  useMemo(() => {\n    setCurrentPage(1);\n  }, [searchFilter, filterBy, sortBy]);\n\n  const performSearch = async (query) => {\n    if (!query || !query.trim()) {\n      setError(\"Please enter a search term\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(\"\");\n      setHasSearched(true);\n\n      let data;\n      let displayQuery;\n\n      // Handle random card request\n      if (query === \"*\") {\n        data = await apiService.cards.random();\n        displayQuery = \"Random Card\";\n      } else {\n        data = await apiService.cards.search(query);\n        displayQuery = query;\n\n        // Update URL without causing a page reload for regular searches\n        if (router.query.q !== query) {\n          router.replace(`/search?q=${encodeURIComponent(query)}`, undefined, {\n            shallow: true,\n          });\n        }\n      }\n\n      // Handle different response formats\n      let cards, total;\n      if (query === \"*\") {\n        // Random card returns a single card object\n        cards = [data];\n        total = 1;\n      } else {\n        // Regular search returns Scryfall API response format\n        cards = data.data || [];\n        total = data.total_cards || cards.length;\n      }\n\n      // Filter out cards with incomplete essential data\n      const validCards = cards.filter(card => {\n        // Ensure card has essential properties for good UX\n        const isValid = card &&\n               card.name &&\n               card.id &&\n               (card.type_line || card.oracle_text || card.mana_cost);\n\n        if (!isValid && card) {\n          console.warn(`Filtering out incomplete card: ${card.name || 'Unknown'} - missing essential data`);\n        }\n\n        return isValid;\n      });\n\n      if (validCards.length < cards.length) {\n        console.log(`Filtered search results: ${validCards.length}/${cards.length} cards had complete data`);\n      }\n\n      setSearchResults(validCards);\n      setTotalResults(validCards.length);\n      setCurrentQuery(displayQuery);\n\n      // Scroll to results on mobile\n      if (cards.length > 0 && window.innerWidth <= 768) {\n        setTimeout(() => {\n          const resultsElement = document.getElementById(\"search-results\");\n          if (resultsElement) {\n            resultsElement.scrollIntoView({\n              behavior: \"smooth\",\n              block: \"start\",\n            });\n          }\n        }, 100);\n      }\n    } catch (err) {\n      console.error(\"Search error:\", err);\n      setError(\"Failed to search cards. Please try again.\");\n      setSearchResults([]);\n      setTotalResults(0);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (query) => {\n    performSearch(query);\n  };\n\n  const handleFavouriteToggle = async (card) => {\n    if (!currentUser) {\n      alert(\"Please create a profile first to save favourites!\");\n      return;\n    }\n\n    try {\n      // Add card to favourites via API\n      await apiService.favourites.create({\n        user_id: currentUser.id,\n        card_name: card.name,\n        scryfall_id: card.id,\n        ability_type: extractAbilityType(card),\n        mana_cost: card.mana_cost || null,\n        color_identity: card.color_identity ? card.color_identity.join('') : null,\n        notes: \"\",\n      });\n\n      // Show success notification\n      showNotification(`Added \"${card.name}\" to your favourites!`, \"success\");\n    } catch (err) {\n      console.error(\"Error adding to favourites:\", err);\n      if (err.message && err.message.includes(\"already exists\")) {\n        showNotification(\n          `\"${card.name}\" is already in your favourites!`,\n          \"info\",\n        );\n      } else {\n        showNotification(\n          \"Failed to add to favourites. Please try again.\",\n          \"error\",\n        );\n      }\n    }\n  };\n\n  // Helper function to extract ability type from card\n  const extractAbilityType = (card) => {\n    if (!card.oracle_text) return \"\";\n\n    const abilities = [\n      \"Flying\",\n      \"Trample\",\n      \"First Strike\",\n      \"Deathtouch\",\n      \"Lifelink\",\n      \"Vigilance\",\n      \"Haste\",\n      \"Hexproof\",\n    ];\n\n    for (const ability of abilities) {\n      if (card.oracle_text.toLowerCase().includes(ability.toLowerCase())) {\n        return ability;\n      }\n    }\n\n    return card.type_line?.split(\" \")[0] || \"\";\n  };\n\n  // Helper function to show notifications\n  const showNotification = (message, type = \"success\") => {\n    const notification = document.createElement(\"div\");\n    notification.className = `notification notification-${type}`;\n    notification.textContent = message;\n\n    document.body.appendChild(notification);\n\n    setTimeout(() => {\n      if (notification.parentNode) {\n        notification.style.animation = \"slideIn 0.3s ease-out reverse\";\n        setTimeout(() => {\n          document.body.removeChild(notification);\n        }, 300);\n      }\n    }, 3000);\n  };\n\n  return (\n    <Layout title=\"Search Cards - Planeswalker's Primer\">\n      <div className=\"container page-content\">\n        {/* Page Header */}\n        <div className=\"text-center mb-3\">\n          <div className=\"header-box search-page-header\">\n            <h1 className=\"search-page-title\">Search Magic Cards</h1>\n            <p className=\"search-page-subtitle\">\n              Find cards by name, ability, or creature type. Use filters to\n              narrow your search.\n            </p>\n          </div>\n        </div>\n\n        {/* Search Interface */}\n        <CardSearch\n          onSearch={handleSearch}\n          loading={loading}\n          initialQuery={currentQuery}\n        />\n\n        {/* Loading State */}\n        {loading && (\n          <div className=\"loading-container\">\n            <Loading message=\"Searching cards...\" size=\"large\" />\n          </div>\n        )}\n\n        {/* Error State */}\n        {error && !loading && (\n          <div className=\"error text-center mt-2 mb-2\">\n            <h3 className=\"mb-2\">Search Error</h3>\n            <p className=\"mb-3\">{error}</p>\n            <button\n              onClick={() => {\n                setError(\"\");\n                setHasSearched(false);\n              }}\n              className=\"btn\"\n            >\n              Try Again\n            </button>\n          </div>\n        )}\n\n        {/* Search Results */}\n        {!loading && !error && hasSearched && (\n          <>\n            {/* Search and Filter Controls */}\n            {searchResults.length > 0 && (\n              <div className=\"card mb-3\">\n                {/* Search within results */}\n                <div className=\"form-group\">\n                  <div className=\"search-results-header-combined\">\n                    <h3 className=\"search-results-title\">\n                      \uD83D\uDD0D Search Results - Found {searchResults.length} cards\n                      {totalResults > searchResults.length && (\n                        <span className=\"search-results-total\">\n                          (showing first {searchResults.length} of{\" \"}\n                          {totalResults} total)\n                        </span>\n                      )}\n                    </h3>\n                    <p className=\"search-results-query\">\n                      Search: \"{currentQuery}\"\n                    </p>\n                    {filteredAndSortedResults.length > resultsPerPage && (\n                      <p className=\"pagination-info\">\n                        Page {currentPage} of {totalPages} ({startIndex + 1}-\n                        {Math.min(\n                          startIndex + resultsPerPage,\n                          filteredAndSortedResults.length,\n                        )}{\" \"}\n                        of {filteredAndSortedResults.length} results)\n                      </p>\n                    )}\n                    <label className=\"form-label\">Filter results:</label>\n                  </div>\n                  <input\n                    type=\"text\"\n                    value={searchFilter}\n                    onChange={(e) => setSearchFilter(e.target.value)}\n                    placeholder=\"Filter by card name, text, or type...\"\n                    className=\"search-input\"\n                  />\n                </div>\n\n                {/* Filters */}\n                <div className=\"filters-grid\">\n                  {/* Sort By */}\n                  <div className=\"form-group\">\n                    <label className=\"form-label\">\uD83D\uDCCA Sort By</label>\n                    <select\n                      value={sortBy}\n                      onChange={(e) => setSortBy(e.target.value)}\n                      className=\"filter-select\"\n                    >\n                      <option value=\"relevance\">Relevance</option>\n                      <option value=\"name\">Name A-Z</option>\n                      <option value=\"name-desc\">Name Z-A</option>\n                      <option value=\"mana-cost\">Mana Cost</option>\n                      <option value=\"rarity\">Rarity</option>\n                    </select>\n                  </div>\n\n                  {/* Filter By Type */}\n                  <div className=\"form-group\">\n                    <label className=\"form-label\">\uD83C\uDFAF Filter By</label>\n                    <select\n                      value={filterBy}\n                      onChange={(e) => setFilterBy(e.target.value)}\n                      className=\"filter-select\"\n                    >\n                      <option value=\"all\">\n                        All Results ({searchResults.length})\n                      </option>\n                      {cardTypes.map((type) => {\n                        const count = searchResults.filter(\n                          (card) =>\n                            card.type_line &&\n                            card.type_line\n                              .toLowerCase()\n                              .includes(type.toLowerCase()),\n                        ).length;\n                        return (\n                          <option key={type} value={`type-${type}`}>\n                            {type} ({count})\n                          </option>\n                        );\n                      })}\n                      {rarities.map((rarity) => {\n                        const count = searchResults.filter(\n                          (card) => card.rarity === rarity,\n                        ).length;\n                        return (\n                          <option key={rarity} value={`rarity-${rarity}`}>\n                            {rarity.charAt(0).toUpperCase() + rarity.slice(1)} (\n                            {count})\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </div>\n                </div>\n\n                {/* Clear Filters */}\n                {(searchFilter ||\n                  filterBy !== \"all\" ||\n                  sortBy !== \"relevance\") && (\n                  <div className=\"filter-clear-section\">\n                    <button\n                      onClick={() => {\n                        setSearchFilter(\"\");\n                        setFilterBy(\"all\");\n                        setSortBy(\"relevance\");\n                      }}\n                      className=\"btn btn-secondary\"\n                    >\n                      Clear All Filters\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Show filtered results info if applicable */}\n            {filteredAndSortedResults.length !== searchResults.length && (\n              <div className=\"card mb-2\">\n                <p className=\"search-results-filtered\">\n                  Showing {filteredAndSortedResults.length} filtered results\n                  {searchFilter && ` matching \"${searchFilter}\"`}\n                </p>\n              </div>\n            )}\n\n            {/* Search Results */}\n            {searchResults.length === 0 ? (\n              <div className=\"search-empty-state card\">\n                <div className=\"search-empty-icon\">\uD83D\uDD0D</div>\n                <h3 className=\"search-empty-title\">\n                  No cards found for \"{currentQuery}\"\n                </h3>\n                <div className=\"search-empty-content\">\n                  <p className=\"search-empty-subtitle\">\n                    Try these search tips:\n                  </p>\n                  <ul className=\"search-tips-list\">\n                    <li>Check spelling of card names</li>\n                    <li>\n                      Try searching for abilities like \"flying\" or \"trample\"\n                    </li>\n                    <li>Search for creature types like \"dragon\" or \"angel\"</li>\n                    <li>Use the filters above to browse by colour or type</li>\n                    <li>Try more general terms like \"red\" or \"artifact\"</li>\n                  </ul>\n                </div>\n              </div>\n            ) : filteredAndSortedResults.length === 0 ? (\n              <div className=\"search-empty-state card\">\n                <div className=\"search-empty-icon\">\uD83D\uDD0D</div>\n                <h3 className=\"search-empty-title\">No matches found</h3>\n                <p className=\"search-empty-subtitle\">\n                  Try adjusting your search or filter settings.\n                </p>\n              </div>\n            ) : (\n              <div>\n                {/* Results Grid */}\n                <div className=\"cards-grid\">\n                  {paginatedResults.map((card, index) => (\n                    <div\n                      key={card.id || index}\n                      className={`fade-in fade-in-delay-${Math.min(index + 1, 5)}`}\n                    >\n                      <SearchCard\n                        card={card}\n                        currentUser={currentUser}\n                        onFavouriteToggle={handleFavouriteToggle}\n                        showFavouriteButton={true}\n                      />\n                    </div>\n                  ))}\n                </div>\n\n                {/* Pagination Controls */}\n                {totalPages > 1 && (\n                  <div className=\"pagination-controls card\">\n                    <div className=\"pagination-buttons\">\n                      <button\n                        onClick={() => setCurrentPage(1)}\n                        disabled={currentPage === 1}\n                        className=\"btn btn-secondary pagination-btn\"\n                      >\n                        First\n                      </button>\n                      <button\n                        onClick={() => setCurrentPage(currentPage - 1)}\n                        disabled={currentPage === 1}\n                        className=\"btn btn-secondary pagination-btn\"\n                      >\n                        Previous\n                      </button>\n\n                      {/* Page numbers */}\n                      <div className=\"page-numbers\">\n                        {Array.from(\n                          { length: Math.min(5, totalPages) },\n                          (_, i) => {\n                            let pageNum;\n                            if (totalPages <= 5) {\n                              pageNum = i + 1;\n                            } else if (currentPage <= 3) {\n                              pageNum = i + 1;\n                            } else if (currentPage >= totalPages - 2) {\n                              pageNum = totalPages - 4 + i;\n                            } else {\n                              pageNum = currentPage - 2 + i;\n                            }\n\n                            return (\n                              <button\n                                key={pageNum}\n                                onClick={() => setCurrentPage(pageNum)}\n                                className={`btn ${currentPage === pageNum ? \"btn-primary\" : \"btn-secondary\"} pagination-btn`}\n                              >\n                                {pageNum}\n                              </button>\n                            );\n                          },\n                        )}\n                      </div>\n\n                      <button\n                        onClick={() => setCurrentPage(currentPage + 1)}\n                        disabled={currentPage === totalPages}\n                        className=\"btn btn-secondary pagination-btn\"\n                      >\n                        Next\n                      </button>\n                      <button\n                        onClick={() => setCurrentPage(totalPages)}\n                        disabled={currentPage === totalPages}\n                        className=\"btn btn-secondary pagination-btn\"\n                      >\n                        Last\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </Layout>\n  );\n}\n"],
      names: ["SearchPage", "router", "useRouter", "theme", "useTheme", "currentUser", "setCurrentUser", "useState", "searchResults", "setSearchResults", "loading", "setLoading", "error", "setError", "hasSearched", "setHasSearched", "totalResults", "setTotalResults", "currentQuery", "setCurrentQuery", "sortBy", "setSortBy", "filterBy", "setFilterBy", "searchFilter", "setSearchFilter", "currentPage", "setCurrentPage", "resultsPerPage", "useEffect", "savedUser", "localStorage", "getItem", "JSON", "parse", "e", "removeItem", "isReady", "query", "q", "performSearch", "cardTypes", "useMemo", "types", "Set", "map", "card", "type_line", "mainType", "split", "trim", "filter", "type", "sort", "rarities", "rarityList", "rarity", "filteredAndSortedResults", "filtered", "search", "toLowerCase", "name", "includes", "oracle_text", "startsWith", "replace", "a", "b", "localeCompare", "aCmc", "cmc", "bCmc", "rarityOrder", "common", "uncommon", "rare", "mythic", "totalPages", "Math", "ceil", "length", "startIndex", "paginatedResults", "slice", "data", "displayQuery", "apiService", "cards", "random", "encodeURIComponent", "undefined", "shallow", "total", "total_cards", "validCards", "isValid", "id", "mana_cost", "console", "warn", "log", "window", "innerWidth", "setTimeout", "resultsElement", "document", "getElementById", "scrollIntoView", "behavior", "block", "err", "handleSearch", "handleFavouriteToggle", "alert", "favourites", "create", "user_id", "card_name", "scryfall_id", "ability_type", "extractAbilityType", "color_identity", "join", "notes", "showNotification", "message", "abilities", "ability", "notification", "createElement", "className", "textContent", "body", "appendChild", "parentNode", "style", "animation", "removeChild", "Layout", "title", "div", "h1", "p", "CardSearch", "onSearch", "initialQuery", "Loading", "size", "h3", "button", "onClick", "span", "min", "label", "input", "value", "onChange", "target", "placeholder", "select", "option", "count", "charAt", "toUpperCase", "ul", "li", "index", "SearchCard", "onFavouriteToggle", "showFavouriteButton", "disabled", "Array", "from", "_", "i", "pageNum"],
      mappings: ";;;;+BASA;;;eAAwBA;;;;uBATqB;wBACnB;+DACP;sBACQ;mEACJ;gEACH;8BACK;4BACE;;;;;;AAEZ,SAASA;IACtB,MAAMC,SAASC,IAAAA,iBAAS;IACxB,MAAM,EAAEC,KAAK,EAAE,GAAGC,IAAAA,sBAAQ;IAC1B,MAAM,CAACC,aAAaC,eAAe,GAAGC,IAAAA,eAAQ,EAAC;IAC/C,MAAM,CAACC,eAAeC,iBAAiB,GAAGF,IAAAA,eAAQ,EAAC,EAAE;IACrD,MAAM,CAACG,SAASC,WAAW,GAAGJ,IAAAA,eAAQ,EAAC;IACvC,MAAM,CAACK,OAAOC,SAAS,GAAGN,IAAAA,eAAQ,EAAC;IACnC,MAAM,CAACO,aAAaC,eAAe,GAAGR,IAAAA,eAAQ,EAAC;IAC/C,MAAM,CAACS,cAAcC,gBAAgB,GAAGV,IAAAA,eAAQ,EAAC;IACjD,MAAM,CAACW,cAAcC,gBAAgB,GAAGZ,IAAAA,eAAQ,EAAC;IAEjD,MAAM,CAACa,QAAQC,UAAU,GAAGd,IAAAA,eAAQ,EAAC;IACrC,MAAM,CAACe,UAAUC,YAAY,GAAGhB,IAAAA,eAAQ,EAAC;IACzC,MAAM,CAACiB,cAAcC,gBAAgB,GAAGlB,IAAAA,eAAQ,EAAC;IACjD,MAAM,CAACmB,aAAaC,eAAe,GAAGpB,IAAAA,eAAQ,EAAC;IAE/C,MAAMqB,iBAAiB;IAEvB,uCAAuC;IACvCC,IAAAA,gBAAS,EAAC;QACR,MAAMC,YAAYC,aAAaC,OAAO,CAAC;QACvC,IAAIF,WAAW;YACb,IAAI;gBACFxB,eAAe2B,KAAKC,KAAK,CAACJ;YAC5B,EAAE,OAAOK,GAAG;gBACVJ,aAAaK,UAAU,CAAC;YAC1B;QACF;IACF,GAAG,EAAE;IAEL,8BAA8B;IAC9BP,IAAAA,gBAAS,EAAC;QACR,IAAI5B,OAAOoC,OAAO,IAAIpC,OAAOqC,KAAK,CAACC,CAAC,EAAE;YACpC,MAAMD,QAAQrC,OAAOqC,KAAK,CAACC,CAAC;YAC5BpB,gBAAgBmB;YAChBE,cAAcF;QAChB;IACF,GAAG;QAACrC,OAAOoC,OAAO;QAAEpC,OAAOqC,KAAK,CAACC,CAAC;KAAC;IAEnC,0CAA0C;IAC1C,MAAME,YAAYC,IAAAA,cAAO,EAAC;QACxB,MAAMC,QAAQ;eACT,IAAIC,IACLpC,cACGqC,GAAG,CAAC,CAACC;gBACJ,IAAIA,KAAKC,SAAS,EAAE;oBAClB,MAAMC,WAAWF,KAAKC,SAAS,CAC5BE,KAAK,CAAC,IAAI,CAAC,EAAE,CACbC,IAAI,GACJD,KAAK,CAAC,IAAI,CAAC,EAAE;oBAChB,OAAOD;gBACT;gBACA,OAAO;YACT,GACCG,MAAM,CAAC,CAACC,OAASA;SAEvB;QACD,OAAOT,MAAMU,IAAI;IACnB,GAAG;QAAC7C;KAAc;IAElB,wCAAwC;IACxC,MAAM8C,WAAWZ,IAAAA,cAAO,EAAC;QACvB,MAAMa,aAAa;eACd,IAAIX,IACLpC,cAAcqC,GAAG,CAAC,CAACC,OAASA,KAAKU,MAAM,EAAEL,MAAM,CAAC,CAACK,SAAWA;SAE/D;QACD,OAAOD,WAAWF,IAAI;IACxB,GAAG;QAAC7C;KAAc;IAElB,0BAA0B;IAC1B,MAAMiD,2BAA2Bf,IAAAA,cAAO,EAAC;QACvC,IAAIgB,WAAW;eAAIlD;SAAc;QAEjC,sBAAsB;QACtB,IAAIgB,aAAa0B,IAAI,IAAI;YACvB,MAAMS,SAASnC,aAAaoC,WAAW;YACvCF,WAAWA,SAASP,MAAM,CACxB,CAACL,OACCA,KAAKe,IAAI,CAACD,WAAW,GAAGE,QAAQ,CAACH,WAChCb,KAAKiB,WAAW,IACfjB,KAAKiB,WAAW,CAACH,WAAW,GAAGE,QAAQ,CAACH,WACzCb,KAAKC,SAAS,IAAID,KAAKC,SAAS,CAACa,WAAW,GAAGE,QAAQ,CAACH;QAE/D;QAEA,oBAAoB;QACpB,IAAIrC,aAAa,OAAO;YACtB,IAAIA,SAAS0C,UAAU,CAAC,UAAU;gBAChC,MAAMZ,OAAO9B,SAAS2C,OAAO,CAAC,SAAS;gBACvCP,WAAWA,SAASP,MAAM,CACxB,CAACL,OACCA,KAAKC,SAAS,IACdD,KAAKC,SAAS,CAACa,WAAW,GAAGE,QAAQ,CAACV,KAAKQ,WAAW;YAE5D,OAAO,IAAItC,SAAS0C,UAAU,CAAC,YAAY;gBACzC,MAAMR,SAASlC,SAAS2C,OAAO,CAAC,WAAW;gBAC3CP,WAAWA,SAASP,MAAM,CAAC,CAACL,OAASA,KAAKU,MAAM,KAAKA;YACvD;QACF;QAEA,gBAAgB;QAChBE,SAASL,IAAI,CAAC,CAACa,GAAGC;YAChB,OAAQ/C;gBACN,KAAK;oBACH,OAAO8C,EAAEL,IAAI,CAACO,aAAa,CAACD,EAAEN,IAAI;gBACpC,KAAK;oBACH,OAAOM,EAAEN,IAAI,CAACO,aAAa,CAACF,EAAEL,IAAI;gBACpC,KAAK;oBACH,MAAMQ,OAAOH,EAAEI,GAAG,IAAI;oBACtB,MAAMC,OAAOJ,EAAEG,GAAG,IAAI;oBACtB,OAAOD,OAAOE;gBAChB,KAAK;oBACH,MAAMC,cAAc;wBAAEC,QAAQ;wBAAGC,UAAU;wBAAGC,MAAM;wBAAGC,QAAQ;oBAAE;oBACjE,OAAO,AAACJ,CAAAA,WAAW,CAACN,EAAEV,MAAM,CAAC,IAAI,CAAA,IAAMgB,CAAAA,WAAW,CAACL,EAAEX,MAAM,CAAC,IAAI,CAAA;gBAClE,KAAK;gBACL;oBACE,OAAO;YACX;QACF;QAEA,OAAOE;IACT,GAAG;QAAClD;QAAegB;QAAcF;QAAUF;KAAO;IAElD,aAAa;IACb,MAAMyD,aAAaC,KAAKC,IAAI,CAC1BtB,yBAAyBuB,MAAM,GAAGpD;IAEpC,MAAMqD,aAAa,AAACvD,CAAAA,cAAc,CAAA,IAAKE;IACvC,MAAMsD,mBAAmBzB,yBAAyB0B,KAAK,CACrDF,YACAA,aAAarD;IAGf,sCAAsC;IACtCc,IAAAA,cAAO,EAAC;QACNf,eAAe;IACjB,GAAG;QAACH;QAAcF;QAAUF;KAAO;IAEnC,MAAMoB,gBAAgB,OAAOF;QAC3B,IAAI,CAACA,SAAS,CAACA,MAAMY,IAAI,IAAI;YAC3BrC,SAAS;YACT;QACF;QAEA,IAAI;YACFF,WAAW;YACXE,SAAS;YACTE,eAAe;YAEf,IAAIqE;YACJ,IAAIC;YAEJ,6BAA6B;YAC7B,IAAI/C,UAAU,KAAK;gBACjB8C,OAAO,MAAME,sBAAU,CAACC,KAAK,CAACC,MAAM;gBACpCH,eAAe;YACjB,OAAO;gBACLD,OAAO,MAAME,sBAAU,CAACC,KAAK,CAAC5B,MAAM,CAACrB;gBACrC+C,eAAe/C;gBAEf,gEAAgE;gBAChE,IAAIrC,OAAOqC,KAAK,CAACC,CAAC,KAAKD,OAAO;oBAC5BrC,OAAOgE,OAAO,CAAC,CAAC,UAAU,EAAEwB,mBAAmBnD,OAAO,CAAC,EAAEoD,WAAW;wBAClEC,SAAS;oBACX;gBACF;YACF;YAEA,oCAAoC;YACpC,IAAIJ,OAAOK;YACX,IAAItD,UAAU,KAAK;gBACjB,2CAA2C;gBAC3CiD,QAAQ;oBAACH;iBAAK;gBACdQ,QAAQ;YACV,OAAO;gBACL,sDAAsD;gBACtDL,QAAQH,KAAKA,IAAI,IAAI,EAAE;gBACvBQ,QAAQR,KAAKS,WAAW,IAAIN,MAAMP,MAAM;YAC1C;YAEA,kDAAkD;YAClD,MAAMc,aAAaP,MAAMpC,MAAM,CAACL,CAAAA;gBAC9B,mDAAmD;gBACnD,MAAMiD,UAAUjD,QACTA,KAAKe,IAAI,IACTf,KAAKkD,EAAE,IACNlD,CAAAA,KAAKC,SAAS,IAAID,KAAKiB,WAAW,IAAIjB,KAAKmD,SAAS,AAAD;gBAE3D,IAAI,CAACF,WAAWjD,MAAM;oBACpBoD,QAAQC,IAAI,CAAC,CAAC,+BAA+B,EAAErD,KAAKe,IAAI,IAAI,UAAU,yBAAyB,CAAC;gBAClG;gBAEA,OAAOkC;YACT;YAEA,IAAID,WAAWd,MAAM,GAAGO,MAAMP,MAAM,EAAE;gBACpCkB,QAAQE,GAAG,CAAC,CAAC,yBAAyB,EAAEN,WAAWd,MAAM,CAAC,CAAC,EAAEO,MAAMP,MAAM,CAAC,wBAAwB,CAAC;YACrG;YAEAvE,iBAAiBqF;YACjB7E,gBAAgB6E,WAAWd,MAAM;YACjC7D,gBAAgBkE;YAEhB,8BAA8B;YAC9B,IAAIE,MAAMP,MAAM,GAAG,KAAKqB,OAAOC,UAAU,IAAI,KAAK;gBAChDC,WAAW;oBACT,MAAMC,iBAAiBC,SAASC,cAAc,CAAC;oBAC/C,IAAIF,gBAAgB;wBAClBA,eAAeG,cAAc,CAAC;4BAC5BC,UAAU;4BACVC,OAAO;wBACT;oBACF;gBACF,GAAG;YACL;QACF,EAAE,OAAOC,KAAK;YACZZ,QAAQtF,KAAK,CAAC,iBAAiBkG;YAC/BjG,SAAS;YACTJ,iBAAiB,EAAE;YACnBQ,gBAAgB;QAClB,SAAU;YACRN,WAAW;QACb;IACF;IAEA,MAAMoG,eAAe,CAACzE;QACpBE,cAAcF;IAChB;IAEA,MAAM0E,wBAAwB,OAAOlE;QACnC,IAAI,CAACzC,aAAa;YAChB4G,MAAM;YACN;QACF;QAEA,IAAI;YACF,iCAAiC;YACjC,MAAM3B,sBAAU,CAAC4B,UAAU,CAACC,MAAM,CAAC;gBACjCC,SAAS/G,YAAY2F,EAAE;gBACvBqB,WAAWvE,KAAKe,IAAI;gBACpByD,aAAaxE,KAAKkD,EAAE;gBACpBuB,cAAcC,mBAAmB1E;gBACjCmD,WAAWnD,KAAKmD,SAAS,IAAI;gBAC7BwB,gBAAgB3E,KAAK2E,cAAc,GAAG3E,KAAK2E,cAAc,CAACC,IAAI,CAAC,MAAM;gBACrEC,OAAO;YACT;YAEA,4BAA4B;YAC5BC,iBAAiB,CAAC,OAAO,EAAE9E,KAAKe,IAAI,CAAC,qBAAqB,CAAC,EAAE;QAC/D,EAAE,OAAOiD,KAAK;YACZZ,QAAQtF,KAAK,CAAC,+BAA+BkG;YAC7C,IAAIA,IAAIe,OAAO,IAAIf,IAAIe,OAAO,CAAC/D,QAAQ,CAAC,mBAAmB;gBACzD8D,iBACE,CAAC,CAAC,EAAE9E,KAAKe,IAAI,CAAC,gCAAgC,CAAC,EAC/C;YAEJ,OAAO;gBACL+D,iBACE,kDACA;YAEJ;QACF;IACF;IAEA,oDAAoD;IACpD,MAAMJ,qBAAqB,CAAC1E;QAC1B,IAAI,CAACA,KAAKiB,WAAW,EAAE,OAAO;QAE9B,MAAM+D,YAAY;YAChB;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QAED,KAAK,MAAMC,WAAWD,UAAW;YAC/B,IAAIhF,KAAKiB,WAAW,CAACH,WAAW,GAAGE,QAAQ,CAACiE,QAAQnE,WAAW,KAAK;gBAClE,OAAOmE;YACT;QACF;QAEA,OAAOjF,KAAKC,SAAS,EAAEE,MAAM,IAAI,CAAC,EAAE,IAAI;IAC1C;IAEA,wCAAwC;IACxC,MAAM2E,mBAAmB,CAACC,SAASzE,OAAO,SAAS;QACjD,MAAM4E,eAAevB,SAASwB,aAAa,CAAC;QAC5CD,aAAaE,SAAS,GAAG,CAAC,0BAA0B,EAAE9E,KAAK,CAAC;QAC5D4E,aAAaG,WAAW,GAAGN;QAE3BpB,SAAS2B,IAAI,CAACC,WAAW,CAACL;QAE1BzB,WAAW;YACT,IAAIyB,aAAaM,UAAU,EAAE;gBAC3BN,aAAaO,KAAK,CAACC,SAAS,GAAG;gBAC/BjC,WAAW;oBACTE,SAAS2B,IAAI,CAACK,WAAW,CAACT;gBAC5B,GAAG;YACL;QACF,GAAG;IACL;IAEA,qBACE,qBAACU,eAAM;QAACC,OAAM;kBACZ,cAAA,sBAACC;YAAIV,WAAU;;8BAEb,qBAACU;oBAAIV,WAAU;8BACb,cAAA,sBAACU;wBAAIV,WAAU;;0CACb,qBAACW;gCAAGX,WAAU;0CAAoB;;0CAClC,qBAACY;gCAAEZ,WAAU;0CAAuB;;;;;8BAQxC,qBAACa,gBAAU;oBACTC,UAAUjC;oBACVrG,SAASA;oBACTuI,cAAc/H;;gBAIfR,yBACC,qBAACkI;oBAAIV,WAAU;8BACb,cAAA,qBAACgB,gBAAO;wBAACrB,SAAQ;wBAAqBsB,MAAK;;;gBAK9CvI,SAAS,CAACF,yBACT,sBAACkI;oBAAIV,WAAU;;sCACb,qBAACkB;4BAAGlB,WAAU;sCAAO;;sCACrB,qBAACY;4BAAEZ,WAAU;sCAAQtH;;sCACrB,qBAACyI;4BACCC,SAAS;gCACPzI,SAAS;gCACTE,eAAe;4BACjB;4BACAmH,WAAU;sCACX;;;;gBAOJ,CAACxH,WAAW,CAACE,SAASE,6BACrB;;wBAEGN,cAAcwE,MAAM,GAAG,mBACtB,sBAAC4D;4BAAIV,WAAU;;8CAEb,sBAACU;oCAAIV,WAAU;;sDACb,sBAACU;4CAAIV,WAAU;;8DACb,sBAACkB;oDAAGlB,WAAU;;wDAAuB;wDACR1H,cAAcwE,MAAM;wDAAC;wDAC/ChE,eAAeR,cAAcwE,MAAM,kBAClC,sBAACuE;4DAAKrB,WAAU;;gEAAuB;gEACrB1H,cAAcwE,MAAM;gEAAC;gEAAI;gEACxChE;gEAAa;;;;;8DAIpB,sBAAC8H;oDAAEZ,WAAU;;wDAAuB;wDACxBhH;wDAAa;;;gDAExBuC,yBAAyBuB,MAAM,GAAGpD,gCACjC,sBAACkH;oDAAEZ,WAAU;;wDAAkB;wDACvBxG;wDAAY;wDAAKmD;wDAAW;wDAAGI,aAAa;wDAAE;wDACnDH,KAAK0E,GAAG,CACPvE,aAAarD,gBACb6B,yBAAyBuB,MAAM;wDAC9B;wDAAI;wDACHvB,yBAAyBuB,MAAM;wDAAC;;;8DAGxC,qBAACyE;oDAAMvB,WAAU;8DAAa;;;;sDAEhC,qBAACwB;4CACCtG,MAAK;4CACLuG,OAAOnI;4CACPoI,UAAU,CAACzH,IAAMV,gBAAgBU,EAAE0H,MAAM,CAACF,KAAK;4CAC/CG,aAAY;4CACZ5B,WAAU;;;;8CAKd,sBAACU;oCAAIV,WAAU;;sDAEb,sBAACU;4CAAIV,WAAU;;8DACb,qBAACuB;oDAAMvB,WAAU;8DAAa;;8DAC9B,sBAAC6B;oDACCJ,OAAOvI;oDACPwI,UAAU,CAACzH,IAAMd,UAAUc,EAAE0H,MAAM,CAACF,KAAK;oDACzCzB,WAAU;;sEAEV,qBAAC8B;4DAAOL,OAAM;sEAAY;;sEAC1B,qBAACK;4DAAOL,OAAM;sEAAO;;sEACrB,qBAACK;4DAAOL,OAAM;sEAAY;;sEAC1B,qBAACK;4DAAOL,OAAM;sEAAY;;sEAC1B,qBAACK;4DAAOL,OAAM;sEAAS;;;;;;sDAK3B,sBAACf;4CAAIV,WAAU;;8DACb,qBAACuB;oDAAMvB,WAAU;8DAAa;;8DAC9B,sBAAC6B;oDACCJ,OAAOrI;oDACPsI,UAAU,CAACzH,IAAMZ,YAAYY,EAAE0H,MAAM,CAACF,KAAK;oDAC3CzB,WAAU;;sEAEV,sBAAC8B;4DAAOL,OAAM;;gEAAM;gEACJnJ,cAAcwE,MAAM;gEAAC;;;wDAEpCvC,UAAUI,GAAG,CAAC,CAACO;4DACd,MAAM6G,QAAQzJ,cAAc2C,MAAM,CAChC,CAACL,OACCA,KAAKC,SAAS,IACdD,KAAKC,SAAS,CACXa,WAAW,GACXE,QAAQ,CAACV,KAAKQ,WAAW,KAC9BoB,MAAM;4DACR,qBACE,sBAACgF;gEAAkBL,OAAO,CAAC,KAAK,EAAEvG,KAAK,CAAC;;oEACrCA;oEAAK;oEAAG6G;oEAAM;;+DADJ7G;wDAIjB;wDACCE,SAAST,GAAG,CAAC,CAACW;4DACb,MAAMyG,QAAQzJ,cAAc2C,MAAM,CAChC,CAACL,OAASA,KAAKU,MAAM,KAAKA,QAC1BwB,MAAM;4DACR,qBACE,sBAACgF;gEAAoBL,OAAO,CAAC,OAAO,EAAEnG,OAAO,CAAC;;oEAC3CA,OAAO0G,MAAM,CAAC,GAAGC,WAAW,KAAK3G,OAAO2B,KAAK,CAAC;oEAAG;oEACjD8E;oEAAM;;+DAFIzG;wDAKjB;;;;;;;gCAMJhC,CAAAA,gBACAF,aAAa,SACbF,WAAW,WAAU,mBACrB,qBAACwH;oCAAIV,WAAU;8CACb,cAAA,qBAACmB;wCACCC,SAAS;4CACP7H,gBAAgB;4CAChBF,YAAY;4CACZF,UAAU;wCACZ;wCACA6G,WAAU;kDACX;;;;;wBASRzE,yBAAyBuB,MAAM,KAAKxE,cAAcwE,MAAM,kBACvD,qBAAC4D;4BAAIV,WAAU;sCACb,cAAA,sBAACY;gCAAEZ,WAAU;;oCAA0B;oCAC5BzE,yBAAyBuB,MAAM;oCAAC;oCACxCxD,gBAAgB,CAAC,WAAW,EAAEA,aAAa,CAAC,CAAC;;;;wBAMnDhB,cAAcwE,MAAM,KAAK,kBACxB,sBAAC4D;4BAAIV,WAAU;;8CACb,qBAACU;oCAAIV,WAAU;8CAAoB;;8CACnC,sBAACkB;oCAAGlB,WAAU;;wCAAqB;wCACZhH;wCAAa;;;8CAEpC,sBAAC0H;oCAAIV,WAAU;;sDACb,qBAACY;4CAAEZ,WAAU;sDAAwB;;sDAGrC,sBAACkC;4CAAGlC,WAAU;;8DACZ,qBAACmC;8DAAG;;8DACJ,qBAACA;8DAAG;;8DAGJ,qBAACA;8DAAG;;8DACJ,qBAACA;8DAAG;;8DACJ,qBAACA;8DAAG;;;;;;;6BAIR5G,yBAAyBuB,MAAM,KAAK,kBACtC,sBAAC4D;4BAAIV,WAAU;;8CACb,qBAACU;oCAAIV,WAAU;8CAAoB;;8CACnC,qBAACkB;oCAAGlB,WAAU;8CAAqB;;8CACnC,qBAACY;oCAAEZ,WAAU;8CAAwB;;;2CAKvC,sBAACU;;8CAEC,qBAACA;oCAAIV,WAAU;8CACZhD,iBAAiBrC,GAAG,CAAC,CAACC,MAAMwH,sBAC3B,qBAAC1B;4CAECV,WAAW,CAAC,sBAAsB,EAAEpD,KAAK0E,GAAG,CAACc,QAAQ,GAAG,GAAG,CAAC;sDAE5D,cAAA,qBAACC,mBAAU;gDACTzH,MAAMA;gDACNzC,aAAaA;gDACbmK,mBAAmBxD;gDACnByD,qBAAqB;;2CAPlB3H,KAAKkD,EAAE,IAAIsE;;gCAcrBzF,aAAa,mBACZ,qBAAC+D;oCAAIV,WAAU;8CACb,cAAA,sBAACU;wCAAIV,WAAU;;0DACb,qBAACmB;gDACCC,SAAS,IAAM3H,eAAe;gDAC9B+I,UAAUhJ,gBAAgB;gDAC1BwG,WAAU;0DACX;;0DAGD,qBAACmB;gDACCC,SAAS,IAAM3H,eAAeD,cAAc;gDAC5CgJ,UAAUhJ,gBAAgB;gDAC1BwG,WAAU;0DACX;;0DAKD,qBAACU;gDAAIV,WAAU;0DACZyC,MAAMC,IAAI,CACT;oDAAE5F,QAAQF,KAAK0E,GAAG,CAAC,GAAG3E;gDAAY,GAClC,CAACgG,GAAGC;oDACF,IAAIC;oDACJ,IAAIlG,cAAc,GAAG;wDACnBkG,UAAUD,IAAI;oDAChB,OAAO,IAAIpJ,eAAe,GAAG;wDAC3BqJ,UAAUD,IAAI;oDAChB,OAAO,IAAIpJ,eAAemD,aAAa,GAAG;wDACxCkG,UAAUlG,aAAa,IAAIiG;oDAC7B,OAAO;wDACLC,UAAUrJ,cAAc,IAAIoJ;oDAC9B;oDAEA,qBACE,qBAACzB;wDAECC,SAAS,IAAM3H,eAAeoJ;wDAC9B7C,WAAW,CAAC,IAAI,EAAExG,gBAAgBqJ,UAAU,gBAAgB,gBAAgB,eAAe,CAAC;kEAE3FA;uDAJIA;gDAOX;;0DAIJ,qBAAC1B;gDACCC,SAAS,IAAM3H,eAAeD,cAAc;gDAC5CgJ,UAAUhJ,gBAAgBmD;gDAC1BqD,WAAU;0DACX;;0DAGD,qBAACmB;gDACCC,SAAS,IAAM3H,eAAekD;gDAC9B6F,UAAUhJ,gBAAgBmD;gDAC1BqD,WAAU;0DACX;;;;;;;;;;;;AAavB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ea00b3e6fd2a1508deaa215c650582e67841bbc6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_139yh3e5by = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_139yh3e5by();
cov_139yh3e5by().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_139yh3e5by().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_139yh3e5by().f[0]++;
    cov_139yh3e5by().s[2]++;
    return SearchPage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_139yh3e5by().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_139yh3e5by().s[4]++, require("react"));
const _router =
/* istanbul ignore next */
(cov_139yh3e5by().s[5]++, require("next/router"));
const _Layout =
/* istanbul ignore next */
(/*#__PURE__*/cov_139yh3e5by().s[6]++, _interop_require_default(require("../components/Layout/Layout")));
const _Card =
/* istanbul ignore next */
(cov_139yh3e5by().s[7]++, require("../components/Card"));
const _SearchCard =
/* istanbul ignore next */
(/*#__PURE__*/cov_139yh3e5by().s[8]++, _interop_require_default(require("../components/Search/SearchCard")));
const _Loading =
/* istanbul ignore next */
(/*#__PURE__*/cov_139yh3e5by().s[9]++, _interop_require_default(require("../components/UI/Loading")));
const _ThemeContext =
/* istanbul ignore next */
(cov_139yh3e5by().s[10]++, require("../contexts/ThemeContext"));
const _apiService =
/* istanbul ignore next */
(cov_139yh3e5by().s[11]++, require("../services/apiService"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_139yh3e5by().f[1]++;
  cov_139yh3e5by().s[12]++;
  return /* istanbul ignore next */(cov_139yh3e5by().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_139yh3e5by().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_139yh3e5by().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_139yh3e5by().b[0][1]++, {
    default: obj
  });
}
function SearchPage() {
  /* istanbul ignore next */
  cov_139yh3e5by().f[2]++;
  const router =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[13]++, (0, _router.useRouter)());
  const {
    theme
  } =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[14]++, (0, _ThemeContext.useTheme)());
  const [currentUser, setCurrentUser] =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[15]++, (0, _react.useState)(null));
  const [searchResults, setSearchResults] =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[16]++, (0, _react.useState)([]));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[17]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[18]++, (0, _react.useState)(""));
  const [hasSearched, setHasSearched] =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[19]++, (0, _react.useState)(false));
  const [totalResults, setTotalResults] =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[20]++, (0, _react.useState)(0));
  const [currentQuery, setCurrentQuery] =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[21]++, (0, _react.useState)(""));
  const [sortBy, setSortBy] =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[22]++, (0, _react.useState)("relevance"));
  const [filterBy, setFilterBy] =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[23]++, (0, _react.useState)("all"));
  const [searchFilter, setSearchFilter] =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[24]++, (0, _react.useState)(""));
  const [currentPage, setCurrentPage] =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[25]++, (0, _react.useState)(1));
  const resultsPerPage =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[26]++, 10);
  // Load user from localStorage on mount
  /* istanbul ignore next */
  cov_139yh3e5by().s[27]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_139yh3e5by().f[3]++;
    const savedUser =
    /* istanbul ignore next */
    (cov_139yh3e5by().s[28]++, localStorage.getItem("currentUser"));
    /* istanbul ignore next */
    cov_139yh3e5by().s[29]++;
    if (savedUser) {
      /* istanbul ignore next */
      cov_139yh3e5by().b[2][0]++;
      cov_139yh3e5by().s[30]++;
      try {
        /* istanbul ignore next */
        cov_139yh3e5by().s[31]++;
        setCurrentUser(JSON.parse(savedUser));
      } catch (e) {
        /* istanbul ignore next */
        cov_139yh3e5by().s[32]++;
        localStorage.removeItem("currentUser");
      }
    } else
    /* istanbul ignore next */
    {
      cov_139yh3e5by().b[2][1]++;
    }
  }, []);
  // Handle URL query parameters
  /* istanbul ignore next */
  cov_139yh3e5by().s[33]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_139yh3e5by().f[4]++;
    cov_139yh3e5by().s[34]++;
    if (
    /* istanbul ignore next */
    (cov_139yh3e5by().b[4][0]++, router.isReady) &&
    /* istanbul ignore next */
    (cov_139yh3e5by().b[4][1]++, router.query.q)) {
      /* istanbul ignore next */
      cov_139yh3e5by().b[3][0]++;
      const query =
      /* istanbul ignore next */
      (cov_139yh3e5by().s[35]++, router.query.q);
      /* istanbul ignore next */
      cov_139yh3e5by().s[36]++;
      setCurrentQuery(query);
      /* istanbul ignore next */
      cov_139yh3e5by().s[37]++;
      performSearch(query);
    } else
    /* istanbul ignore next */
    {
      cov_139yh3e5by().b[3][1]++;
    }
  }, [router.isReady, router.query.q]);
  // Extract unique card types for filtering
  const cardTypes =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[38]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_139yh3e5by().f[5]++;
    const types =
    /* istanbul ignore next */
    (cov_139yh3e5by().s[39]++, [...new Set(searchResults.map(card => {
      /* istanbul ignore next */
      cov_139yh3e5by().f[6]++;
      cov_139yh3e5by().s[40]++;
      if (card.type_line) {
        /* istanbul ignore next */
        cov_139yh3e5by().b[5][0]++;
        const mainType =
        /* istanbul ignore next */
        (cov_139yh3e5by().s[41]++, card.type_line.split("—")[0].trim().split(" ")[0]);
        /* istanbul ignore next */
        cov_139yh3e5by().s[42]++;
        return mainType;
      } else
      /* istanbul ignore next */
      {
        cov_139yh3e5by().b[5][1]++;
      }
      cov_139yh3e5by().s[43]++;
      return null;
    }).filter(type => {
      /* istanbul ignore next */
      cov_139yh3e5by().f[7]++;
      cov_139yh3e5by().s[44]++;
      return type;
    }))]);
    /* istanbul ignore next */
    cov_139yh3e5by().s[45]++;
    return types.sort();
  }, [searchResults]));
  // Extract unique rarities for filtering
  const rarities =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[46]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_139yh3e5by().f[8]++;
    const rarityList =
    /* istanbul ignore next */
    (cov_139yh3e5by().s[47]++, [...new Set(searchResults.map(card => {
      /* istanbul ignore next */
      cov_139yh3e5by().f[9]++;
      cov_139yh3e5by().s[48]++;
      return card.rarity;
    }).filter(rarity => {
      /* istanbul ignore next */
      cov_139yh3e5by().f[10]++;
      cov_139yh3e5by().s[49]++;
      return rarity;
    }))]);
    /* istanbul ignore next */
    cov_139yh3e5by().s[50]++;
    return rarityList.sort();
  }, [searchResults]));
  // Filter and sort results
  const filteredAndSortedResults =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[51]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_139yh3e5by().f[11]++;
    let filtered =
    /* istanbul ignore next */
    (cov_139yh3e5by().s[52]++, [...searchResults]);
    // Apply search filter
    /* istanbul ignore next */
    cov_139yh3e5by().s[53]++;
    if (searchFilter.trim()) {
      /* istanbul ignore next */
      cov_139yh3e5by().b[6][0]++;
      const search =
      /* istanbul ignore next */
      (cov_139yh3e5by().s[54]++, searchFilter.toLowerCase());
      /* istanbul ignore next */
      cov_139yh3e5by().s[55]++;
      filtered = filtered.filter(card => {
        /* istanbul ignore next */
        cov_139yh3e5by().f[12]++;
        cov_139yh3e5by().s[56]++;
        return /* istanbul ignore next */(cov_139yh3e5by().b[7][0]++, card.name.toLowerCase().includes(search)) ||
        /* istanbul ignore next */
        (cov_139yh3e5by().b[7][1]++, card.oracle_text) &&
        /* istanbul ignore next */
        (cov_139yh3e5by().b[7][2]++, card.oracle_text.toLowerCase().includes(search)) ||
        /* istanbul ignore next */
        (cov_139yh3e5by().b[7][3]++, card.type_line) &&
        /* istanbul ignore next */
        (cov_139yh3e5by().b[7][4]++, card.type_line.toLowerCase().includes(search));
      });
    } else
    /* istanbul ignore next */
    {
      cov_139yh3e5by().b[6][1]++;
    }
    // Apply type filter
    cov_139yh3e5by().s[57]++;
    if (filterBy !== "all") {
      /* istanbul ignore next */
      cov_139yh3e5by().b[8][0]++;
      cov_139yh3e5by().s[58]++;
      if (filterBy.startsWith("type-")) {
        /* istanbul ignore next */
        cov_139yh3e5by().b[9][0]++;
        const type =
        /* istanbul ignore next */
        (cov_139yh3e5by().s[59]++, filterBy.replace("type-", ""));
        /* istanbul ignore next */
        cov_139yh3e5by().s[60]++;
        filtered = filtered.filter(card => {
          /* istanbul ignore next */
          cov_139yh3e5by().f[13]++;
          cov_139yh3e5by().s[61]++;
          return /* istanbul ignore next */(cov_139yh3e5by().b[10][0]++, card.type_line) &&
          /* istanbul ignore next */
          (cov_139yh3e5by().b[10][1]++, card.type_line.toLowerCase().includes(type.toLowerCase()));
        });
      } else {
        /* istanbul ignore next */
        cov_139yh3e5by().b[9][1]++;
        cov_139yh3e5by().s[62]++;
        if (filterBy.startsWith("rarity-")) {
          /* istanbul ignore next */
          cov_139yh3e5by().b[11][0]++;
          const rarity =
          /* istanbul ignore next */
          (cov_139yh3e5by().s[63]++, filterBy.replace("rarity-", ""));
          /* istanbul ignore next */
          cov_139yh3e5by().s[64]++;
          filtered = filtered.filter(card => {
            /* istanbul ignore next */
            cov_139yh3e5by().f[14]++;
            cov_139yh3e5by().s[65]++;
            return card.rarity === rarity;
          });
        } else
        /* istanbul ignore next */
        {
          cov_139yh3e5by().b[11][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_139yh3e5by().b[8][1]++;
    }
    // Apply sorting
    cov_139yh3e5by().s[66]++;
    filtered.sort((a, b) => {
      /* istanbul ignore next */
      cov_139yh3e5by().f[15]++;
      cov_139yh3e5by().s[67]++;
      switch (sortBy) {
        case "name":
          /* istanbul ignore next */
          cov_139yh3e5by().b[12][0]++;
          cov_139yh3e5by().s[68]++;
          return a.name.localeCompare(b.name);
        case "name-desc":
          /* istanbul ignore next */
          cov_139yh3e5by().b[12][1]++;
          cov_139yh3e5by().s[69]++;
          return b.name.localeCompare(a.name);
        case "mana-cost":
          /* istanbul ignore next */
          cov_139yh3e5by().b[12][2]++;
          const aCmc =
          /* istanbul ignore next */
          (cov_139yh3e5by().s[70]++,
          /* istanbul ignore next */
          (cov_139yh3e5by().b[13][0]++, a.cmc) ||
          /* istanbul ignore next */
          (cov_139yh3e5by().b[13][1]++, 0));
          const bCmc =
          /* istanbul ignore next */
          (cov_139yh3e5by().s[71]++,
          /* istanbul ignore next */
          (cov_139yh3e5by().b[14][0]++, b.cmc) ||
          /* istanbul ignore next */
          (cov_139yh3e5by().b[14][1]++, 0));
          /* istanbul ignore next */
          cov_139yh3e5by().s[72]++;
          return aCmc - bCmc;
        case "rarity":
          /* istanbul ignore next */
          cov_139yh3e5by().b[12][3]++;
          const rarityOrder =
          /* istanbul ignore next */
          (cov_139yh3e5by().s[73]++, {
            common: 1,
            uncommon: 2,
            rare: 3,
            mythic: 4
          });
          /* istanbul ignore next */
          cov_139yh3e5by().s[74]++;
          return (
          /* istanbul ignore next */
          (cov_139yh3e5by().b[15][0]++, rarityOrder[a.rarity]) ||
          /* istanbul ignore next */
          (cov_139yh3e5by().b[15][1]++, 0)) - (
          /* istanbul ignore next */
          (cov_139yh3e5by().b[16][0]++, rarityOrder[b.rarity]) ||
          /* istanbul ignore next */
          (cov_139yh3e5by().b[16][1]++, 0));
        case "relevance":
          /* istanbul ignore next */
          cov_139yh3e5by().b[12][4]++;
        default:
          /* istanbul ignore next */
          cov_139yh3e5by().b[12][5]++;
          cov_139yh3e5by().s[75]++;
          return 0;
      }
    });
    /* istanbul ignore next */
    cov_139yh3e5by().s[76]++;
    return filtered;
  }, [searchResults, searchFilter, filterBy, sortBy]));
  // Pagination
  const totalPages =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[77]++, Math.ceil(filteredAndSortedResults.length / resultsPerPage));
  const startIndex =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[78]++, (currentPage - 1) * resultsPerPage);
  const paginatedResults =
  /* istanbul ignore next */
  (cov_139yh3e5by().s[79]++, filteredAndSortedResults.slice(startIndex, startIndex + resultsPerPage));
  // Reset to page 1 when filters change
  /* istanbul ignore next */
  cov_139yh3e5by().s[80]++;
  (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_139yh3e5by().f[16]++;
    cov_139yh3e5by().s[81]++;
    setCurrentPage(1);
  }, [searchFilter, filterBy, sortBy]);
  /* istanbul ignore next */
  cov_139yh3e5by().s[82]++;
  const performSearch = async query => {
    /* istanbul ignore next */
    cov_139yh3e5by().f[17]++;
    cov_139yh3e5by().s[83]++;
    if (
    /* istanbul ignore next */
    (cov_139yh3e5by().b[18][0]++, !query) ||
    /* istanbul ignore next */
    (cov_139yh3e5by().b[18][1]++, !query.trim())) {
      /* istanbul ignore next */
      cov_139yh3e5by().b[17][0]++;
      cov_139yh3e5by().s[84]++;
      setError("Please enter a search term");
      /* istanbul ignore next */
      cov_139yh3e5by().s[85]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_139yh3e5by().b[17][1]++;
    }
    cov_139yh3e5by().s[86]++;
    try {
      /* istanbul ignore next */
      cov_139yh3e5by().s[87]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_139yh3e5by().s[88]++;
      setError("");
      /* istanbul ignore next */
      cov_139yh3e5by().s[89]++;
      setHasSearched(true);
      let data;
      let displayQuery;
      // Handle random card request
      /* istanbul ignore next */
      cov_139yh3e5by().s[90]++;
      if (query === "*") {
        /* istanbul ignore next */
        cov_139yh3e5by().b[19][0]++;
        cov_139yh3e5by().s[91]++;
        data = await _apiService.apiService.cards.random();
        /* istanbul ignore next */
        cov_139yh3e5by().s[92]++;
        displayQuery = "Random Card";
      } else {
        /* istanbul ignore next */
        cov_139yh3e5by().b[19][1]++;
        cov_139yh3e5by().s[93]++;
        data = await _apiService.apiService.cards.search(query);
        /* istanbul ignore next */
        cov_139yh3e5by().s[94]++;
        displayQuery = query;
        // Update URL without causing a page reload for regular searches
        /* istanbul ignore next */
        cov_139yh3e5by().s[95]++;
        if (router.query.q !== query) {
          /* istanbul ignore next */
          cov_139yh3e5by().b[20][0]++;
          cov_139yh3e5by().s[96]++;
          router.replace(`/search?q=${encodeURIComponent(query)}`, undefined, {
            shallow: true
          });
        } else
        /* istanbul ignore next */
        {
          cov_139yh3e5by().b[20][1]++;
        }
      }
      // Handle different response formats
      let cards, total;
      /* istanbul ignore next */
      cov_139yh3e5by().s[97]++;
      if (query === "*") {
        /* istanbul ignore next */
        cov_139yh3e5by().b[21][0]++;
        cov_139yh3e5by().s[98]++;
        // Random card returns a single card object
        cards = [data];
        /* istanbul ignore next */
        cov_139yh3e5by().s[99]++;
        total = 1;
      } else {
        /* istanbul ignore next */
        cov_139yh3e5by().b[21][1]++;
        cov_139yh3e5by().s[100]++;
        // Regular search returns Scryfall API response format
        cards =
        /* istanbul ignore next */
        (cov_139yh3e5by().b[22][0]++, data.data) ||
        /* istanbul ignore next */
        (cov_139yh3e5by().b[22][1]++, []);
        /* istanbul ignore next */
        cov_139yh3e5by().s[101]++;
        total =
        /* istanbul ignore next */
        (cov_139yh3e5by().b[23][0]++, data.total_cards) ||
        /* istanbul ignore next */
        (cov_139yh3e5by().b[23][1]++, cards.length);
      }
      // Filter out cards with incomplete essential data
      const validCards =
      /* istanbul ignore next */
      (cov_139yh3e5by().s[102]++, cards.filter(card => {
        /* istanbul ignore next */
        cov_139yh3e5by().f[18]++;
        // Ensure card has essential properties for good UX
        const isValid =
        /* istanbul ignore next */
        (cov_139yh3e5by().s[103]++,
        /* istanbul ignore next */
        (cov_139yh3e5by().b[24][0]++, card) &&
        /* istanbul ignore next */
        (cov_139yh3e5by().b[24][1]++, card.name) &&
        /* istanbul ignore next */
        (cov_139yh3e5by().b[24][2]++, card.id) && (
        /* istanbul ignore next */
        (cov_139yh3e5by().b[24][3]++, card.type_line) ||
        /* istanbul ignore next */
        (cov_139yh3e5by().b[24][4]++, card.oracle_text) ||
        /* istanbul ignore next */
        (cov_139yh3e5by().b[24][5]++, card.mana_cost)));
        /* istanbul ignore next */
        cov_139yh3e5by().s[104]++;
        if (
        /* istanbul ignore next */
        (cov_139yh3e5by().b[26][0]++, !isValid) &&
        /* istanbul ignore next */
        (cov_139yh3e5by().b[26][1]++, card)) {
          /* istanbul ignore next */
          cov_139yh3e5by().b[25][0]++;
          cov_139yh3e5by().s[105]++;
          console.warn(`Filtering out incomplete card: ${
          /* istanbul ignore next */
          (cov_139yh3e5by().b[27][0]++, card.name) ||
          /* istanbul ignore next */
          (cov_139yh3e5by().b[27][1]++, "Unknown")} - missing essential data`);
        } else
        /* istanbul ignore next */
        {
          cov_139yh3e5by().b[25][1]++;
        }
        cov_139yh3e5by().s[106]++;
        return isValid;
      }));
      /* istanbul ignore next */
      cov_139yh3e5by().s[107]++;
      if (validCards.length < cards.length) {
        /* istanbul ignore next */
        cov_139yh3e5by().b[28][0]++;
        cov_139yh3e5by().s[108]++;
        console.log(`Filtered search results: ${validCards.length}/${cards.length} cards had complete data`);
      } else
      /* istanbul ignore next */
      {
        cov_139yh3e5by().b[28][1]++;
      }
      cov_139yh3e5by().s[109]++;
      setSearchResults(validCards);
      /* istanbul ignore next */
      cov_139yh3e5by().s[110]++;
      setTotalResults(validCards.length);
      /* istanbul ignore next */
      cov_139yh3e5by().s[111]++;
      setCurrentQuery(displayQuery);
      // Scroll to results on mobile
      /* istanbul ignore next */
      cov_139yh3e5by().s[112]++;
      if (
      /* istanbul ignore next */
      (cov_139yh3e5by().b[30][0]++, cards.length > 0) &&
      /* istanbul ignore next */
      (cov_139yh3e5by().b[30][1]++, window.innerWidth <= 768)) {
        /* istanbul ignore next */
        cov_139yh3e5by().b[29][0]++;
        cov_139yh3e5by().s[113]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_139yh3e5by().f[19]++;
          const resultsElement =
          /* istanbul ignore next */
          (cov_139yh3e5by().s[114]++, document.getElementById("search-results"));
          /* istanbul ignore next */
          cov_139yh3e5by().s[115]++;
          if (resultsElement) {
            /* istanbul ignore next */
            cov_139yh3e5by().b[31][0]++;
            cov_139yh3e5by().s[116]++;
            resultsElement.scrollIntoView({
              behavior: "smooth",
              block: "start"
            });
          } else
          /* istanbul ignore next */
          {
            cov_139yh3e5by().b[31][1]++;
          }
        }, 100);
      } else
      /* istanbul ignore next */
      {
        cov_139yh3e5by().b[29][1]++;
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_139yh3e5by().s[117]++;
      console.error("Search error:", err);
      /* istanbul ignore next */
      cov_139yh3e5by().s[118]++;
      setError("Failed to search cards. Please try again.");
      /* istanbul ignore next */
      cov_139yh3e5by().s[119]++;
      setSearchResults([]);
      /* istanbul ignore next */
      cov_139yh3e5by().s[120]++;
      setTotalResults(0);
    } finally {
      /* istanbul ignore next */
      cov_139yh3e5by().s[121]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_139yh3e5by().s[122]++;
  const handleSearch = query => {
    /* istanbul ignore next */
    cov_139yh3e5by().f[20]++;
    cov_139yh3e5by().s[123]++;
    performSearch(query);
  };
  /* istanbul ignore next */
  cov_139yh3e5by().s[124]++;
  const handleFavouriteToggle = async card => {
    /* istanbul ignore next */
    cov_139yh3e5by().f[21]++;
    cov_139yh3e5by().s[125]++;
    if (!currentUser) {
      /* istanbul ignore next */
      cov_139yh3e5by().b[32][0]++;
      cov_139yh3e5by().s[126]++;
      alert("Please create a profile first to save favourites!");
      /* istanbul ignore next */
      cov_139yh3e5by().s[127]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_139yh3e5by().b[32][1]++;
    }
    cov_139yh3e5by().s[128]++;
    try {
      /* istanbul ignore next */
      cov_139yh3e5by().s[129]++;
      // Add card to favourites via API
      await _apiService.apiService.favourites.create({
        user_id: currentUser.id,
        card_name: card.name,
        scryfall_id: card.id,
        ability_type: extractAbilityType(card),
        mana_cost:
        /* istanbul ignore next */
        (cov_139yh3e5by().b[33][0]++, card.mana_cost) ||
        /* istanbul ignore next */
        (cov_139yh3e5by().b[33][1]++, null),
        color_identity: card.color_identity ?
        /* istanbul ignore next */
        (cov_139yh3e5by().b[34][0]++, card.color_identity.join("")) :
        /* istanbul ignore next */
        (cov_139yh3e5by().b[34][1]++, null),
        notes: ""
      });
      // Show success notification
      /* istanbul ignore next */
      cov_139yh3e5by().s[130]++;
      showNotification(`Added "${card.name}" to your favourites!`, "success");
    } catch (err) {
      /* istanbul ignore next */
      cov_139yh3e5by().s[131]++;
      console.error("Error adding to favourites:", err);
      /* istanbul ignore next */
      cov_139yh3e5by().s[132]++;
      if (
      /* istanbul ignore next */
      (cov_139yh3e5by().b[36][0]++, err.message) &&
      /* istanbul ignore next */
      (cov_139yh3e5by().b[36][1]++, err.message.includes("already exists"))) {
        /* istanbul ignore next */
        cov_139yh3e5by().b[35][0]++;
        cov_139yh3e5by().s[133]++;
        showNotification(`"${card.name}" is already in your favourites!`, "info");
      } else {
        /* istanbul ignore next */
        cov_139yh3e5by().b[35][1]++;
        cov_139yh3e5by().s[134]++;
        showNotification("Failed to add to favourites. Please try again.", "error");
      }
    }
  };
  // Helper function to extract ability type from card
  /* istanbul ignore next */
  cov_139yh3e5by().s[135]++;
  const extractAbilityType = card => {
    /* istanbul ignore next */
    cov_139yh3e5by().f[22]++;
    cov_139yh3e5by().s[136]++;
    if (!card.oracle_text) {
      /* istanbul ignore next */
      cov_139yh3e5by().b[37][0]++;
      cov_139yh3e5by().s[137]++;
      return "";
    } else
    /* istanbul ignore next */
    {
      cov_139yh3e5by().b[37][1]++;
    }
    const abilities =
    /* istanbul ignore next */
    (cov_139yh3e5by().s[138]++, ["Flying", "Trample", "First Strike", "Deathtouch", "Lifelink", "Vigilance", "Haste", "Hexproof"]);
    /* istanbul ignore next */
    cov_139yh3e5by().s[139]++;
    for (const ability of abilities) {
      /* istanbul ignore next */
      cov_139yh3e5by().s[140]++;
      if (card.oracle_text.toLowerCase().includes(ability.toLowerCase())) {
        /* istanbul ignore next */
        cov_139yh3e5by().b[38][0]++;
        cov_139yh3e5by().s[141]++;
        return ability;
      } else
      /* istanbul ignore next */
      {
        cov_139yh3e5by().b[38][1]++;
      }
    }
    /* istanbul ignore next */
    cov_139yh3e5by().s[142]++;
    return /* istanbul ignore next */(cov_139yh3e5by().b[39][0]++, card.type_line?.split(" ")[0]) ||
    /* istanbul ignore next */
    (cov_139yh3e5by().b[39][1]++, "");
  };
  // Helper function to show notifications
  /* istanbul ignore next */
  cov_139yh3e5by().s[143]++;
  const showNotification = (message, type =
  /* istanbul ignore next */
  (cov_139yh3e5by().b[40][0]++, "success")) => {
    /* istanbul ignore next */
    cov_139yh3e5by().f[23]++;
    const notification =
    /* istanbul ignore next */
    (cov_139yh3e5by().s[144]++, document.createElement("div"));
    /* istanbul ignore next */
    cov_139yh3e5by().s[145]++;
    notification.className = `notification notification-${type}`;
    /* istanbul ignore next */
    cov_139yh3e5by().s[146]++;
    notification.textContent = message;
    /* istanbul ignore next */
    cov_139yh3e5by().s[147]++;
    document.body.appendChild(notification);
    /* istanbul ignore next */
    cov_139yh3e5by().s[148]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_139yh3e5by().f[24]++;
      cov_139yh3e5by().s[149]++;
      if (notification.parentNode) {
        /* istanbul ignore next */
        cov_139yh3e5by().b[41][0]++;
        cov_139yh3e5by().s[150]++;
        notification.style.animation = "slideIn 0.3s ease-out reverse";
        /* istanbul ignore next */
        cov_139yh3e5by().s[151]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_139yh3e5by().f[25]++;
          cov_139yh3e5by().s[152]++;
          document.body.removeChild(notification);
        }, 300);
      } else
      /* istanbul ignore next */
      {
        cov_139yh3e5by().b[41][1]++;
      }
    }, 3000);
  };
  /* istanbul ignore next */
  cov_139yh3e5by().s[153]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_Layout.default, {
    title: "Search Cards - Planeswalker's Primer",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "container page-content",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-center mb-3",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "header-box search-page-header",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
            className: "search-page-title",
            children: "Search Magic Cards"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "search-page-subtitle",
            children: "Find cards by name, ability, or creature type. Use filters to narrow your search."
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardSearch, {
        onSearch: handleSearch,
        loading: loading,
        initialQuery: currentQuery
      }),
      /* istanbul ignore next */
      (cov_139yh3e5by().b[42][0]++, loading) &&
      /* istanbul ignore next */
      (cov_139yh3e5by().b[42][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "loading-container",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Loading.default, {
          message: "Searching cards...",
          size: "large"
        })
      })),
      /* istanbul ignore next */
      (cov_139yh3e5by().b[43][0]++, error) &&
      /* istanbul ignore next */
      (cov_139yh3e5by().b[43][1]++, !loading) &&
      /* istanbul ignore next */
      (cov_139yh3e5by().b[43][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "error text-center mt-2 mb-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "mb-2",
          children: "Search Error"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "mb-3",
          children: error
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: () => {
            /* istanbul ignore next */
            cov_139yh3e5by().f[26]++;
            cov_139yh3e5by().s[154]++;
            setError("");
            /* istanbul ignore next */
            cov_139yh3e5by().s[155]++;
            setHasSearched(false);
          },
          className: "btn",
          children: "Try Again"
        })]
      })),
      /* istanbul ignore next */
      (cov_139yh3e5by().b[44][0]++, !loading) &&
      /* istanbul ignore next */
      (cov_139yh3e5by().b[44][1]++, !error) &&
      /* istanbul ignore next */
      (cov_139yh3e5by().b[44][2]++, hasSearched) &&
      /* istanbul ignore next */
      (cov_139yh3e5by().b[44][3]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
        /* istanbul ignore next */
        (cov_139yh3e5by().b[45][0]++, searchResults.length > 0) &&
        /* istanbul ignore next */
        (cov_139yh3e5by().b[45][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "card mb-3",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "form-group",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "search-results-header-combined",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("h3", {
                className: "search-results-title",
                children: ["\uD83D\uDD0D Search Results - Found ", searchResults.length, " cards",
                /* istanbul ignore next */
                (cov_139yh3e5by().b[46][0]++, totalResults > searchResults.length) &&
                /* istanbul ignore next */
                (cov_139yh3e5by().b[46][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  className: "search-results-total",
                  children: ["(showing first ", searchResults.length, " of", " ", totalResults, " total)"]
                }))]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                className: "search-results-query",
                children: ['Search: "', currentQuery, '"']
              }),
              /* istanbul ignore next */
              (cov_139yh3e5by().b[47][0]++, filteredAndSortedResults.length > resultsPerPage) &&
              /* istanbul ignore next */
              (cov_139yh3e5by().b[47][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                className: "pagination-info",
                children: ["Page ", currentPage, " of ", totalPages, " (", startIndex + 1, "-", Math.min(startIndex + resultsPerPage, filteredAndSortedResults.length), " ", "of ", filteredAndSortedResults.length, " results)"]
              })), /*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                className: "form-label",
                children: "Filter results:"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "text",
              value: searchFilter,
              onChange: e => {
                /* istanbul ignore next */
                cov_139yh3e5by().f[27]++;
                cov_139yh3e5by().s[156]++;
                return setSearchFilter(e.target.value);
              },
              placeholder: "Filter by card name, text, or type...",
              className: "search-input"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "filters-grid",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "form-group",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                className: "form-label",
                children: "\uD83D\uDCCA Sort By"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("select", {
                value: sortBy,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_139yh3e5by().f[28]++;
                  cov_139yh3e5by().s[157]++;
                  return setSortBy(e.target.value);
                },
                className: "filter-select",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "relevance",
                  children: "Relevance"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "name",
                  children: "Name A-Z"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "name-desc",
                  children: "Name Z-A"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "mana-cost",
                  children: "Mana Cost"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "rarity",
                  children: "Rarity"
                })]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "form-group",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                className: "form-label",
                children: "\uD83C\uDFAF Filter By"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("select", {
                value: filterBy,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_139yh3e5by().f[29]++;
                  cov_139yh3e5by().s[158]++;
                  return setFilterBy(e.target.value);
                },
                className: "filter-select",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("option", {
                  value: "all",
                  children: ["All Results (", searchResults.length, ")"]
                }), cardTypes.map(type => {
                  /* istanbul ignore next */
                  cov_139yh3e5by().f[30]++;
                  const count =
                  /* istanbul ignore next */
                  (cov_139yh3e5by().s[159]++, searchResults.filter(card => {
                    /* istanbul ignore next */
                    cov_139yh3e5by().f[31]++;
                    cov_139yh3e5by().s[160]++;
                    return /* istanbul ignore next */(cov_139yh3e5by().b[48][0]++, card.type_line) &&
                    /* istanbul ignore next */
                    (cov_139yh3e5by().b[48][1]++, card.type_line.toLowerCase().includes(type.toLowerCase()));
                  }).length);
                  /* istanbul ignore next */
                  cov_139yh3e5by().s[161]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("option", {
                    value: `type-${type}`,
                    children: [type, " (", count, ")"]
                  }, type);
                }), rarities.map(rarity => {
                  /* istanbul ignore next */
                  cov_139yh3e5by().f[32]++;
                  const count =
                  /* istanbul ignore next */
                  (cov_139yh3e5by().s[162]++, searchResults.filter(card => {
                    /* istanbul ignore next */
                    cov_139yh3e5by().f[33]++;
                    cov_139yh3e5by().s[163]++;
                    return card.rarity === rarity;
                  }).length);
                  /* istanbul ignore next */
                  cov_139yh3e5by().s[164]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("option", {
                    value: `rarity-${rarity}`,
                    children: [rarity.charAt(0).toUpperCase() + rarity.slice(1), " (", count, ")"]
                  }, rarity);
                })]
              })]
            })]
          }), (
          /* istanbul ignore next */
          (cov_139yh3e5by().b[49][0]++, searchFilter) ||
          /* istanbul ignore next */
          (cov_139yh3e5by().b[49][1]++, filterBy !== "all") ||
          /* istanbul ignore next */
          (cov_139yh3e5by().b[49][2]++, sortBy !== "relevance")) &&
          /* istanbul ignore next */
          (cov_139yh3e5by().b[49][3]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "filter-clear-section",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
              onClick: () => {
                /* istanbul ignore next */
                cov_139yh3e5by().f[34]++;
                cov_139yh3e5by().s[165]++;
                setSearchFilter("");
                /* istanbul ignore next */
                cov_139yh3e5by().s[166]++;
                setFilterBy("all");
                /* istanbul ignore next */
                cov_139yh3e5by().s[167]++;
                setSortBy("relevance");
              },
              className: "btn btn-secondary",
              children: "Clear All Filters"
            })
          }))]
        })),
        /* istanbul ignore next */
        (cov_139yh3e5by().b[50][0]++, filteredAndSortedResults.length !== searchResults.length) &&
        /* istanbul ignore next */
        (cov_139yh3e5by().b[50][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "card mb-2",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
            className: "search-results-filtered",
            children: ["Showing ", filteredAndSortedResults.length, " filtered results",
            /* istanbul ignore next */
            (cov_139yh3e5by().b[51][0]++, searchFilter) &&
            /* istanbul ignore next */
            (cov_139yh3e5by().b[51][1]++, ` matching "${searchFilter}"`)]
          })
        })), searchResults.length === 0 ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_139yh3e5by().b[52][0]++, (0, _jsxruntime.jsxs)("div", {
          className: "search-empty-state card",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "search-empty-icon",
            children: "\uD83D\uDD0D"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("h3", {
            className: "search-empty-title",
            children: ['No cards found for "', currentQuery, '"']
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "search-empty-content",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "search-empty-subtitle",
              children: "Try these search tips:"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("ul", {
              className: "search-tips-list",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                children: "Check spelling of card names"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                children: 'Try searching for abilities like "flying" or "trample"'
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                children: 'Search for creature types like "dragon" or "angel"'
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                children: "Use the filters above to browse by colour or type"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                children: 'Try more general terms like "red" or "artifact"'
              })]
            })]
          })]
        })) :
        /* istanbul ignore next */
        (cov_139yh3e5by().b[52][1]++, filteredAndSortedResults.length === 0 ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_139yh3e5by().b[53][0]++, (0, _jsxruntime.jsxs)("div", {
          className: "search-empty-state card",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "search-empty-icon",
            children: "\uD83D\uDD0D"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
            className: "search-empty-title",
            children: "No matches found"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "search-empty-subtitle",
            children: "Try adjusting your search or filter settings."
          })]
        })) :
        /* istanbul ignore next */
        (/*#__PURE__*/cov_139yh3e5by().b[53][1]++, (0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "cards-grid",
            children: paginatedResults.map((card, index) => {
              /* istanbul ignore next */
              cov_139yh3e5by().f[35]++;
              cov_139yh3e5by().s[168]++;
              return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: `fade-in fade-in-delay-${Math.min(index + 1, 5)}`,
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_SearchCard.default, {
                  card: card,
                  currentUser: currentUser,
                  onFavouriteToggle: handleFavouriteToggle,
                  showFavouriteButton: true
                })
              },
              /* istanbul ignore next */
              (cov_139yh3e5by().b[54][0]++, card.id) ||
              /* istanbul ignore next */
              (cov_139yh3e5by().b[54][1]++, index));
            })
          }),
          /* istanbul ignore next */
          (cov_139yh3e5by().b[55][0]++, totalPages > 1) &&
          /* istanbul ignore next */
          (cov_139yh3e5by().b[55][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "pagination-controls card",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "pagination-buttons",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                onClick: () => {
                  /* istanbul ignore next */
                  cov_139yh3e5by().f[36]++;
                  cov_139yh3e5by().s[169]++;
                  return setCurrentPage(1);
                },
                disabled: currentPage === 1,
                className: "btn btn-secondary pagination-btn",
                children: "First"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                onClick: () => {
                  /* istanbul ignore next */
                  cov_139yh3e5by().f[37]++;
                  cov_139yh3e5by().s[170]++;
                  return setCurrentPage(currentPage - 1);
                },
                disabled: currentPage === 1,
                className: "btn btn-secondary pagination-btn",
                children: "Previous"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "page-numbers",
                children: Array.from({
                  length: Math.min(5, totalPages)
                }, (_, i) => {
                  /* istanbul ignore next */
                  cov_139yh3e5by().f[38]++;
                  let pageNum;
                  /* istanbul ignore next */
                  cov_139yh3e5by().s[171]++;
                  if (totalPages <= 5) {
                    /* istanbul ignore next */
                    cov_139yh3e5by().b[56][0]++;
                    cov_139yh3e5by().s[172]++;
                    pageNum = i + 1;
                  } else {
                    /* istanbul ignore next */
                    cov_139yh3e5by().b[56][1]++;
                    cov_139yh3e5by().s[173]++;
                    if (currentPage <= 3) {
                      /* istanbul ignore next */
                      cov_139yh3e5by().b[57][0]++;
                      cov_139yh3e5by().s[174]++;
                      pageNum = i + 1;
                    } else {
                      /* istanbul ignore next */
                      cov_139yh3e5by().b[57][1]++;
                      cov_139yh3e5by().s[175]++;
                      if (currentPage >= totalPages - 2) {
                        /* istanbul ignore next */
                        cov_139yh3e5by().b[58][0]++;
                        cov_139yh3e5by().s[176]++;
                        pageNum = totalPages - 4 + i;
                      } else {
                        /* istanbul ignore next */
                        cov_139yh3e5by().b[58][1]++;
                        cov_139yh3e5by().s[177]++;
                        pageNum = currentPage - 2 + i;
                      }
                    }
                  }
                  /* istanbul ignore next */
                  cov_139yh3e5by().s[178]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_139yh3e5by().f[39]++;
                      cov_139yh3e5by().s[179]++;
                      return setCurrentPage(pageNum);
                    },
                    className: `btn ${currentPage === pageNum ?
                    /* istanbul ignore next */
                    (cov_139yh3e5by().b[59][0]++, "btn-primary") :
                    /* istanbul ignore next */
                    (cov_139yh3e5by().b[59][1]++, "btn-secondary")} pagination-btn`,
                    children: pageNum
                  }, pageNum);
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                onClick: () => {
                  /* istanbul ignore next */
                  cov_139yh3e5by().f[40]++;
                  cov_139yh3e5by().s[180]++;
                  return setCurrentPage(currentPage + 1);
                },
                disabled: currentPage === totalPages,
                className: "btn btn-secondary pagination-btn",
                children: "Next"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                onClick: () => {
                  /* istanbul ignore next */
                  cov_139yh3e5by().f[41]++;
                  cov_139yh3e5by().s[181]++;
                  return setCurrentPage(totalPages);
                },
                disabled: currentPage === totalPages,
                className: "btn btn-secondary pagination-btn",
                children: "Last"
              })]
            })
          }))]
        })))]
      }))]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,