{"version":3,"names":["cov_1hojg733y8","actualCoverage","s","SearchCard","globalActiveModal","modalListeners","setGlobalActiveModal","modal","f","b","close","forEach","listener","card","currentUser","onFavouriteToggle","onRemoveFavourite","showFavouriteButton","isFavourite","imageLoaded","setImageLoaded","_react","useState","imageError","setImageError","showModal","setShowModal","mounted","setMounted","useEffect","modalManager","activeModal","push","index","indexOf","splice","handleFavouriteClick","openModal","closeModal","getCardColourClass","colours","length","classMap","W","U","B","R","G","cardColours","color_identity","colourClass","showPlaceholder","image_uris","normal","formatManaSymbols","manaCost","formatted","replace","formatOracleText","text","textWithMana","split","map","sentence","trim","filter","getPowerToughness","power","undefined","toughness","_jsxruntime","jsxs","Fragment","className","onClick","style","cursor","jsx","name","type_line","mana_cost","src","alt","onLoad","onError","_reactdom","createPortal","e","stopPropagation","dangerouslySetInnerHTML","__html","oracle_text","rarity","toLowerCase","set_name","artist","title","scryfall_uri","href","target","rel","document","body"],"sources":["/Users/samuellove/Documents/GitHub/Capstone/frontend/components/Search/SearchCard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\n// Global state to ensure only one modal is open at a time\nlet globalActiveModal = null;\nconst modalListeners = [];\n\nconst setGlobalActiveModal = (modal) => {\n  if (globalActiveModal && globalActiveModal !== modal) {\n    globalActiveModal.close();\n  }\n  globalActiveModal = modal;\n  modalListeners.forEach((listener) => listener(modal));\n};\n\nexport default function SearchCard({\n  card,\n  currentUser,\n  onFavouriteToggle,\n  onRemoveFavourite,\n  showFavouriteButton = true,\n  isFavourite = false,\n}) {\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [imageError, setImageError] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  // Modal management\n  useEffect(() => {\n    const modalManager = {\n      close: () => setShowModal(false),\n    };\n\n    const listener = (activeModal) => {\n      if (activeModal !== modalManager && showModal) {\n        setShowModal(false);\n      }\n    };\n\n    modalListeners.push(listener);\n\n    if (showModal) {\n      setGlobalActiveModal(modalManager);\n    }\n\n    return () => {\n      const index = modalListeners.indexOf(listener);\n      if (index > -1) modalListeners.splice(index, 1);\n      if (globalActiveModal === modalManager) {\n        globalActiveModal = null;\n      }\n    };\n  }, [showModal]);\n\n  if (!card) {\n    return null;\n  }\n\n  const handleFavouriteClick = () => {\n    if (isFavourite && onRemoveFavourite && currentUser) {\n      onRemoveFavourite(card);\n    } else if (onFavouriteToggle && currentUser) {\n      onFavouriteToggle(card);\n    }\n  };\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (globalActiveModal) {\n      globalActiveModal = null;\n    }\n  };\n\n  // Helper function to determine CSS colour class from colour identity\n  const getCardColourClass = (colours) => {\n    if (!colours || colours.length === 0) {\n      return \"mtg-colour-colourless\";\n    } else if (colours.length === 1) {\n      const classMap = {\n        W: \"mtg-colour-white\",\n        U: \"mtg-colour-blue\",\n        B: \"mtg-colour-black\",\n        R: \"mtg-colour-red\",\n        G: \"mtg-colour-green\",\n      };\n      return classMap[colours[0]] || \"mtg-colour-colourless\";\n    } else {\n      return \"mtg-colour-multicolour\";\n    }\n  };\n\n  // Get colours from the card data\n  const cardColours = card.color_identity || card.colours || [];\n  const colourClass = getCardColourClass(cardColours);\n\n  // Check if we should show placeholder (no image available or error)\n  const showPlaceholder = !card.image_uris?.normal || imageError;\n\n  // Parse mana symbols for better display\n  const formatManaSymbols = (manaCost) => {\n    if (!manaCost) return \"\";\n\n    // Replace mana symbols with styled spans\n    let formatted = manaCost;\n\n    // Generic mana costs {1}, {2}, etc.\n    formatted = formatted.replace(\n      /\\{(\\d+)\\}/g,\n      '<span class=\"mana-symbol mana-generic\">$1</span>',\n    );\n\n    // Colored mana symbols\n    formatted = formatted.replace(\n      /\\{W\\}/g,\n      '<span class=\"mana-symbol mana-white\">W</span>',\n    );\n    formatted = formatted.replace(\n      /\\{U\\}/g,\n      '<span class=\"mana-symbol mana-blue\">U</span>',\n    );\n    formatted = formatted.replace(\n      /\\{B\\}/g,\n      '<span class=\"mana-symbol mana-black\">B</span>',\n    );\n    formatted = formatted.replace(\n      /\\{R\\}/g,\n      '<span class=\"mana-symbol mana-red\">R</span>',\n    );\n    formatted = formatted.replace(\n      /\\{G\\}/g,\n      '<span class=\"mana-symbol mana-green\">G</span>',\n    );\n    formatted = formatted.replace(\n      /\\{C\\}/g,\n      '<span class=\"mana-symbol mana-colorless\">C</span>',\n    );\n\n    // Hybrid mana\n    formatted = formatted.replace(\n      /\\{([WUBRG])\\/([WUBRG])\\}/g,\n      '<span class=\"mana-symbol mana-hybrid\">$1/$2</span>',\n    );\n\n    // Variable mana\n    formatted = formatted.replace(\n      /\\{X\\}/g,\n      '<span class=\"mana-symbol mana-variable\">X</span>',\n    );\n\n    return formatted;\n  };\n\n  // Format oracle text with better line breaks and mana symbols\n  const formatOracleText = (text) => {\n    if (!text) return \"\";\n\n    // First replace mana symbols in the text\n    let textWithMana = formatManaSymbols(text);\n\n    // Split on periods followed by space and capital letter (sentence boundaries)\n    // Also split on specific keywords that should be on new lines\n    let formatted = textWithMana\n      .replace(/\\. ([A-Z])/g, \".\\n$1\")\n      .replace(/\\n([A-Z][a-z]+ \\([^)]+\\))/g, \"\\n\\n$1\") // Abilities with reminder text\n      .replace(\n        /\\n(Flying|Trample|Haste|Vigilance|Deathtouch|Lifelink|First strike|Double strike|Hexproof|Indestructible|Reach|Defender|Menace|Ward)/g,\n        \"\\n\\n$1\",\n      )\n      .split(\"\\n\")\n      .map((sentence) => sentence.trim())\n      .filter((sentence) => sentence.length > 0);\n\n    return formatted;\n  };\n\n  // Helper function to get power/toughness\n  const getPowerToughness = () => {\n    if (card.power !== undefined && card.toughness !== undefined) {\n      return `${card.power}/${card.toughness}`;\n    }\n    return null;\n  };\n\n  return (\n    <>\n      <div\n        className=\"search-card\"\n        onClick={openModal}\n        style={{ cursor: \"pointer\" }}\n      >\n        {/* Card Image Only */}\n        <div className=\"search-card-image-container\">\n          {showPlaceholder ? (\n            <div className={`mtg-card-placeholder ${colourClass}`}>\n              <div className=\"mtg-card-placeholder-content\">\n                <h3 className=\"mtg-card-placeholder-name\">{card.name}</h3>\n                {card.type_line && (\n                  <p className=\"mtg-card-placeholder-type\">{card.type_line}</p>\n                )}\n                {card.mana_cost && (\n                  <p className=\"mtg-card-placeholder-mana\">\n                    {formatManaSymbols(card.mana_cost)}\n                  </p>\n                )}\n                <p className=\"mtg-card-placeholder-hint\">Placeholder</p>\n              </div>\n            </div>\n          ) : (\n            <>\n              {!imageLoaded && (\n                <div className=\"card-image-placeholder\">Loading image...</div>\n              )}\n              <img\n                src={card.image_uris.normal}\n                alt={card.name}\n                onLoad={() => setImageLoaded(true)}\n                onError={() => setImageError(true)}\n                className={`search-card-image ${imageLoaded ? \"loaded\" : \"\"}`}\n              />\n            </>\n          )}\n        </div>\n\n        {/* Card Name Overlay */}\n        <div className=\"search-card-overlay\">\n          <h4 className=\"search-card-name\">{card.name}</h4>\n        </div>\n      </div>\n\n      {/* Modal */}\n      {showModal &&\n        mounted &&\n        createPortal(\n          <div className=\"card-modal-overlay\" onClick={closeModal}>\n            <div\n              className=\"card-modal-content\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              {/* Modal Header */}\n              <div className=\"card-modal-header\">\n                <h2 className=\"card-modal-title\">{card.name}</h2>\n                <button className=\"card-modal-close\" onClick={closeModal}>\n                  ✕\n                </button>\n              </div>\n\n              {/* Modal Body */}\n              <div className=\"card-modal-body\">\n                {/* Card Image in Modal */}\n                <div className=\"card-modal-image-container\">\n                  {showPlaceholder ? (\n                    <div className={`mtg-card-placeholder ${colourClass}`}>\n                      <div className=\"mtg-card-placeholder-content\">\n                        <h3 className=\"mtg-card-placeholder-name\">\n                          {card.name}\n                        </h3>\n                        {card.type_line && (\n                          <p className=\"mtg-card-placeholder-type\">\n                            {card.type_line}\n                          </p>\n                        )}\n                        {card.mana_cost && (\n                          <p className=\"mtg-card-placeholder-mana\">\n                            {formatManaSymbols(card.mana_cost)}\n                          </p>\n                        )}\n                        <p className=\"mtg-card-placeholder-hint\">Placeholder</p>\n                      </div>\n                    </div>\n                  ) : (\n                    <img\n                      src={card.image_uris?.normal}\n                      alt={card.name}\n                      className=\"card-modal-image\"\n                    />\n                  )}\n                </div>\n\n                {/* Card Details */}\n                <div className=\"card-info-section\">\n                  {card.mana_cost && (\n                    <div className=\"mana-cost-display\">\n                      <strong>Mana Cost:</strong>\n                      <span\n                        className=\"mana-symbols\"\n                        dangerouslySetInnerHTML={{\n                          __html: formatManaSymbols(card.mana_cost),\n                        }}\n                      />\n                    </div>\n                  )}\n                  <p className=\"type-line-display\">\n                    <strong>Type:</strong> {card.type_line}\n                  </p>\n                  {card.oracle_text && (\n                    <div className=\"oracle-text\">\n                      <strong>Rules Text:</strong>\n                      <div className=\"oracle-text-content\">\n                        {formatOracleText(card.oracle_text).map(\n                          (sentence, index) => (\n                            <div\n                              key={index}\n                              className=\"oracle-sentence\"\n                              dangerouslySetInnerHTML={{ __html: sentence }}\n                            />\n                          ),\n                        )}\n                      </div>\n                    </div>\n                  )}\n                  {getPowerToughness() && (\n                    <p className=\"power-toughness-display\">\n                      <strong>Power/Toughness:</strong> {getPowerToughness()}\n                    </p>\n                  )}\n                  {card.rarity && (\n                    <div className=\"rarity-display\">\n                      <strong>Rarity:</strong>{\" \"}\n                      <span\n                        className={`rarity-badge rarity-${card.rarity?.toLowerCase()}`}\n                      >\n                        {card.rarity}\n                      </span>\n                    </div>\n                  )}\n                  {card.set_name && (\n                    <p className=\"set-display\">\n                      <strong>Set:</strong> {card.set_name}\n                    </p>\n                  )}\n                  {card.artist && (\n                    <p className=\"artist-display\">\n                      <strong>Artist:</strong> {card.artist}\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              {/* Modal Footer */}\n              <div className=\"card-modal-footer\">\n                {isFavourite && currentUser && (\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      if (onRemoveFavourite) {\n                        onRemoveFavourite(card);\n                      }\n                    }}\n                    className=\"remove-favourite-btn\"\n                    title=\"Remove from favourites\"\n                  >\n                    Remove from Favourites\n                  </button>\n                )}\n                {!isFavourite && showFavouriteButton && currentUser && (\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleFavouriteClick();\n                      closeModal();\n                    }}\n                    className=\"favourite-btn-modal\"\n                    title=\"Add to favourites\"\n                  >\n                    ⭐ Add to Favourites\n                  </button>\n                )}\n                {card.scryfall_uri && (\n                  <a\n                    href={card.scryfall_uri}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"link-btn\"\n                    onClick={(e) => e.stopPropagation()}\n                  >\n                    View on Scryfall\n                  </a>\n                )}\n              </div>\n            </div>\n          </div>,\n          document.body,\n        )}\n    </>\n  );\n}\n"],"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","ignoreList":[]}