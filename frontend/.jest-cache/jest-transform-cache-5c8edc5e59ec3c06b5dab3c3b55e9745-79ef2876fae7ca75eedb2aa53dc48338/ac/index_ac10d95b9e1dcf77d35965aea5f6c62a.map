{"version":3,"names":["Home","cov_2g89idvvqo","f","currentUser","setCurrentUser","s","_react","useState","selectedMechanic","setSelectedMechanic","API_URL","b","process","env","NEXT_PUBLIC_API_URL","handleUserSelect","user","localStorage","setItem","JSON","stringify","removeItem","useEffect","savedUser","getItem","parse","e","handleMechanicSelect","mechanic","selectedPhase","setSelectedPhase","selectedColour","setSelectedColour","selectedCardType","setSelectedCardType","selectedWinCondition","setSelectedWinCondition","selectedDeckType","setSelectedDeckType","selectedCombatStep","setSelectedCombatStep","phaseInfo","beginning","title","_turnPhasesjson","default","phases","name","content","_jsxruntime","jsxs","jsx","style","marginBottom","color","description","Object","values","steps","map","step","index","strategicNotes","length","fontSize","fontStyle","main1","margin","whatYouCanDo","action","tips","background","padding","borderRadius","marginTop","strategicConsiderations","combat","strategicUse","main2","commonActions","ending","automaticActions","detail","detailIndex","commonTriggers","_Layout","className","maxWidth","textAlign","_gameOverviewjson","introduction","lineHeight","fontWeight","tagline","replace","coreGameplay","overview","gameFlow","display","gridTemplateColumns","gap","border","basics","players","gameLength","ageRange","skillTypes","entries","_coloursjson","colourKey","colourData","onClick","emoji","philosophy","strengths","join","mechanics","_cardTypesjson","typeKey","typeData","icon","timing","usage","examples","_CardAnatomy","CardAnatomySection","cardAnatomyData","_cardAnatomyjson","_Mechanics","FilteredMechanicsList","onMechanicSelect","_GameModes","GameModesList","_winConditionsjson","primaryWinConditions","alternativeWinConditions","conditionKey","condition","explanation","tip","_deckBuildingjson","deckTypes","deckType","emojiMap","aggro","control","midrange","combo","characteristics","characteristic","_combatBasicsjson","combatOverview","combatSteps","stepKey","beginningOfCombat","declareAttackers","declareBlockers","combatDamage","endOfCombat","whatHappens","point","_UserSelector","onUserSelect"],"sources":["/Users/samuellove/Documents/GitHub/Capstone/frontend/pages/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout/Layout\";\nimport UserSelector from \"../components/User/UserSelector\";\nimport Loading from \"../components/UI/Loading\";\n\nimport { FilteredMechanicsList } from \"../components/Mechanics\";\nimport { CardAnatomySection } from \"../components/CardAnatomy\";\nimport { GameModesList } from \"../components/GameModes\";\nimport gameOverview from \"../data/gameOverview.json\";\nimport colours from \"../data/colours.json\";\nimport cardTypes from \"../data/cardTypes.json\";\nimport turnPhases from \"../data/turnPhases.json\";\nimport winConditions from \"../data/winConditions.json\";\nimport combatBasics from \"../data/combatBasics.json\";\nimport deckBuilding from \"../data/deckBuilding.json\";\nimport cardAnatomy from \"../data/cardAnatomy.json\";\n\nexport default function Home() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [selectedMechanic, setSelectedMechanic] = useState(null);\n\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001\";\n\n  const handleUserSelect = (user) => {\n    setCurrentUser(user);\n    if (user) {\n      localStorage.setItem(\"currentUser\", JSON.stringify(user));\n    } else {\n      localStorage.removeItem(\"currentUser\");\n    }\n  };\n\n  // Load user from localStorage on mount\n  useEffect(() => {\n    const savedUser = localStorage.getItem(\"currentUser\");\n    if (savedUser) {\n      try {\n        setCurrentUser(JSON.parse(savedUser));\n      } catch (e) {\n        localStorage.removeItem(\"currentUser\");\n      }\n    }\n  }, []);\n\n  const handleMechanicSelect = (mechanic) => {\n    setSelectedMechanic(mechanic);\n  };\n\n  const [selectedPhase, setSelectedPhase] = useState(null);\n  const [selectedColour, setSelectedColour] = useState(null);\n  const [selectedCardType, setSelectedCardType] = useState(null);\n\n  const [selectedWinCondition, setSelectedWinCondition] = useState(null);\n  const [selectedDeckType, setSelectedDeckType] = useState(null);\n  const [selectedCombatStep, setSelectedCombatStep] = useState(null);\n\n  const phaseInfo = {\n    beginning: {\n      title: turnPhases.phases.beginning.name,\n      content: (\n        <div>\n          <p style={{ marginBottom: \"1rem\", color: \"#dee2e6\" }}>\n            {turnPhases.phases.beginning.description}\n          </p>\n          {Object.values(turnPhases.phases.beginning.steps).map(\n            (step, index) => (\n              <div key={index} style={{ marginBottom: \"0.75rem\" }}>\n                <p>\n                  <strong>{step.name}:</strong> {step.description}\n                </p>\n                {step.strategicNotes && step.strategicNotes.length > 0 && (\n                  <p\n                    style={{\n                      fontSize: \"0.9rem\",\n                      color: \"#adb5bd\",\n                      fontStyle: \"italic\",\n                    }}\n                  >\n                    {step.strategicNotes[0]}\n                  </p>\n                )}\n              </div>\n            ),\n          )}\n        </div>\n      ),\n    },\n    main1: {\n      title: turnPhases.phases.main1.name,\n      content: (\n        <div>\n          <p style={{ marginBottom: \"1rem\", color: \"#dee2e6\" }}>\n            {turnPhases.phases.main1.description}\n          </p>\n          <p style={{ marginBottom: \"0.5rem\" }}>\n            <strong>You can:</strong>\n          </p>\n          <ul style={{ margin: \"0 0 1rem 1.5rem\", color: \"#dee2e6\" }}>\n            {turnPhases.phases.main1.whatYouCanDo.map((action, index) => (\n              <li key={index} style={{ marginBottom: \"0.25rem\" }}>\n                {action}\n              </li>\n            ))}\n          </ul>\n          {turnPhases.phases.main1.tips && (\n            <div\n              style={{\n                background: \"#343a40\",\n                padding: \"1rem\",\n                borderRadius: \"0.375rem\",\n                marginTop: \"1rem\",\n              }}\n            >\n              <p style={{ fontSize: \"0.9rem\", color: \"#adb5bd\", margin: \"0\" }}>\n                <strong>Tip:</strong>{\" \"}\n                {turnPhases.phases.main1.strategicConsiderations[0]}\n              </p>\n            </div>\n          )}\n        </div>\n      ),\n    },\n    combat: {\n      title: turnPhases.phases.combat.name,\n      content: (\n        <div>\n          <p style={{ marginBottom: \"1rem\", color: \"#dee2e6\" }}>\n            {turnPhases.phases.combat.description}\n          </p>\n          <p style={{ marginBottom: \"0.75rem\" }}>\n            <strong>Combat Steps:</strong>\n          </p>\n          {Object.values(turnPhases.phases.combat.steps).map((step, index) => (\n            <div key={index} style={{ marginBottom: \"0.75rem\" }}>\n              <p>\n                <strong>{step.name}:</strong> {step.description}\n              </p>\n              {step.strategicUse && step.strategicUse.length > 0 && (\n                <p\n                  style={{\n                    fontSize: \"0.85rem\",\n                    color: \"#adb5bd\",\n                    fontStyle: \"italic\",\n                    marginTop: \"0.25rem\",\n                  }}\n                >\n                  {step.strategicUse[0]}\n                </p>\n              )}\n            </div>\n          ))}\n        </div>\n      ),\n    },\n    main2: {\n      title: turnPhases.phases.main2.name,\n      content: (\n        <div>\n          <p style={{ marginBottom: \"1rem\", color: \"#dee2e6\" }}>\n            {turnPhases.phases.main2.description}\n          </p>\n          <p style={{ marginBottom: \"0.5rem\" }}>\n            <strong>You can:</strong>\n          </p>\n          <ul style={{ margin: \"0 0 1rem 1.5rem\", color: \"#dee2e6\" }}>\n            {turnPhases.phases.main2.commonActions.map((action, index) => (\n              <li key={index} style={{ marginBottom: \"0.25rem\" }}>\n                {action}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ),\n    },\n    ending: {\n      title: turnPhases.phases.ending.name,\n      content: (\n        <div>\n          <p style={{ marginBottom: \"1rem\", color: \"#dee2e6\" }}>\n            {turnPhases.phases.ending.description}\n          </p>\n          {Object.values(turnPhases.phases.ending.steps).map((step, index) => (\n            <div key={index} style={{ marginBottom: \"0.75rem\" }}>\n              <p>\n                <strong>{step.name}:</strong> {step.description}\n              </p>\n              {step.automaticActions && (\n                <ul style={{ margin: \"0.5rem 0 0 1.5rem\", color: \"#dee2e6\" }}>\n                  {step.automaticActions.map((detail, detailIndex) => (\n                    <li\n                      key={detailIndex}\n                      style={{ fontSize: \"0.9rem\", marginBottom: \"0.25rem\" }}\n                    >\n                      {detail}\n                    </li>\n                  ))}\n                </ul>\n              )}\n              {step.commonTriggers && (\n                <ul style={{ margin: \"0.5rem 0 0 1.5rem\", color: \"#dee2e6\" }}>\n                  {step.commonTriggers.map((detail, detailIndex) => (\n                    <li\n                      key={detailIndex}\n                      style={{ fontSize: \"0.9rem\", marginBottom: \"0.25rem\" }}\n                    >\n                      {detail}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          ))}\n        </div>\n      ),\n    },\n  };\n\n  return (\n    <Layout title=\"Planeswalker's Primer - MTG Rulebook for Beginners\">\n      <div className=\"container page-content\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-3\">\n          <div\n            className=\"header-box\"\n            style={{ maxWidth: \"800px\", margin: \"0 auto\" }}\n          >\n            <h1>Welcome to Planeswalker's Primer</h1>\n            <p style={{ fontSize: \"1.25rem\" }}>\n              Your beginner-friendly guide to Magic: The Gathering mechanics and\n              keywords. Learn the basics, explore cards, and save your\n              favourites!\n            </p>\n          </div>\n        </div>\n\n        {/* What is Magic: The Gathering? */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            {gameOverview.introduction.title}\n          </h2>\n          <div\n            style={{\n              maxWidth: \"700px\",\n              margin: \"0 auto\",\n              color: \"#dee2e6\",\n              lineHeight: \"1.6\",\n            }}\n          >\n            <p\n              style={{\n                marginBottom: \"1rem\",\n                fontSize: \"1.1rem\",\n                fontWeight: \"500\",\n                color: \"#ffffff\",\n              }}\n            >\n              {gameOverview.introduction.tagline}\n            </p>\n            <p style={{ marginBottom: \"1rem\" }}>\n              {gameOverview.introduction.description.replace(\n                /\\[\\d+\\](\\[\\d+\\])*/g,\n                \"\",\n              )}\n            </p>\n            <p style={{ marginBottom: \"1rem\" }}>\n              {gameOverview.coreGameplay.overview.replace(\n                /\\[\\d+\\](\\[\\d+\\])*/g,\n                \"\",\n              )}\n            </p>\n            <p style={{ marginBottom: \"1.5rem\" }}>\n              {gameOverview.coreGameplay.gameFlow.replace(\n                /\\[\\d+\\](\\[\\d+\\])*/g,\n                \"\",\n              )}\n            </p>\n\n            {/* Game Basics */}\n            <div className=\"section-content\" style={{ marginBottom: \"1.5rem\" }}>\n              <h3\n                style={{\n                  color: \"#ffffff\",\n                  marginBottom: \"1.5rem\",\n                  textAlign: \"center\",\n                }}\n              >\n                Game Basics\n              </h3>\n              <div\n                style={{\n                  display: \"grid\",\n                  gridTemplateColumns: \"repeat(auto-fit, minmax(240px, 1fr))\",\n                  gap: \"1.5rem\",\n                }}\n              >\n                <div\n                  style={{\n                    textAlign: \"center\",\n                    padding: \"1rem\",\n                    background: \"rgba(255, 255, 255, 0.05)\",\n                    borderRadius: \"0.5rem\",\n                    border: \"1px solid rgba(255, 255, 255, 0.1)\",\n                  }}\n                >\n                  <div style={{ fontSize: \"2rem\", marginBottom: \"0.5rem\" }}>\n                    👥\n                  </div>\n                  <strong\n                    style={{\n                      color: \"#ffffff\",\n                      display: \"block\",\n                      marginBottom: \"0.5rem\",\n                    }}\n                  >\n                    Players\n                  </strong>\n                  <span style={{ color: \"#dee2e6\" }}>\n                    {gameOverview.basics.players}\n                  </span>\n                </div>\n                <div\n                  style={{\n                    textAlign: \"center\",\n                    padding: \"1rem\",\n                    background: \"rgba(255, 255, 255, 0.05)\",\n                    borderRadius: \"0.5rem\",\n                    border: \"1px solid rgba(255, 255, 255, 0.1)\",\n                  }}\n                >\n                  <div style={{ fontSize: \"2rem\", marginBottom: \"0.5rem\" }}>\n                    ⏱️\n                  </div>\n                  <strong\n                    style={{\n                      color: \"#ffffff\",\n                      display: \"block\",\n                      marginBottom: \"0.5rem\",\n                    }}\n                  >\n                    Game Length\n                  </strong>\n                  <span style={{ color: \"#dee2e6\" }}>\n                    {gameOverview.basics.gameLength}\n                  </span>\n                </div>\n                <div\n                  style={{\n                    textAlign: \"center\",\n                    padding: \"1rem\",\n                    background: \"rgba(255, 255, 255, 0.05)\",\n                    borderRadius: \"0.5rem\",\n                    border: \"1px solid rgba(255, 255, 255, 0.1)\",\n                  }}\n                >\n                  <div style={{ fontSize: \"2rem\", marginBottom: \"0.5rem\" }}>\n                    🎓\n                  </div>\n                  <strong\n                    style={{\n                      color: \"#ffffff\",\n                      display: \"block\",\n                      marginBottom: \"0.5rem\",\n                    }}\n                  >\n                    Age Range\n                  </strong>\n                  <span style={{ color: \"#dee2e6\" }}>\n                    {gameOverview.basics.ageRange}\n                  </span>\n                </div>\n                <div\n                  style={{\n                    textAlign: \"center\",\n                    padding: \"1rem\",\n                    background: \"rgba(255, 255, 255, 0.05)\",\n                    borderRadius: \"0.5rem\",\n                    border: \"1px solid rgba(255, 255, 255, 0.1)\",\n                  }}\n                >\n                  <div style={{ fontSize: \"2rem\", marginBottom: \"0.5rem\" }}>\n                    🧠\n                  </div>\n                  <strong\n                    style={{\n                      color: \"#ffffff\",\n                      display: \"block\",\n                      marginBottom: \"0.5rem\",\n                    }}\n                  >\n                    Skills\n                  </strong>\n                  <span style={{ color: \"#dee2e6\" }}>\n                    {gameOverview.basics.skillTypes}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* The Five Colours */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            The Six Colours\n          </h2>\n          <p\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"1.5rem\",\n              color: \"#adb5bd\",\n            }}\n          >\n            Learn about Magic's colour pie and what each colour represents\n          </p>\n          <div\n            className=\"section-grid\"\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit, minmax(100px, 1fr))\",\n              gap: \"0.5rem\",\n              maxWidth: \"700px\",\n              margin: \"0 auto 2rem auto\",\n            }}\n          >\n            {Object.entries(colours).map(([colourKey, colourData]) => (\n              <button\n                key={colourKey}\n                onClick={() =>\n                  setSelectedColour(selectedColour === colourKey ? null : colourKey)\n                }\n                className={`section-button ${selectedColour === colourKey ? \"active\" : \"\"}`}\n              >\n                <span style={{ fontSize: \"1.5rem\" }}>{colourData.emoji}</span>\n                <span>{colourData.name}</span>\n              </button>\n            ))}\n          </div>\n\n          {selectedColour && (\n            <div className=\"section-content\">\n              <h3\n                style={{\n                  marginBottom: \"1rem\",\n                  color: \"#ffffff\",\n                  textAlign: \"center\",\n                }}\n              >\n                {colours[selectedColour].name}\n              </h3>\n              <div style={{ color: \"#dee2e6\", lineHeight: \"1.6\" }}>\n                <p style={{ marginBottom: \"1rem\", fontSize: \"1.1rem\" }}>\n                  {colours[selectedColour].description}\n                </p>\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <strong style={{ color: \"#ffffff\" }}>Philosophy: </strong>\n                  <em style={{ color: \"#adb5bd\" }}>\n                    {colours[selectedColour].philosophy}\n                  </em>\n                </div>\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <strong style={{ color: \"#ffffff\" }}>Strengths: </strong>\n                  {colours[selectedColour].strengths.join(\", \")}\n                </div>\n                <div>\n                  <strong style={{ color: \"#ffffff\" }}>Key Mechanics: </strong>\n                  {colours[selectedColour].mechanics.join(\", \")}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Card Types */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            Card Types\n          </h2>\n          <p\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"1.5rem\",\n              color: \"#adb5bd\",\n            }}\n          >\n            Understand the different types of cards in Magic\n          </p>\n          <div\n            className=\"section-grid\"\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit, minmax(120px, 1fr))\",\n              gap: \"0.5rem\",\n              maxWidth: \"800px\",\n              margin: \"0 auto 2rem auto\",\n            }}\n          >\n            {Object.entries(cardTypes).map(([typeKey, typeData]) => (\n              <button\n                key={typeKey}\n                onClick={() =>\n                  setSelectedCardType(\n                    selectedCardType === typeKey ? null : typeKey,\n                  )\n                }\n                className={`section-button ${selectedCardType === typeKey ? \"active\" : \"\"}`}\n              >\n                <span style={{ fontSize: \"1.5rem\" }}>{typeData.icon}</span>\n                <span>{typeData.name}</span>\n              </button>\n            ))}\n          </div>\n\n          {selectedCardType && (\n            <div className=\"section-content\">\n              <h3\n                style={{\n                  marginBottom: \"1rem\",\n                  color: \"#ffffff\",\n                  textAlign: \"center\",\n                }}\n              >\n                {cardTypes[selectedCardType].name}\n              </h3>\n              <div style={{ color: \"#dee2e6\", lineHeight: \"1.6\" }}>\n                <p style={{ marginBottom: \"1rem\", fontSize: \"1.1rem\" }}>\n                  {cardTypes[selectedCardType].description}\n                </p>\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <strong style={{ color: \"#ffffff\" }}>Timing: </strong>\n                  {cardTypes[selectedCardType].timing}\n                </div>\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <strong style={{ color: \"#ffffff\" }}>Usage: </strong>\n                  {cardTypes[selectedCardType].usage}\n                </div>\n                {cardTypes[selectedCardType].examples && (\n                  <div>\n                    <strong style={{ color: \"#ffffff\" }}>Examples: </strong>\n                    {cardTypes[selectedCardType].examples.join(\", \")}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Turn Phases */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            Turn Phases\n          </h2>\n          <p\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"1.5rem\",\n              color: \"#adb5bd\",\n            }}\n          >\n            Learn the structure of a Magic turn\n          </p>\n          <div\n            className=\"section-grid\"\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit, minmax(120px, 1fr))\",\n              gap: \"0.5rem\",\n              maxWidth: \"600px\",\n              margin: \"0 auto 2rem auto\",\n            }}\n          >\n            <button\n              onClick={() =>\n                setSelectedPhase(\n                  selectedPhase === \"beginning\" ? null : \"beginning\",\n                )\n              }\n              className={`section-button ${selectedPhase === \"beginning\" ? \"active\" : \"\"}`}\n            >\n              <span style={{ fontSize: \"1.5rem\" }}>🌅</span>\n              <span>Beginning</span>\n            </button>\n            <button\n              onClick={() =>\n                setSelectedPhase(selectedPhase === \"main1\" ? null : \"main1\")\n              }\n              className={`section-button ${selectedPhase === \"main1\" ? \"active\" : \"\"}`}\n            >\n              <span style={{ fontSize: \"1.5rem\" }}>🏗️</span>\n              <span>Main 1</span>\n            </button>\n            <button\n              onClick={() =>\n                setSelectedPhase(selectedPhase === \"combat\" ? null : \"combat\")\n              }\n              className={`section-button ${selectedPhase === \"combat\" ? \"active\" : \"\"}`}\n            >\n              <span style={{ fontSize: \"1.5rem\" }}>⚔️</span>\n              <span>Combat</span>\n            </button>\n            <button\n              onClick={() =>\n                setSelectedPhase(selectedPhase === \"main2\" ? null : \"main2\")\n              }\n              className={`section-button ${selectedPhase === \"main2\" ? \"active\" : \"\"}`}\n            >\n              <span style={{ fontSize: \"1.5rem\" }}>🏛️</span>\n              <span>Main 2</span>\n            </button>\n            <button\n              onClick={() =>\n                setSelectedPhase(selectedPhase === \"ending\" ? null : \"ending\")\n              }\n              className={`section-button ${selectedPhase === \"ending\" ? \"active\" : \"\"}`}\n            >\n              <span style={{ fontSize: \"1.5rem\" }}>🌙</span>\n              <span>Ending</span>\n            </button>\n          </div>\n\n          {selectedPhase && (\n            <div className=\"section-content\">\n              <h3\n                style={{\n                  marginBottom: \"1rem\",\n                  color: \"#ffffff\",\n                  textAlign: \"center\",\n                }}\n              >\n                {phaseInfo[selectedPhase].title}\n              </h3>\n              <div style={{ color: \"#dee2e6\", lineHeight: \"1.6\" }}>\n                {phaseInfo[selectedPhase].content}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Card Anatomy */}\n        <CardAnatomySection cardAnatomyData={cardAnatomy} />\n\n        {/* Mechanics Guide */}\n        <FilteredMechanicsList\n          onMechanicSelect={handleMechanicSelect}\n          selectedMechanic={selectedMechanic}\n        />\n\n        {/* Game Modes */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            Game Modes\n          </h2>\n          <p\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"1.5rem\",\n              color: \"#adb5bd\",\n            }}\n          >\n            Discover different ways to play Magic\n          </p>\n          <GameModesList />\n        </div>\n\n        {/* Win Conditions */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            Win Conditions\n          </h2>\n          <p\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"1.5rem\",\n              color: \"#adb5bd\",\n            }}\n          >\n            Learn the different ways to win a game of Magic\n          </p>\n          <div\n            className=\"section-grid\"\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit, minmax(140px, 1fr))\",\n              gap: \"0.5rem\",\n              maxWidth: \"800px\",\n              margin: \"0 auto 2rem auto\",\n            }}\n          >\n            {Object.entries({\n              ...winConditions.primaryWinConditions,\n              ...winConditions.alternativeWinConditions,\n            }).map(([conditionKey, condition]) => (\n              <button\n                key={conditionKey}\n                onClick={() =>\n                  setSelectedWinCondition(\n                    selectedWinCondition === conditionKey ? null : conditionKey,\n                  )\n                }\n                className={`section-button ${selectedWinCondition === conditionKey ? \"active\" : \"\"}`}\n              >\n                <span style={{ fontSize: \"1.5rem\" }}>{condition.emoji}</span>\n                <span>{condition.name}</span>\n              </button>\n            ))}\n          </div>\n\n          {selectedWinCondition && (\n            <div className=\"section-content\">\n              <h3\n                style={{\n                  marginBottom: \"1rem\",\n                  color: \"#ffffff\",\n                  textAlign: \"center\",\n                }}\n              >\n                {\n                  (\n                    winConditions.primaryWinConditions[selectedWinCondition] ||\n                    winConditions.alternativeWinConditions[selectedWinCondition]\n                  ).name\n                }\n              </h3>\n              <div style={{ color: \"#dee2e6\", lineHeight: \"1.6\" }}>\n                <p style={{ marginBottom: \"1rem\", fontSize: \"1.1rem\" }}>\n                  {\n                    (\n                      winConditions.primaryWinConditions[\n                        selectedWinCondition\n                      ] ||\n                      winConditions.alternativeWinConditions[\n                        selectedWinCondition\n                      ]\n                    ).description\n                  }\n                </p>\n                <p style={{ marginBottom: \"1rem\", color: \"#adb5bd\" }}>\n                  {\n                    (\n                      winConditions.primaryWinConditions[\n                        selectedWinCondition\n                      ] ||\n                      winConditions.alternativeWinConditions[\n                        selectedWinCondition\n                      ]\n                    ).explanation\n                  }\n                </p>\n                {(\n                  winConditions.primaryWinConditions[selectedWinCondition] ||\n                  winConditions.alternativeWinConditions[selectedWinCondition]\n                ).tips && (\n                  <div>\n                    <strong style={{ color: \"#ffffff\" }}>Tips: </strong>\n                    <ul style={{ margin: \"0.5rem 0 0 1rem\", padding: \"0\" }}>\n                      {(\n                        winConditions.primaryWinConditions[\n                          selectedWinCondition\n                        ] ||\n                        winConditions.alternativeWinConditions[\n                          selectedWinCondition\n                        ]\n                      ).tips.map((tip, index) => (\n                        <li key={index} style={{ marginBottom: \"0.25rem\" }}>\n                          {tip}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Deck Building Fundamentals */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            Deck Building Fundamentals\n          </h2>\n          <p\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"1.5rem\",\n              color: \"#adb5bd\",\n            }}\n          >\n            Essential rules and principles for constructing your deck\n          </p>\n\n          <div\n            className=\"section-grid\"\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit, minmax(120px, 1fr))\",\n              gap: \"0.5rem\",\n              maxWidth: \"800px\",\n              margin: \"0 auto 2rem auto\",\n            }}\n          >\n            {Object.entries(deckBuilding.deckTypes).map(\n              ([typeKey, deckType]) => {\n                const emojiMap = {\n                  aggro: \"⚡\",\n                  control: \"🛡️\",\n                  midrange: \"⚖️\",\n                  combo: \"🔗\",\n                };\n                return (\n                  <button\n                    key={typeKey}\n                    onClick={() =>\n                      setSelectedDeckType(\n                        selectedDeckType === typeKey ? null : typeKey,\n                      )\n                    }\n                    className={`section-button ${selectedDeckType === typeKey ? \"active\" : \"\"}`}\n                  >\n                    <span style={{ fontSize: \"1.5rem\" }}>\n                      {emojiMap[typeKey]}\n                    </span>\n                    <span>{deckType.name}</span>\n                  </button>\n                );\n              },\n            )}\n          </div>\n\n          {selectedDeckType && (\n            <div className=\"section-content\">\n              <h3\n                style={{\n                  marginBottom: \"1rem\",\n                  color: \"#ffffff\",\n                  textAlign: \"center\",\n                }}\n              >\n                {deckBuilding.deckTypes[selectedDeckType].name}\n              </h3>\n              <div style={{ color: \"#dee2e6\", lineHeight: \"1.6\" }}>\n                <p style={{ marginBottom: \"1rem\", fontSize: \"1.1rem\" }}>\n                  {deckBuilding.deckTypes[selectedDeckType].description}\n                </p>\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <strong style={{ color: \"#ffffff\" }}>\n                    Key Characteristics:\n                  </strong>\n                  <ul style={{ margin: \"0.5rem 0 0 1rem\", padding: \"0\" }}>\n                    {deckBuilding.deckTypes[\n                      selectedDeckType\n                    ].characteristics.map((characteristic, index) => (\n                      <li key={index} style={{ marginBottom: \"0.25rem\" }}>\n                        {characteristic}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div>\n                  <strong style={{ color: \"#ffffff\" }}>Tip: </strong>\n                  <em style={{ color: \"#adb5bd\" }}>\n                    {deckBuilding.deckTypes[selectedDeckType].tips}\n                  </em>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Combat Basics */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            {combatBasics.combatOverview.title}\n          </h2>\n          <p\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"1.5rem\",\n              color: \"#adb5bd\",\n            }}\n          >\n            {combatBasics.combatOverview.description}\n          </p>\n          <div\n            className=\"section-grid\"\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit, minmax(120px, 1fr))\",\n              gap: \"0.5rem\",\n              maxWidth: \"800px\",\n              margin: \"0 auto 2rem auto\",\n            }}\n          >\n            {Object.entries(combatBasics.combatSteps).map(([stepKey, step]) => {\n              const emojiMap = {\n                beginningOfCombat: \"🌅\",\n                declareAttackers: \"🏃\",\n                declareBlockers: \"🛡️\",\n                combatDamage: \"💥\",\n                endOfCombat: \"🏁\",\n              };\n              return (\n                <button\n                  key={stepKey}\n                  onClick={() =>\n                    setSelectedCombatStep(\n                      selectedCombatStep === stepKey ? null : stepKey,\n                    )\n                  }\n                  className={`section-button ${selectedCombatStep === stepKey ? \"active\" : \"\"}`}\n                >\n                  <span style={{ fontSize: \"1.5rem\" }}>\n                    {emojiMap[stepKey]}\n                  </span>\n                  <span>{step.name}</span>\n                </button>\n              );\n            })}\n          </div>\n\n          {selectedCombatStep && (\n            <div className=\"section-content\">\n              <h3\n                style={{\n                  marginBottom: \"1rem\",\n                  color: \"#ffffff\",\n                  textAlign: \"center\",\n                }}\n              >\n                {combatBasics.combatSteps[selectedCombatStep].name}\n              </h3>\n              <div style={{ color: \"#dee2e6\", lineHeight: \"1.6\" }}>\n                <p style={{ marginBottom: \"1rem\", fontSize: \"1.1rem\" }}>\n                  {combatBasics.combatSteps[selectedCombatStep].description}\n                </p>\n                <div>\n                  <strong style={{ color: \"#ffffff\" }}>What Happens: </strong>\n                  <ul style={{ margin: \"0.5rem 0 0 1rem\", padding: \"0\" }}>\n                    {combatBasics.combatSteps[\n                      selectedCombatStep\n                    ].whatHappens.map((point, index) => (\n                      <li key={index} style={{ marginBottom: \"0.25rem\" }}>\n                        {point}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* User Management Section */}\n        <UserSelector\n          onUserSelect={handleUserSelect}\n          currentUser={currentUser}\n        />\n      </div>\n    </Layout>\n  );\n}\n"],"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","ignoreList":[]}