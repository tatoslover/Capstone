{"version":3,"names":["FilteredMechanicsList","cov_1olrvok14z","s","cleanDescription","text","mechanicName","f","b","getFallbackDescription","reminderMatch","match","reminderText","cleaned","replace","trim","length","includes","sentences","split","filter","bestSentence","result","substring","fallback","fallbacks","onMechanicSelect","selectedMechanic","searchQuery","setSearchQuery","_react","useState","filteredMechanics","setFilteredMechanics","_mechanics","allMechanics","sort","selectedCategory","setSelectedCategory","useEffect","filtered","evergreenKeywords","beginnerFriendly","mechanic","toLowerCase","handleMechanicClick","newSelection","name","id","removeCitations","clearSearch","categories","label","count","_jsxruntime","jsxs","style","marginBottom","jsx","textAlign","fontSize","fontWeight","background","WebkitBackgroundClip","WebkitTextFillColor","color","maxWidth","margin","lineHeight","display","justifyContent","gap","flexWrap","map","category","onClick","padding","border","borderRadius","cursor","transition","position","type","placeholder","value","onChange","e","target","width","outline","onFocus","borderColor","onBlur","right","top","transform","Fragment","find","c","maxHeight","overflowY","gridTemplateColumns","isSelected","mechanicData","getMechanicDetails","getCategoryColour","boxShadow","onMouseEnter","onMouseLeave","alignItems","isEvergreen","textTransform","borderBottom","paddingBottom","wikiUrl","getMechanicWikiUrl","description","l","toUpperCase","marginTop","href","rel","textDecoration","fontStyle"],"sources":["/Users/samuellove/Documents/GitHub/Capstone/frontend/components/Mechanics/FilteredMechanicsList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  allMechanics,\n  mechanicsDetails,\n  evergreenKeywords,\n  beginnerFriendly,\n  getMechanicDetails,\n  getMechanicWikiUrl,\n} from \"../../data/mechanics\";\n\n// Enhanced utility function to clean and format wiki text descriptions\nconst cleanDescription = (text, mechanicName) => {\n  if (!text) return getFallbackDescription(mechanicName);\n\n  // First, extract useful reminder text if it exists\n  const reminderMatch = text.match(/\\(([^)]+)\\)/);\n  const reminderText = reminderMatch ? reminderMatch[1] : '';\n\n  // Clean the main text\n  let cleaned = text\n    // Remove citation markers\n    .replace(/\\[\\d+\\]/g, '')\n    // Clean up wiki metadata\n    .replace(/\\b\\w*Keyword\\s*Ability\\w*/gi, '')\n    .replace(/Type\\s+(Static|Triggered|Activated)\\w*/gi, '')\n    .replace(/Introduced\\s+[^.]+/gi, '')\n    .replace(/Last\\s+used\\s+[^.]+/gi, '')\n    .replace(/Reminder\\s+Text\\s*/gi, '')\n    .replace(/Storm\\s+Scale\\s+\\d+/gi, '')\n    .replace(/Statistics[^.]+/gi, '')\n    .replace(/Scryfall\\s+Search[^\"]*\"[^\"]*\"/gi, '')\n    .replace(/\\b\\d+(\\.\\d+)?%/g, '') // Remove percentages\n    .replace(/^\\w+\\s*\\(/g, '') // Remove leading ability name with parenthesis\n    // Normalise whitespace\n    .replace(/\\s+/g, ' ')\n    .replace(/\\n/g, ' ')\n    .trim();\n\n  // If we have useful reminder text, use it\n  if (reminderText && reminderText.length > 20 && !reminderText.includes('keyword')) {\n    return reminderText.trim();\n  }\n\n  // Otherwise, try to extract the most meaningful sentence\n  const sentences = cleaned.split(/[.!?]+/).filter(s => s.trim().length > 15);\n\n  if (sentences.length > 0) {\n    let bestSentence = sentences[0].trim();\n\n    // If first sentence is still messy, try the second\n    if (sentences.length > 1 && (bestSentence.includes('Keyword') || bestSentence.includes('Type') || bestSentence.length < 20)) {\n      bestSentence = sentences[1].trim();\n    }\n\n    const result = bestSentence.substring(0, 180).trim();\n    // If result is still poor quality, use fallback\n    if (result.length < 10 || result.includes('Ability Word') || result.includes('Static')) {\n      return getFallbackDescription(mechanicName);\n    }\n    return result;\n  }\n\n  // Fallback: return cleaned text or fallback description\n  const fallback = cleaned.substring(0, 120).trim();\n  return fallback.length > 10 ? fallback : getFallbackDescription(mechanicName);\n};\n\n// Comprehensive fallback descriptions for mechanics - beginner-friendly explanations\nconst getFallbackDescription = (mechanicName) => {\n  const fallbacks = {\n    // Evergreen Keywords\n    \"Flying\": \"This creature can only be blocked by creatures with flying or reach.\",\n    \"Trample\": \"Excess combat damage can be dealt to the defending player or planeswalker.\",\n    \"First strike\": \"This creature deals combat damage before creatures without first strike.\",\n    \"Deathtouch\": \"Any amount of damage this creature deals is lethal to other creatures.\",\n    \"Lifelink\": \"Damage dealt by this creature causes you to gain that much life.\",\n    \"Vigilance\": \"This creature doesn't tap when it attacks.\",\n    \"Haste\": \"This creature can attack and use tap abilities immediately when it enters.\",\n    \"Hexproof\": \"This creature can't be targeted by spells or abilities opponents control.\",\n    \"Reach\": \"This creature can block creatures with flying.\",\n    \"Menace\": \"This creature can't be blocked except by two or more creatures.\",\n    \"Defender\": \"This creature can't attack.\",\n    \"Double strike\": \"This creature deals first strike and regular combat damage.\",\n    \"Indestructible\": \"This creature can't be destroyed by damage or effects that say 'destroy'.\",\n    \"Flash\": \"You can cast this spell any time you could cast an instant.\",\n    \"Protection\": \"This creature can't be damaged, enchanted, blocked, or targeted by the specified quality.\",\n    \"Ward\": \"Spells and abilities that target this creature cost additional mana to cast.\",\n\n    // Popular Non-Evergreen Keywords\n    \"Cycling\": \"Pay the cycling cost and discard this card to draw a card.\",\n    \"Flashback\": \"You can cast this spell from your graveyard by paying its flashback cost.\",\n    \"Kicker\": \"You may pay an additional cost when casting this spell for an extra effect.\",\n    \"Morph\": \"Cast this face down as a 2/2 creature, then turn it face up for its morph cost.\",\n    \"Scavenge\": \"Exile this creature from your graveyard to put +1/+1 counters on target creature.\",\n    \"Convoke\": \"You can tap creatures to help pay for this spell.\",\n    \"Delve\": \"You can exile cards from your graveyard to help pay for this spell.\",\n    \"Prowess\": \"Gets +1/+1 until end of turn whenever you cast a noncreature spell.\",\n    \"Crew\": \"Tap any number of creatures with total power equal to or greater than this value.\",\n    \"Cascade\": \"When you cast this spell, reveal cards until you reveal a cheaper spell and cast it.\",\n    \"Storm\": \"Copy this spell for each spell cast before it this turn.\",\n    \"Suspend\": \"Exile this card with time counters, then cast it when the last is removed.\",\n    \"Madness\": \"You may cast this card for its madness cost when you discard it.\",\n    \"Bloodthirst\": \"If an opponent was dealt damage this turn, this enters with +1/+1 counters.\",\n    \"Evolve\": \"Whenever a creature enters under your control with greater power or toughness, put a +1/+1 counter on this creature.\",\n    \"Undying\": \"When this creature dies, if it had no +1/+1 counters, return it with a +1/+1 counter.\",\n    \"Persist\": \"When this creature dies, if it had no -1/-1 counters, return it with a -1/-1 counter.\",\n    \"Dredge\": \"If you would draw a card, you may mill cards and return this to your hand instead.\",\n    \"Affinity\": \"This spell costs less to cast for each artifact you control.\",\n    \"Modular\": \"This enters with +1/+1 counters and can move them when it dies.\",\n\n    // Ability Words & Set Mechanics\n    \"Addendum\": \"Provides an additional effect if cast during your main phase.\",\n    \"Living weapon\": \"When this equipment enters, create a 0/0 creature token and attach to it.\",\n    \"Infect\": \"Deals damage to creatures as -1/-1 counters and to players as poison counters.\",\n    \"Fabricate\": \"When this enters, you may create artifact creature tokens or put +1/+1 counters.\",\n    \"Embalm\": \"Exile this creature card from your graveyard to create a token copy.\",\n    \"Eternalize\": \"Exile this creature card from your graveyard to create a 4/4 token copy.\",\n    \"Aftermath\": \"You can cast this from your graveyard, then exile it.\",\n    \"Mentor\": \"Whenever this attacks, put a +1/+1 counter on target attacking creature with lesser power.\",\n    \"Surveil\": \"Look at the top cards of your library, then put any number into your graveyard.\",\n    \"Adapt\": \"Pay the adapt cost to put +1/+1 counters on this if it has no +1/+1 counters.\",\n    \"Spectacle\": \"You may cast this for its spectacle cost if an opponent lost life this turn.\",\n    \"Riot\": \"This enters with your choice of haste or a +1/+1 counter.\",\n    \"Escape\": \"You may cast this from your graveyard by exiling cards and paying its escape cost.\",\n    \"Mutate\": \"Put this on top or bottom of target non-human creature you own.\",\n    \"Companion\": \"If your starting deck meets certain conditions, you may cast this from outside the game.\",\n    \"Foretell\": \"Pay 2 mana to exile this face down, then cast it for its foretell cost later.\",\n    \"Disturb\": \"You may cast this from your graveyard transformed for its disturb cost.\",\n    \"Cleave\": \"You may choose to pay the cleave cost to ignore the bracketed text.\",\n    \"Training\": \"Whenever this attacks with another creature, put a +1/+1 counter on this.\",\n    \"Blitz\": \"You may cast this for its blitz cost for haste and card draw, but it's sacrificed.\",\n    \"Casualty\": \"You may sacrifice a creature to copy this spell.\",\n    \"Connive\": \"Draw a card, then discard a card. If you discarded a nonland, put a +1/+1 counter on this.\",\n    \"Prototype\": \"You may cast this for its prototype cost as a smaller creature.\",\n    \"Toxic\": \"Players dealt combat damage by this get poison counters equal to its toxic value.\",\n    \"Backup\": \"When this enters, put +1/+1 counters on target creature and give it this creature's abilities.\",\n\n    // Landwalk abilities\n    \"Plainswalk\": \"This creature can't be blocked if defending player controls a Plains.\",\n    \"Islandwalk\": \"This creature can't be blocked if defending player controls an Island.\",\n    \"Swampwalk\": \"This creature can't be blocked if defending player controls a Swamp.\",\n    \"Mountainwalk\": \"This creature can't be blocked if defending player controls a Mountain.\",\n    \"Forestwalk\": \"This creature can't be blocked if defending player controls a Forest.\",\n    \"Landwalk\": \"This creature can't be blocked if defending player controls the specified land type.\",\n\n    // Other mechanics\n    \"Equip\": \"Pay this cost to attach this equipment to target creature you control.\",\n    \"Enchant\": \"This aura can only be attached to the specified permanent type.\",\n    \"Partner\": \"You can have two commanders if both have partner.\",\n    \"Annihilator\": \"Whenever this attacks, defending player sacrifices the specified number of permanents.\",\n    \"Shroud\": \"This permanent can't be the target of spells or abilities.\",\n    \"Intimidate\": \"This creature can't be blocked except by artifact creatures and creatures that share a colour.\",\n    \"Fear\": \"This creature can't be blocked except by artifact creatures and black creatures.\",\n    \"Shadow\": \"This creature can only block or be blocked by creatures with shadow.\",\n    \"Horsemanship\": \"This creature can't be blocked except by creatures with horsemanship.\",\n    \"Banding\": \"You can attack with multiple creatures as a band and redistribute combat damage.\",\n    \"Flanking\": \"Whenever this blocks or is blocked by a creature without flanking, that creature gets -1/-1.\",\n    \"Bushido\": \"Whenever this blocks or becomes blocked, it gets +X/+X until end of turn.\",\n    \"Ninjutsu\": \"Return an unblocked attacker to hand to put this onto the battlefield attacking.\",\n    \"Splice\": \"You may reveal this from your hand and pay its splice cost to add its effects to another spell.\",\n    \"Soulshift\": \"When this dies, return target spirit card with lower mana value to your hand.\",\n    \"Champion\": \"When this enters, exile target creature of the specified type you control or sacrifice this.\",\n    \"Changeling\": \"This creature is every creature type.\",\n    \"Hideaway\": \"When this enters, look at the top cards, exile one face down, put the rest on bottom.\",\n    \"Prowl\": \"You may cast this for its prowl cost if a player was dealt combat damage by the specified creature type.\",\n    \"Reinforce\": \"Discard this card and pay its reinforce cost to put +1/+1 counters on target creature.\",\n    \"Conspire\": \"You may tap two untapped creatures that share a colour with this spell to copy it.\",\n    \"Retrace\": \"You may cast this from your graveyard by discarding a land card.\",\n    \"Devour\": \"When this enters, you may sacrifice creatures to put +1/+1 counters on it.\",\n    \"Exalted\": \"Whenever a creature you control attacks alone, it gets +1/+1 until end of turn.\",\n    \"Unearth\": \"Pay the unearth cost to return this from your graveyard to the battlefield with haste.\",\n    \"Multikicker\": \"You may pay the kicker cost any number of times.\",\n    \"Rebound\": \"If you cast this from your hand, exile it and cast it again next turn.\",\n    \"Miracle\": \"You may cast this for its miracle cost if you drew it this turn.\",\n    \"Soulbond\": \"You may pair this with another unpaired creature when either enters.\",\n    \"Unleash\": \"You may have this enter with a +1/+1 counter, but then it can't block.\",\n    \"Overload\": \"You may cast this for its overload cost to affect all valid targets.\",\n    \"Scavenge\": \"Exile this from your graveyard and pay its scavenge cost to put +1/+1 counters on target creature.\",\n    \"Cipher\": \"You may exile this encoded on a creature, then copy it whenever that creature deals combat damage.\",\n    \"Extort\": \"Whenever you cast a spell, you may pay white or black mana to make each opponent lose 1 life.\",\n    \"Bestow\": \"You may cast this as an aura for its bestow cost.\",\n    \"Tribute\": \"As this enters, an opponent may put +1/+1 counters on it to prevent its triggered ability.\",\n    \"Outlast\": \"Pay the outlast cost and tap this creature to put a +1/+1 counter on it.\",\n    \"Dash\": \"You may cast this for its dash cost for haste, but return it to your hand at end of turn.\",\n    \"Exploit\": \"When this enters, you may sacrifice a creature for an additional effect.\",\n    \"Megamorph\": \"Like morph, but the creature gets a +1/+1 counter when turned face up.\",\n    \"Awaken\": \"If you pay the awaken cost, target land becomes a creature with +1/+1 counters.\",\n    \"Ingest\": \"Whenever this deals combat damage to a player, that player exiles the top card of their library.\",\n    \"Devoid\": \"This spell is colourless.\",\n    \"Surge\": \"You may pay the surge cost if you or a teammate cast another spell this turn.\",\n    \"Skulk\": \"This creature can't be blocked by creatures with greater power.\",\n    \"Emerge\": \"You may sacrifice a creature and pay the emerge cost minus that creature's mana value.\",\n    \"Escalate\": \"Pay the escalate cost for each mode beyond the first.\",\n    \"Delirium\": \"This has additional effects if there are four or more card types in your graveyard.\",\n    \"Meld\": \"These two cards can be exiled and melded into a single double-faced card.\"\n  };\n\n  return fallbacks[mechanicName] || `${mechanicName} is a Magic: The Gathering mechanic.`;\n};\n\nexport default function FilteredMechanicsList({\n  onMechanicSelect,\n  selectedMechanic,\n}) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredMechanics, setFilteredMechanics] = useState(\n    allMechanics.sort(),\n  );\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n\n  // Filter mechanics based on search and category\n  useEffect(() => {\n    let filtered = allMechanics;\n\n    // Apply category filter first\n    if (selectedCategory === \"evergreen\") {\n      filtered = evergreenKeywords;\n    } else if (selectedCategory === \"beginner\") {\n      filtered = beginnerFriendly;\n    }\n\n    // Apply search filter\n    if (searchQuery.trim()) {\n      filtered = filtered.filter((mechanic) =>\n        mechanic.toLowerCase().includes(searchQuery.toLowerCase()),\n      );\n    }\n\n    setFilteredMechanics(filtered.sort());\n  }, [searchQuery, selectedCategory]);\n\n  const handleMechanicClick = (mechanicName) => {\n    if (onMechanicSelect) {\n      const newSelection =\n        selectedMechanic?.name === mechanicName\n          ? null\n          : {\n              name: mechanicName,\n              id: mechanicName.toLowerCase().replace(/[^a-z0-9]/g, \"-\"),\n            };\n      onMechanicSelect(newSelection);\n    }\n  };\n\n  // Remove citation markers like [1], [2][3], etc. from descriptions\n  const removeCitations = (text) => {\n    if (!text) return text;\n    return text.replace(/\\[\\d+\\](\\[\\d+\\])*/g, \"\");\n  };\n\n  const clearSearch = () => {\n    setSearchQuery(\"\");\n  };\n\n  const categories = [\n    { id: \"all\", label: \"All Mechanics\", count: allMechanics.length },\n    { id: \"evergreen\", label: \"Evergreen\", count: evergreenKeywords.length },\n    {\n      id: \"beginner\",\n      label: \"Beginner Friendly\",\n      count: beginnerFriendly.length,\n    },\n  ];\n\n  return (\n    <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n      {/* Centered Header */}\n      <h2 style={{\n        marginBottom: \"1.5rem\",\n        textAlign: \"center\",\n        fontSize: \"2.25rem\",\n        fontWeight: \"700\",\n        background: \"linear-gradient(135deg, #ffc107, #fd7e14)\",\n        WebkitBackgroundClip: \"text\",\n        WebkitTextFillColor: \"transparent\"\n      }}>\n        ⚡ Mechanics Guide\n      </h2>\n      <p\n        style={{\n          textAlign: \"center\",\n          marginBottom: \"2rem\",\n          color: \"#dee2e6\",\n          maxWidth: \"700px\",\n          margin: \"0 auto 2rem auto\",\n          lineHeight: \"1.6\",\n          fontSize: \"1.1rem\"\n        }}\n      >\n        Discover and explore {allMechanics.length} Magic: The Gathering mechanics with detailed descriptions and direct links to comprehensive guides\n        and abilities\n      </p>\n\n      {/* Category Filter Buttons */}\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          gap: \"0.5rem\",\n          marginBottom: \"1.5rem\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {categories.map((category) => (\n          <button\n            key={category.id}\n            onClick={() => setSelectedCategory(category.id)}\n            style={{\n              padding: \"0.5rem 1rem\",\n              background:\n                selectedCategory === category.id ? \"#ffc107\" : \"#343a40\",\n              color: selectedCategory === category.id ? \"#000\" : \"#fff\",\n              border: \"2px solid #495057\",\n              borderRadius: \"0.5rem\",\n              cursor: \"pointer\",\n              fontSize: \"0.9rem\",\n              fontWeight: \"500\",\n              transition: \"all 0.2s ease\",\n            }}\n          >\n            {category.label} ({category.count})\n          </button>\n        ))}\n      </div>\n\n      {/* Search/Filter Bar */}\n      <div\n        style={{\n          maxWidth: \"600px\",\n          margin: \"0 auto 2rem auto\",\n          position: \"relative\",\n        }}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"🔍 Filter mechanics by name...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          style={{\n            width: \"100%\",\n            padding: \"1rem\",\n            background: \"#1a1a1a\",\n            color: \"white\",\n            border: \"2px solid #444\",\n            borderRadius: \"0.5rem\",\n            fontSize: \"1rem\",\n            outline: \"none\",\n            transition: \"border-color 0.2s ease\",\n          }}\n          onFocus={(e) => (e.target.style.borderColor = \"#ffc107\")}\n          onBlur={(e) => (e.target.style.borderColor = \"#444\")}\n        />\n\n        {searchQuery && (\n          <button\n            onClick={clearSearch}\n            style={{\n              position: \"absolute\",\n              right: \"1rem\",\n              top: \"50%\",\n              transform: \"translateY(-50%)\",\n              background: \"none\",\n              border: \"none\",\n              fontSize: \"1.25rem\",\n              cursor: \"pointer\",\n              color: \"#999\",\n            }}\n          >\n            ×\n          </button>\n        )}\n      </div>\n\n      {/* Results Summary */}\n      <div\n        style={{\n          textAlign: \"center\",\n          marginBottom: \"1.5rem\",\n          color: \"#adb5bd\",\n          fontSize: \"0.9rem\",\n        }}\n      >\n        {searchQuery || selectedCategory !== \"all\" ? (\n          <>\n            Showing {filteredMechanics.length} of {allMechanics.length}{\" \"}\n            mechanics\n            {searchQuery && <span> matching \"{searchQuery}\"</span>}\n            {selectedCategory !== \"all\" && (\n              <span>\n                {\" \"}\n                in {categories.find((c) => c.id === selectedCategory)?.label}\n              </span>\n            )}\n          </>\n        ) : (\n          `Browse all ${allMechanics.length} mechanics below`\n        )}\n      </div>\n\n      {/* Scrollable Mechanics Container */}\n      <div\n        style={{\n          maxHeight: \"400px\",\n          overflowY: \"auto\",\n          border: \"2px solid #444\",\n          borderRadius: \"0.5rem\",\n          padding: \"1rem\",\n          background: \"#1a1a1a\",\n          marginBottom: \"2rem\",\n        }}\n      >\n        {filteredMechanics.length === 0 ? (\n          <div\n            style={{\n              padding: \"2rem\",\n              textAlign: \"center\",\n              color: \"#6c757d\",\n            }}\n          >\n            <div style={{ fontSize: \"3rem\", marginBottom: \"1rem\" }}>🔍</div>\n            <h3 style={{ marginBottom: \"0.5rem\", color: \"#adb5bd\" }}>\n              No mechanics found\n            </h3>\n            <p style={{ margin: \"0\" }}>\n              Try adjusting your search term or selecting a different category\n            </p>\n          </div>\n        ) : (\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n              gap: \"0.5rem\",\n            }}\n          >\n            {filteredMechanics.map((mechanic) => {\n              const isSelected = selectedMechanic?.name === mechanic;\n              const mechanicData = getMechanicDetails(mechanic);\n\n              // Get category colour\n              const getCategoryColour = (category) => {\n                switch (category) {\n                  case \"evasion\": return \"#0d6efd\";\n                  case \"combat\": return \"#dc3545\";\n                  case \"protection\": return \"#198754\";\n                  case \"utility\": return \"#ffc107\";\n                  case \"timing\": return \"#6f42c1\";\n                  case \"cost_reduction\": return \"#20c997\";\n                  case \"triggered\": return \"#fd7e14\";\n                  default: return \"#6c757d\";\n                }\n              };\n\n              return (\n                <div\n                  key={mechanic}\n                  onClick={() => handleMechanicClick(mechanic)}\n                  className=\"mechanic-card\"\n                  style={{\n                    padding: \"1rem\",\n                    background: isSelected\n                      ? \"linear-gradient(135deg, rgba(0, 112, 243, 0.2), rgba(0, 112, 243, 0.1))\"\n                      : \"linear-gradient(135deg, #1a1a1a, #2d2d2d)\",\n                    border: isSelected\n                      ? \"2px solid #0070f3\"\n                      : \"2px solid #444\",\n                    borderRadius: \"0.75rem\",\n                    cursor: \"pointer\",\n                    textAlign: \"center\",\n                    transition: \"all 0.2s ease\",\n                    position: \"relative\",\n                    boxShadow: isSelected\n                      ? \"0 4px 12px rgba(0, 112, 243, 0.3)\"\n                      : \"0 2px 8px rgba(0, 0, 0, 0.2)\",\n                  }}\n                  onMouseEnter={(e) => {\n                    if (!isSelected) {\n                      e.target.style.background = \"linear-gradient(135deg, #2d2d2d, #3a3a3a)\";\n                      e.target.style.borderColor = \"#6c757d\";\n                      e.target.style.transform = \"translateY(-2px)\";\n                      e.target.style.boxShadow = \"0 4px 12px rgba(0, 0, 0, 0.3)\";\n                    }\n                  }}\n                  onMouseLeave={(e) => {\n                    if (!isSelected) {\n                      e.target.style.background = \"linear-gradient(135deg, #1a1a1a, #2d2d2d)\";\n                      e.target.style.borderColor = \"#444\";\n                      e.target.style.transform = \"translateY(0)\";\n                      e.target.style.boxShadow = \"0 2px 8px rgba(0, 0, 0, 0.2)\";\n                    }\n                  }}\n                >\n                  <div\n                    style={{\n                      fontWeight: \"600\",\n                      color: \"#ffffff\",\n                      fontSize: \"1rem\",\n                      marginBottom: \"0.75rem\",\n                      lineHeight: \"1.3\",\n                    }}\n                  >\n                    {mechanic}\n                  </div>\n\n                  {/* Enhanced Category badges */}\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      gap: \"0.375rem\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    {mechanicData?.isEvergreen && (\n                      <span\n                        style={{\n                          padding: \"0.25rem 0.5rem\",\n                          background: \"#28a745\",\n                          borderRadius: \"0.375rem\",\n                          fontSize: \"0.7rem\",\n                          fontWeight: \"700\",\n                          color: \"#ffffff\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          gap: \"0.25rem\",\n                          boxShadow: \"0 2px 4px rgba(40, 167, 69, 0.3)\",\n                        }}\n                      >\n                        ♾️ Evergreen\n                      </span>\n                    )}\n                    {mechanicData?.category && (\n                      <span\n                        style={{\n                          padding: \"0.25rem 0.5rem\",\n                          background: getCategoryColour(mechanicData.category),\n                          borderRadius: \"0.375rem\",\n                          fontSize: \"0.7rem\",\n                          fontWeight: \"700\",\n                          color: \"#ffffff\",\n                          textTransform: \"capitalize\",\n                          boxShadow: `0 2px 4px ${getCategoryColour(mechanicData.category)}40`,\n                        }}\n                      >\n                        {mechanicData.category.replace(\"_\", \" \")}\n                      </span>\n                    )}\n                    {beginnerFriendly.includes(mechanic) && (\n                      <span\n                        style={{\n                          padding: \"0.25rem 0.5rem\",\n                          background: \"#17a2b8\",\n                          borderRadius: \"0.375rem\",\n                          fontSize: \"0.7rem\",\n                          fontWeight: \"700\",\n                          color: \"#ffffff\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          gap: \"0.25rem\",\n                          boxShadow: \"0 2px 4px rgba(23, 162, 184, 0.3)\",\n                        }}\n                      >\n                        ✨ Beginner\n                      </span>\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n\n      {/* Selected Mechanic Details */}\n      {selectedMechanic && (\n        <div className=\"section-content\">\n          <h3\n            style={{\n              margin: \"0 0 1.5rem 0\",\n              color: \"#ffffff\",\n              fontSize: \"1.5rem\",\n              fontWeight: \"600\",\n              textAlign: \"center\",\n              borderBottom: \"2px solid #ffc107\",\n              paddingBottom: \"0.5rem\",\n            }}\n          >\n            {selectedMechanic.name}\n          </h3>\n\n          {(() => {\n            const mechanicData = getMechanicDetails(selectedMechanic.name);\n            const wikiUrl = getMechanicWikiUrl(selectedMechanic.name);\n\n            if (mechanicData) {\n              return (\n                <div style={{ color: \"#dee2e6\", lineHeight: \"1.6\" }}>\n                  {/* Clean Description */}\n                  <div style={{\n                    background: \"linear-gradient(135deg, #1a1a1a, #2d2d2d)\",\n                    padding: \"1.25rem\",\n                    borderRadius: \"0.75rem\",\n                    border: \"1px solid #444\",\n                    marginBottom: \"1.5rem\"\n                  }}>\n                    <p style={{\n                      margin: \"0\",\n                      fontSize: \"1.1rem\",\n                      lineHeight: \"1.7\",\n                      color: \"#ffffff\",\n                      fontWeight: \"400\"\n                    }}>\n                      {cleanDescription(mechanicData.description, selectedMechanic.name)}\n                    </p>\n                  </div>\n\n                  {/* Enhanced Category badges */}\n                  {(mechanicData.category ||\n                    mechanicData.isEvergreen ||\n                    evergreenKeywords.includes(selectedMechanic.name) ||\n                    beginnerFriendly.includes(selectedMechanic.name)) && (\n                    <div style={{\n                      display: \"flex\",\n                      gap: \"0.75rem\",\n                      flexWrap: \"wrap\",\n                      justifyContent: \"center\",\n                      marginBottom: \"2rem\",\n                      padding: \"1rem\",\n                      background: \"rgba(0, 0, 0, 0.3)\",\n                      borderRadius: \"0.75rem\",\n                      border: \"1px solid #333\"\n                    }}>\n                      {(mechanicData.isEvergreen || evergreenKeywords.includes(selectedMechanic.name)) && (\n                        <span\n                          style={{\n                            padding: \"0.5rem 1rem\",\n                            background: \"linear-gradient(135deg, #28a745, #20c997)\",\n                            borderRadius: \"0.5rem\",\n                            fontSize: \"0.9rem\",\n                            fontWeight: \"600\",\n                            color: \"#ffffff\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            gap: \"0.5rem\",\n                            boxShadow: \"0 3px 8px rgba(40, 167, 69, 0.3)\",\n                          }}\n                        >\n                          ♾️ Evergreen Keyword\n                        </span>\n                      )}\n                      {beginnerFriendly.includes(selectedMechanic.name) && (\n                        <span\n                          style={{\n                            padding: \"0.5rem 1rem\",\n                            background: \"linear-gradient(135deg, #17a2b8, #0d6efd)\",\n                            borderRadius: \"0.5rem\",\n                            fontSize: \"0.9rem\",\n                            fontWeight: \"600\",\n                            color: \"#ffffff\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            gap: \"0.5rem\",\n                            boxShadow: \"0 3px 8px rgba(23, 162, 184, 0.3)\",\n                          }}\n                        >\n                          ✨ Beginner-Friendly\n                        </span>\n                      )}\n                      {mechanicData.category && (\n                        <span\n                          style={{\n                            padding: \"0.5rem 1rem\",\n                            background: \"linear-gradient(135deg, #6f42c1, #495057)\",\n                            borderRadius: \"0.5rem\",\n                            fontSize: \"0.9rem\",\n                            fontWeight: \"600\",\n                            color: \"#ffffff\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            gap: \"0.5rem\",\n                            boxShadow: \"0 3px 8px rgba(111, 66, 193, 0.3)\",\n                          }}\n                        >\n                          📂 {mechanicData.category.replace(\"_\", \" \").replace(/\\b\\w/g, l => l.toUpperCase())}\n                        </span>\n                      )}\n                    </div>\n                  )}\n\n                  {/* Enhanced Wiki Link */}\n                  {wikiUrl && (\n                    <div style={{ textAlign: \"center\", marginTop: \"1.5rem\" }}>\n                      <a\n                        href={wikiUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        style={{\n                          display: \"inline-flex\",\n                          alignItems: \"center\",\n                          gap: \"0.75rem\",\n                          padding: \"1rem 2rem\",\n                          background: \"linear-gradient(135deg, #0070f3, #0051cc)\",\n                          color: \"white\",\n                          textDecoration: \"none\",\n                          borderRadius: \"0.75rem\",\n                          fontSize: \"1rem\",\n                          fontWeight: \"600\",\n                          boxShadow: \"0 4px 12px rgba(0, 112, 243, 0.3)\",\n                          transition: \"all 0.2s ease\",\n                          border: \"1px solid rgba(255, 255, 255, 0.1)\"\n                        }}\n                        onMouseEnter={(e) => {\n                          e.target.style.transform = \"translateY(-2px)\";\n                          e.target.style.boxShadow = \"0 6px 20px rgba(0, 112, 243, 0.4)\";\n                        }}\n                        onMouseLeave={(e) => {\n                          e.target.style.transform = \"translateY(0)\";\n                          e.target.style.boxShadow = \"0 4px 12px rgba(0, 112, 243, 0.3)\";\n                        }}\n                      >\n                        📖 Learn more on MTG Wiki →\n                      </a>\n                      <p style={{\n                        margin: \"0.75rem 0 0 0\",\n                        color: \"#adb5bd\",\n                        fontSize: \"0.9rem\",\n                        fontStyle: \"italic\"\n                      }}>\n                        Get comprehensive rules, examples, and card listings\n                      </p>\n                    </div>\n                  )}\n                </div>\n              );\n            } else {\n              return (\n                <div\n                  style={{\n                    textAlign: \"center\",\n                    padding: \"3rem 2rem\",\n                    background: \"linear-gradient(135deg, rgba(255, 193, 7, 0.1), rgba(253, 126, 20, 0.1))\",\n                    borderRadius: \"0.75rem\",\n                    border: \"1px solid rgba(255, 193, 7, 0.3)\",\n                  }}\n                >\n                  <div style={{\n                    fontSize: \"3rem\",\n                    marginBottom: \"1.5rem\",\n                    filter: \"drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))\"\n                  }}>\n                    📚\n                  </div>\n                  <h4 style={{\n                    margin: \"0 0 1rem 0\",\n                    color: \"#ffc107\",\n                    fontSize: \"1.25rem\",\n                    fontWeight: \"600\"\n                  }}>\n                    More Information Coming Soon\n                  </h4>\n                  <p style={{\n                    margin: \"0 0 1.5rem 0\",\n                    lineHeight: \"1.6\",\n                    color: \"#dee2e6\",\n                    fontSize: \"1rem\"\n                  }}>\n                    Enhanced details for <strong style={{ color: \"#ffffff\" }}>{selectedMechanic.name}</strong> are being prepared.\n                  </p>\n                  {getMechanicWikiUrl(selectedMechanic.name) && (\n                    <a\n                      href={getMechanicWikiUrl(selectedMechanic.name)}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      style={{\n                        display: \"inline-flex\",\n                        alignItems: \"center\",\n                        gap: \"0.5rem\",\n                        padding: \"0.75rem 1.5rem\",\n                        background: \"linear-gradient(135deg, #0070f3, #0051cc)\",\n                        color: \"white\",\n                        textDecoration: \"none\",\n                        borderRadius: \"0.5rem\",\n                        fontSize: \"0.95rem\",\n                        fontWeight: \"500\",\n                        transition: \"all 0.2s ease\",\n                        boxShadow: \"0 3px 8px rgba(0, 112, 243, 0.3)\"\n                      }}\n                    >\n                      📖 Learn more on MTG Wiki →\n                    </a>\n                  )}\n                </div>\n              );\n            }\n          })()}\n        </div>\n      )}\n\n      {/* Mobile Responsive Styles */}\n      <style jsx>{`\n        @media (max-width: 768px) {\n          div[style*=\"gridTemplateColumns\"] {\n            grid-template-columns: repeat(\n              auto-fit,\n              minmax(160px, 1fr)\n            ) !important;\n          }\n\n          div[style*=\"maxHeight\"] {\n            max-height: 300px !important;\n          }\n        }\n\n        @media (max-width: 480px) {\n          div[style*=\"gridTemplateColumns\"] {\n            grid-template-columns: 1fr 1fr !important;\n          }\n\n          div[style*=\"maxHeight\"] {\n            max-height: 250px !important;\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}