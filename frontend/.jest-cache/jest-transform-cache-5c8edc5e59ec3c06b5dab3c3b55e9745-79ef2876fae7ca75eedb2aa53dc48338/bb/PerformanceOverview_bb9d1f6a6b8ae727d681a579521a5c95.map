{"version":3,"names":["_default","PerformanceOverview","metrics","cov_24ef89ndo5","f","s","window","b","_jsxruntime","jsx","className","jsxs","formatBytes","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDuration","ms","seconds","minutes","hours","getResponseTimeStatus","time","getMemoryStatus","percentage","getErrorRateStatus","failed","total","rate","getStatusColor","status","style","color","session","duration","apiCalls","averageResponseTime","memory","usedPercentage","fontSize","marginTop","usedJSHeapSize","userInteractions","webVitals","lcp","rating","round","value","textTransform","replace","connection","effectiveType","downlink","backend"],"sources":["/Users/samuellove/Documents/GitHub/Capstone/frontend/components/PerformanceOverview.js"],"sourcesContent":["import React from 'react';\n\nconst PerformanceOverview = ({ metrics }) => {\n  // SSR safety check\n  if (typeof window === 'undefined') {\n    return (\n      <div className=\"performance-overview\">\n        <div className=\"metric-card\">\n          <h5>Performance Data Loading...</h5>\n          <span className=\"metric-value\">--</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (!metrics) {\n    return (\n      <div className=\"performance-overview\">\n        <div className=\"metric-card\">\n          <h5>Loading Performance Data...</h5>\n          <span className=\"metric-value\">--</span>\n        </div>\n      </div>\n    );\n  }\n\n  const formatBytes = (bytes) => {\n    if (!bytes) return 'N/A';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const formatDuration = (ms) => {\n    const seconds = Math.floor(ms / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n\n    if (hours > 0) return `${hours}h ${minutes % 60}m`;\n    if (minutes > 0) return `${minutes}m ${seconds % 60}s`;\n    return `${seconds}s`;\n  };\n\n  const getResponseTimeStatus = (time) => {\n    if (time > 1000) return 'warning';\n    if (time > 500) return 'caution';\n    return 'good';\n  };\n\n  const getMemoryStatus = (percentage) => {\n    if (percentage > 80) return 'error';\n    if (percentage > 60) return 'warning';\n    return 'good';\n  };\n\n  const getErrorRateStatus = (failed, total) => {\n    if (total === 0) return 'good';\n    const rate = (failed / total) * 100;\n    if (rate > 5) return 'error';\n    if (rate > 1) return 'warning';\n    return 'good';\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'good': return 'var(--theme-success)';\n      case 'caution': return 'var(--theme-info)';\n      case 'warning': return 'var(--theme-warning)';\n      case 'error': return 'var(--theme-error)';\n      default: return 'var(--theme-text)';\n    }\n  };\n\n  return (\n    <div className=\"performance-overview\">\n      {/* Session Duration */}\n      <div className=\"metric-card\">\n        <h5>Session Duration</h5>\n        <span\n          className=\"metric-value\"\n          style={{ color: 'var(--theme-text)' }}\n        >\n          {formatDuration(metrics.session?.duration || 0)}\n        </span>\n      </div>\n\n      {/* API Performance */}\n      <div className=\"metric-card\">\n        <h5>Average API Response</h5>\n        <span\n          className=\"metric-value\"\n          style={{\n            color: getStatusColor(getResponseTimeStatus(metrics.apiCalls?.averageResponseTime || 0))\n          }}\n        >\n          {metrics.apiCalls?.averageResponseTime || 0}ms\n        </span>\n      </div>\n\n      {/* Error Rate */}\n      <div className=\"metric-card\">\n        <h5>API Error Rate</h5>\n        <span\n          className=\"metric-value\"\n          style={{\n            color: getStatusColor(getErrorRateStatus(\n              metrics.apiCalls?.failed || 0,\n              metrics.apiCalls?.total || 0\n            ))\n          }}\n        >\n          {metrics.apiCalls?.failed || 0}/{metrics.apiCalls?.total || 0}\n        </span>\n      </div>\n\n      {/* Memory Usage */}\n      {metrics.memory && (\n        <div className=\"metric-card\">\n          <h5>Memory Usage</h5>\n          <span\n            className=\"metric-value\"\n            style={{\n              color: getStatusColor(getMemoryStatus(metrics.memory.usedPercentage))\n            }}\n          >\n            {metrics.memory.usedPercentage}%\n          </span>\n          <div style={{\n            fontSize: '0.7em',\n            color: 'var(--theme-textLight)',\n            marginTop: '5px'\n          }}>\n            {formatBytes(metrics.memory.usedJSHeapSize)}\n          </div>\n        </div>\n      )}\n\n      {/* User Interactions */}\n      <div className=\"metric-card\">\n        <h5>Interactions</h5>\n        <span\n          className=\"metric-value\"\n          style={{ color: 'var(--theme-text)' }}\n        >\n          {metrics.userInteractions?.total || 0}\n        </span>\n        <div style={{\n          fontSize: '0.7em',\n          color: 'var(--theme-textLight)',\n          marginTop: '5px'\n        }}>\n          {metrics.userInteractions?.averageResponseTime || 0}ms avg\n        </div>\n      </div>\n\n      {/* Web Vitals - LCP */}\n      {metrics.webVitals?.lcp && (\n        <div className=\"metric-card\">\n          <h5>Largest Contentful Paint</h5>\n          <span\n            className=\"metric-value\"\n            style={{\n              color: metrics.webVitals.lcp.rating === 'good' ? 'var(--theme-success)' :\n                     metrics.webVitals.lcp.rating === 'needs_improvement' ? 'var(--theme-warning)' :\n                     'var(--theme-error)'\n            }}\n          >\n            {Math.round(metrics.webVitals.lcp.value)}ms\n          </span>\n          <div style={{\n            fontSize: '0.7em',\n            color: 'var(--theme-textLight)',\n            marginTop: '5px',\n            textTransform: 'capitalize'\n          }}>\n            {metrics.webVitals.lcp.rating?.replace('_', ' ') || 'unknown'}\n          </div>\n        </div>\n      )}\n\n      {/* Connection Quality */}\n      {metrics.connection && (\n        <div className=\"metric-card\">\n          <h5>Connection</h5>\n          <span\n            className=\"metric-value\"\n            style={{ color: 'var(--theme-text)' }}\n          >\n            {metrics.connection.effectiveType}\n          </span>\n          <div style={{\n            fontSize: '0.7em',\n            color: 'var(--theme-textLight)',\n            marginTop: '5px'\n          }}>\n            {metrics.connection.downlink} Mbps\n          </div>\n        </div>\n      )}\n\n      {/* Backend Status */}\n      {metrics.backend && (\n        <div className=\"metric-card\">\n          <h5>Backend Status</h5>\n          <span\n            className=\"metric-value\"\n            style={{\n              color: metrics.backend.status === 'optimal' ? 'var(--theme-success)' :\n                     metrics.backend.status === 'degraded' ? 'var(--theme-warning)' :\n                     'var(--theme-error)'\n            }}\n          >\n            {metrics.backend.status}\n          </span>\n          <div style={{\n            fontSize: '0.7em',\n            color: 'var(--theme-textLight)',\n            marginTop: '5px'\n          }}>\n            {Math.round(metrics.backend.averageResponseTime || 0)}ms avg\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PerformanceOverview;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}