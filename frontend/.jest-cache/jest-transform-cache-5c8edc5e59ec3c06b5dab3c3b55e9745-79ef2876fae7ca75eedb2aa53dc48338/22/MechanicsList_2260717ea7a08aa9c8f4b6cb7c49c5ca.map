{"version":3,"sources":["/Users/samuellove/Documents/GitHub/Capstone/frontend/components/Mechanics/MechanicsList.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  allMechanics,\n  mechanicsDetails,\n  evergreenKeywords,\n  beginnerFriendly,\n  getMechanicDetails,\n  getMechanicWikiUrl\n} from \"../../data/mechanics\";\n\nexport default function MechanicsList({ onMechanicSelect, selectedMechanic }) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [clickCount, setClickCount] = useState({});\n\n  const handleCategoryClick = (categoryKey) => {\n    // Single click to toggle\n    if (selectedCategory === categoryKey) {\n      setSelectedCategory(null);\n    } else {\n      setSelectedCategory(categoryKey);\n    }\n  };\n\n  const handleMechanicClick = (mechanicName) => {\n    if (onMechanicSelect) {\n      const newSelection = selectedMechanic?.name === mechanicName\n        ? null\n        : {\n            name: mechanicName,\n            id: mechanicName.toLowerCase().replace(/[^a-z0-9]/g, \"-\"),\n          };\n      onMechanicSelect(newSelection);\n    }\n  };\n\n  // Remove citation markers like [1], [2][3], etc. from descriptions\n  const removeCitations = (text) => {\n    if (!text) return text;\n    return text.replace(/\\[\\d+\\](\\[\\d+\\])*/g, \"\");\n  };\n\n  const clearSearch = () => {\n    setSearchQuery(\"\");\n  };\n\n  const categories = {\n    all: {\n      title: \"All Mechanics\",\n      description: `Browse all ${allMechanics.length} mechanics`,\n      icon: \"üìã\",\n      mechanics: allMechanics\n    },\n    evergreen: {\n      title: \"Evergreen\",\n      description: `Core mechanics that appear in most sets`,\n      icon: \"üå≤\",\n      mechanics: evergreenKeywords\n    }\n  };\n\n  return (\n    <div className=\"mechanics-search\">\n      {/* Header */}\n      <div className=\"card-header\" style={{ marginBottom: \"1.5rem\" }}>\n        <h2 className=\"card-title\">Mechanics Guide</h2>\n        <p className=\"card-subtitle\">\n          Search and explore {allMechanics.length} Magic: The Gathering\n          mechanics by category\n        </p>\n      </div>\n\n      {/* Category Selection Grid */}\n      <div\n        className=\"section-grid\"\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fit, minmax(180px, 1fr))\",\n          gap: \"0.5rem\",\n          maxWidth: \"800px\",\n          margin: \"0 auto 2rem auto\",\n        }}\n      >\n        {Object.entries(categories).map(([categoryKey, category]) => (\n          <button\n            key={categoryKey}\n            onClick={() => handleCategoryClick(categoryKey)}\n            className={`section-button ${selectedCategory === categoryKey ? \"active\" : \"\"}`}\n          >\n            <span style={{ fontSize: \"1.5rem\" }}>\n              {category.icon}\n            </span>\n            <span>\n              {category.title}\n            </span>\n            <span style={{ fontSize: \"0.8rem\", color: \"#adb5bd\" }}>\n              {category.mechanics.length} mechanics\n            </span>\n\n          </button>\n        ))}\n      </div>\n\n      {/* Selected Category Content */}\n      {selectedCategory && categories[selectedCategory] && (\n        <div className=\"section-content\">\n          <h3 style={{ marginBottom: \"1rem\", color: \"#ffffff\", textAlign: \"center\" }}>\n            {categories[selectedCategory].icon} {categories[selectedCategory].title}\n          </h3>\n          <p style={{ textAlign: \"center\", marginBottom: \"1.5rem\", color: \"#adb5bd\", fontSize: \"1.1rem\" }}>\n            {categories[selectedCategory].description}\n          </p>\n\n          {/* Search within category */}\n          <div style={{ position: \"relative\", marginBottom: \"1.5rem\" }}>\n            <input\n              type=\"text\"\n              placeholder={`Search within ${categories[selectedCategory].title.toLowerCase()}...`}\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              style={{\n                width: \"100%\",\n                padding: \"1rem\",\n                background: \"#1a1a1a\",\n                color: \"white\",\n                border: \"2px solid #444\",\n                borderRadius: \"0.5rem\",\n                fontSize: \"1rem\",\n                outline: \"none\",\n                transition: \"border-color 0.2s ease\",\n              }}\n              onFocus={(e) => (e.target.style.borderColor = \"#007bff\")}\n              onBlur={(e) => (e.target.style.borderColor = \"#444\")}\n            />\n            {searchQuery && (\n              <button\n                onClick={clearSearch}\n                style={{\n                  position: \"absolute\",\n                  right: \"1rem\",\n                  top: \"50%\",\n                  transform: \"translateY(-50%)\",\n                  background: \"none\",\n                  border: \"none\",\n                  fontSize: \"1.25rem\",\n                  cursor: \"pointer\",\n                  color: \"#999\",\n                }}\n              >\n                √ó\n              </button>\n            )}\n          </div>\n\n          {/* Mechanics Grid */}\n          <div style={{\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(auto-fill, minmax(280px, 1fr))\",\n            gap: \"1rem\"\n          }}>\n            {(() => {\n              let mechanicsToShow = categories[selectedCategory].mechanics;\n\n              if (searchQuery.trim()) {\n                mechanicsToShow = mechanicsToShow.filter((mechanic) =>\n                  mechanic.toLowerCase().includes(searchQuery.toLowerCase())\n                );\n              }\n\n              if (mechanicsToShow.length === 0) {\n                return (\n                  <div style={{\n                    gridColumn: \"1 / -1\",\n                    textAlign: \"center\",\n                    padding: \"2rem\",\n                    color: \"#999\"\n                  }}>\n                    <div style={{ fontSize: \"2rem\", marginBottom: \"1rem\" }}>üîç</div>\n                    <p>No mechanics found</p>\n                    <p style={{ fontSize: \"0.9rem\" }}>Try a different search term</p>\n                  </div>\n                );\n              }\n\n              return mechanicsToShow.map((mechanic) => {\n                const mechanicData = getMechanicDetails(mechanic);\n\n                return (\n                  <div\n                    key={mechanic}\n                    onClick={() => handleMechanicClick(mechanic)}\n                    style={{\n                      padding: \"1rem\",\n                      background: selectedMechanic?.name === mechanic ? \"#007bff\" : \"#2a2a2a\",\n                      border: `1px solid ${selectedMechanic?.name === mechanic ? \"#0056b3\" : \"#444\"}`,\n                      borderRadius: \"0.5rem\",\n                      cursor: \"pointer\",\n                      transition: \"all 0.2s ease\",\n                      color: selectedMechanic?.name === mechanic ? \"white\" : \"#e0e0e0\",\n                    }}\n                    onMouseEnter={(e) => {\n                      if (selectedMechanic?.name !== mechanic) {\n                        e.currentTarget.style.backgroundColor = \"#3a3a3a\";\n                        e.currentTarget.style.borderColor = \"#555\";\n                      }\n                    }}\n                    onMouseLeave={(e) => {\n                      if (selectedMechanic?.name !== mechanic) {\n                        e.currentTarget.style.backgroundColor = \"#2a2a2a\";\n                        e.currentTarget.style.borderColor = \"#444\";\n                      }\n                    }}\n                  >\n                    <h4 style={{\n                      margin: \"0 0 0.5rem 0\",\n                      fontSize: \"1.1rem\",\n                      color: selectedMechanic?.name === mechanic ? \"white\" : \"#ffffff\"\n                    }}>\n                      {mechanic}\n                    </h4>\n\n                    {mechanicData && (\n                      <>\n                        <p style={{\n                          margin: \"0 0 0.5rem 0\",\n                          fontSize: \"0.9rem\",\n                          lineHeight: \"1.4\",\n                          color: selectedMechanic?.name === mechanic ? \"#e6f3ff\" : \"#adb5bd\"\n                        }}>\n                          {removeCitations(mechanicData.description)?.substring(0, 120)}\n                          {(mechanicData.description || \"\").length > 120 && \"...\"}\n                        </p>\n\n                        <div style={{ display: \"flex\", gap: \"0.5rem\", flexWrap: \"wrap\" }}>\n                          {mechanicData.isEvergreen && (\n                            <span style={{\n                              padding: \"0.2rem 0.4rem\",\n                              background: \"#28a745\",\n                              borderRadius: \"0.2rem\",\n                              fontSize: \"0.7rem\",\n                              fontWeight: \"bold\",\n                              color: \"#ffffff\",\n                            }}>\n                              Evergreen\n                            </span>\n                          )}\n\n                          {mechanicData.category && (\n                            <span style={{\n                              padding: \"0.2rem 0.4rem\",\n                              background: \"#6f42c1\",\n                              borderRadius: \"0.2rem\",\n                              fontSize: \"0.7rem\",\n                              fontWeight: \"bold\",\n                              color: \"#ffffff\",\n                            }}>\n                              {mechanicData.category}\n                            </span>\n                          )}\n                        </div>\n                      </>\n                    )}\n                  </div>\n                );\n              });\n            })()}\n          </div>\n        </div>\n      )}\n\n      {/* Selected Mechanic Details */}\n      {selectedMechanic && (\n        <div style={{ marginTop: \"2rem\" }}>\n          <div className=\"section-content\">\n            <h4 style={{\n              margin: \"0 0 1rem 0\",\n              color: \"var(--theme-accent)\",\n              fontSize: \"1.5rem\",\n              fontWeight: \"600\",\n            }}>\n              {selectedMechanic.name}\n            </h4>\n            {(() => {\n              const mechanicKey = selectedMechanic.name.toLowerCase();\n              const mechanicData = mechanicsDetails[mechanicKey];\n\n              if (mechanicData) {\n                return (\n                  <div>\n                    <p style={{ margin: \"0 0 1rem 0\", lineHeight: \"1.5\" }}>\n                      {removeCitations(mechanicData.description)}\n                    </p>\n                    <div style={{ marginBottom: \"1rem\" }}>\n                      {mechanicData.isEvergreen && (\n                        <span style={{\n                          padding: \"0.25rem 0.5rem\",\n                          background: \"#28a745\",\n                          borderRadius: \"0.25rem\",\n                          fontSize: \"0.8rem\",\n                          fontWeight: \"bold\",\n                          color: \"#ffffff\",\n                        }}>\n                          Evergreen\n                        </span>\n                      )}\n                      {mechanicData.category && (\n                        <span style={{\n                          marginLeft: mechanicData.isEvergreen ? \"0.5rem\" : \"0\",\n                          padding: \"0.25rem 0.5rem\",\n                          background: \"#6f42c1\",\n                          borderRadius: \"0.25rem\",\n                          fontSize: \"0.8rem\",\n                          fontWeight: \"bold\",\n                          color: \"#ffffff\",\n                        }}>\n                          {mechanicData.category}\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                );\n              } else {\n                return (\n                  <p style={{ margin: 0, lineHeight: \"1.5\", color: \"#6c757d\" }}>\n                    Description for {selectedMechanic.name} is not available yet.\n                  </p>\n                );\n              }\n            })()}\n          </div>\n        </div>\n      )}\n\n      {/* Mobile Responsive Styles */}\n      <style jsx>{`\n        @media (max-width: 768px) {\n          .section-grid {\n            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr)) !important;\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n"],"names":["MechanicsList","onMechanicSelect","selectedMechanic","searchQuery","setSearchQuery","useState","selectedCategory","setSelectedCategory","clickCount","setClickCount","handleCategoryClick","categoryKey","handleMechanicClick","mechanicName","newSelection","name","id","toLowerCase","replace","removeCitations","text","clearSearch","categories","all","title","description","allMechanics","length","icon","mechanics","evergreen","evergreenKeywords","div","style","marginBottom","h2","p","display","gridTemplateColumns","gap","maxWidth","margin","Object","entries","map","category","button","onClick","span","fontSize","color","h3","textAlign","position","input","type","placeholder","value","onChange","e","target","width","padding","background","border","borderRadius","outline","transition","onFocus","borderColor","onBlur","right","top","transform","cursor","mechanicsToShow","trim","filter","mechanic","includes","gridColumn","mechanicData","getMechanicDetails","onMouseEnter","currentTarget","backgroundColor","onMouseLeave","h4","lineHeight","substring","flexWrap","isEvergreen","fontWeight","marginTop","mechanicKey","mechanicsDetails","marginLeft"],"mappings":";;;;+BAUA;;;eAAwBA;;;;;uBAVY;2BAQ7B;;;;;;AAEQ,SAASA,cAAc,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAE;IAC1E,MAAM,CAACC,aAAaC,eAAe,GAAGC,IAAAA,eAAQ,EAAC;IAC/C,MAAM,CAACC,kBAAkBC,oBAAoB,GAAGF,IAAAA,eAAQ,EAAC;IACzD,MAAM,CAACG,YAAYC,cAAc,GAAGJ,IAAAA,eAAQ,EAAC,CAAC;IAE9C,MAAMK,sBAAsB,CAACC;QAC3B,yBAAyB;QACzB,IAAIL,qBAAqBK,aAAa;YACpCJ,oBAAoB;QACtB,OAAO;YACLA,oBAAoBI;QACtB;IACF;IAEA,MAAMC,sBAAsB,CAACC;QAC3B,IAAIZ,kBAAkB;YACpB,MAAMa,eAAeZ,kBAAkBa,SAASF,eAC5C,OACA;gBACEE,MAAMF;gBACNG,IAAIH,aAAaI,WAAW,GAAGC,OAAO,CAAC,cAAc;YACvD;YACJjB,iBAAiBa;QACnB;IACF;IAEA,mEAAmE;IACnE,MAAMK,kBAAkB,CAACC;QACvB,IAAI,CAACA,MAAM,OAAOA;QAClB,OAAOA,KAAKF,OAAO,CAAC,sBAAsB;IAC5C;IAEA,MAAMG,cAAc;QAClBjB,eAAe;IACjB;IAEA,MAAMkB,aAAa;QACjBC,KAAK;YACHC,OAAO;YACPC,aAAa,CAAC,WAAW,EAAEC,uBAAY,CAACC,MAAM,CAAC,UAAU,CAAC;YAC1DC,MAAM;YACNC,WAAWH,uBAAY;QACzB;QACAI,WAAW;YACTN,OAAO;YACPC,aAAa,CAAC,uCAAuC,CAAC;YACtDG,MAAM;YACNC,WAAWE,4BAAiB;QAC9B;IACF;IAEA,qBACE,sBAACC;kDAAc;;0BAEb,sBAACA;gBAA4BC,OAAO;oBAAEC,cAAc;gBAAS;0DAA9C;;kCACb,qBAACC;kEAAa;kCAAa;;kCAC3B,sBAACC;kEAAY;;4BAAgB;4BACPV,uBAAY,CAACC,MAAM;4BAAC;;;;;0BAM5C,qBAACK;gBAECC,OAAO;oBACLI,SAAS;oBACTC,qBAAqB;oBACrBC,KAAK;oBACLC,UAAU;oBACVC,QAAQ;gBACV;0DAPU;0BASTC,OAAOC,OAAO,CAACrB,YAAYsB,GAAG,CAAC,CAAC,CAACjC,aAAakC,SAAS,iBACtD,sBAACC;wBAECC,SAAS,IAAMrC,oBAAoBC;kEACxB,CAAC,eAAe,EAAEL,qBAAqBK,cAAc,WAAW,GAAG,CAAC;;0CAE/E,qBAACqC;gCAAKf,OAAO;oCAAEgB,UAAU;gCAAS;;0CAC/BJ,SAASjB,IAAI;;0CAEhB,qBAACoB;;0CACEH,SAASrB,KAAK;;0CAEjB,sBAACwB;gCAAKf,OAAO;oCAAEgB,UAAU;oCAAUC,OAAO;gCAAU;;;oCACjDL,SAAShB,SAAS,CAACF,MAAM;oCAAC;;;;uBAXxBhB;;YAmBVL,oBAAoBgB,UAAU,CAAChB,iBAAiB,kBAC/C,sBAAC0B;0DAAc;;kCACb,sBAACmB;wBAAGlB,OAAO;4BAAEC,cAAc;4BAAQgB,OAAO;4BAAWE,WAAW;wBAAS;;;4BACtE9B,UAAU,CAAChB,iBAAiB,CAACsB,IAAI;4BAAC;4BAAEN,UAAU,CAAChB,iBAAiB,CAACkB,KAAK;;;kCAEzE,qBAACY;wBAAEH,OAAO;4BAAEmB,WAAW;4BAAUlB,cAAc;4BAAUgB,OAAO;4BAAWD,UAAU;wBAAS;;kCAC3F3B,UAAU,CAAChB,iBAAiB,CAACmB,WAAW;;kCAI3C,sBAACO;wBAAIC,OAAO;4BAAEoB,UAAU;4BAAYnB,cAAc;wBAAS;;;0CACzD,qBAACoB;gCACCC,MAAK;gCACLC,aAAa,CAAC,cAAc,EAAElC,UAAU,CAAChB,iBAAiB,CAACkB,KAAK,CAACP,WAAW,GAAG,GAAG,CAAC;gCACnFwC,OAAOtD;gCACPuD,UAAU,CAACC,IAAMvD,eAAeuD,EAAEC,MAAM,CAACH,KAAK;gCAC9CxB,OAAO;oCACL4B,OAAO;oCACPC,SAAS;oCACTC,YAAY;oCACZb,OAAO;oCACPc,QAAQ;oCACRC,cAAc;oCACdhB,UAAU;oCACViB,SAAS;oCACTC,YAAY;gCACd;gCACAC,SAAS,CAACT,IAAOA,EAAEC,MAAM,CAAC3B,KAAK,CAACoC,WAAW,GAAG;gCAC9CC,QAAQ,CAACX,IAAOA,EAAEC,MAAM,CAAC3B,KAAK,CAACoC,WAAW,GAAG;;;4BAE9ClE,6BACC,qBAAC2C;gCACCC,SAAS1B;gCACTY,OAAO;oCACLoB,UAAU;oCACVkB,OAAO;oCACPC,KAAK;oCACLC,WAAW;oCACXV,YAAY;oCACZC,QAAQ;oCACRf,UAAU;oCACVyB,QAAQ;oCACRxB,OAAO;gCACT;;0CACD;;;;kCAOL,qBAAClB;wBAAIC,OAAO;4BACVI,SAAS;4BACTC,qBAAqB;4BACrBC,KAAK;wBACP;;kCACG,AAAC,CAAA;4BACA,IAAIoC,kBAAkBrD,UAAU,CAAChB,iBAAiB,CAACuB,SAAS;4BAE5D,IAAI1B,YAAYyE,IAAI,IAAI;gCACtBD,kBAAkBA,gBAAgBE,MAAM,CAAC,CAACC,WACxCA,SAAS7D,WAAW,GAAG8D,QAAQ,CAAC5E,YAAYc,WAAW;4BAE3D;4BAEA,IAAI0D,gBAAgBhD,MAAM,KAAK,GAAG;gCAChC,qBACE,sBAACK;oCAAIC,OAAO;wCACV+C,YAAY;wCACZ5B,WAAW;wCACXU,SAAS;wCACTZ,OAAO;oCACT;;;sDACE,qBAAClB;4CAAIC,OAAO;gDAAEgB,UAAU;gDAAQf,cAAc;4CAAO;;sDAAG;;sDACxD,qBAACE;;sDAAE;;sDACH,qBAACA;4CAAEH,OAAO;gDAAEgB,UAAU;4CAAS;;sDAAG;;;;4BAGxC;4BAEA,OAAO0B,gBAAgB/B,GAAG,CAAC,CAACkC;gCAC1B,MAAMG,eAAeC,IAAAA,6BAAkB,EAACJ;gCAExC,qBACE,sBAAC9C;oCAECe,SAAS,IAAMnC,oBAAoBkE;oCACnC7C,OAAO;wCACL6B,SAAS;wCACTC,YAAY7D,kBAAkBa,SAAS+D,WAAW,YAAY;wCAC9Dd,QAAQ,CAAC,UAAU,EAAE9D,kBAAkBa,SAAS+D,WAAW,YAAY,OAAO,CAAC;wCAC/Eb,cAAc;wCACdS,QAAQ;wCACRP,YAAY;wCACZjB,OAAOhD,kBAAkBa,SAAS+D,WAAW,UAAU;oCACzD;oCACAK,cAAc,CAACxB;wCACb,IAAIzD,kBAAkBa,SAAS+D,UAAU;4CACvCnB,EAAEyB,aAAa,CAACnD,KAAK,CAACoD,eAAe,GAAG;4CACxC1B,EAAEyB,aAAa,CAACnD,KAAK,CAACoC,WAAW,GAAG;wCACtC;oCACF;oCACAiB,cAAc,CAAC3B;wCACb,IAAIzD,kBAAkBa,SAAS+D,UAAU;4CACvCnB,EAAEyB,aAAa,CAACnD,KAAK,CAACoD,eAAe,GAAG;4CACxC1B,EAAEyB,aAAa,CAACnD,KAAK,CAACoC,WAAW,GAAG;wCACtC;oCACF;;;sDAEA,qBAACkB;4CAAGtD,OAAO;gDACTQ,QAAQ;gDACRQ,UAAU;gDACVC,OAAOhD,kBAAkBa,SAAS+D,WAAW,UAAU;4CACzD;;sDACGA;;wCAGFG,8BACC;;8DACE,sBAAC7C;oDAAEH,OAAO;wDACRQ,QAAQ;wDACRQ,UAAU;wDACVuC,YAAY;wDACZtC,OAAOhD,kBAAkBa,SAAS+D,WAAW,YAAY;oDAC3D;;;wDACG3D,gBAAgB8D,aAAaxD,WAAW,GAAGgE,UAAU,GAAG;wDACvDR,CAAAA,aAAaxD,WAAW,IAAI,EAAC,EAAGE,MAAM,GAAG,OAAO;;;8DAGpD,sBAACK;oDAAIC,OAAO;wDAAEI,SAAS;wDAAQE,KAAK;wDAAUmD,UAAU;oDAAO;;;wDAC5DT,aAAaU,WAAW,kBACvB,qBAAC3C;4DAAKf,OAAO;gEACX6B,SAAS;gEACTC,YAAY;gEACZE,cAAc;gEACdhB,UAAU;gEACV2C,YAAY;gEACZ1C,OAAO;4DACT;;sEAAG;;wDAKJ+B,aAAapC,QAAQ,kBACpB,qBAACG;4DAAKf,OAAO;gEACX6B,SAAS;gEACTC,YAAY;gEACZE,cAAc;gEACdhB,UAAU;gEACV2C,YAAY;gEACZ1C,OAAO;4DACT;;sEACG+B,aAAapC,QAAQ;;;;;;;mCAnE3BiC;4BA2EX;wBACF,CAAA;;;;YAML5E,kCACC,qBAAC8B;gBAAIC,OAAO;oBAAE4D,WAAW;gBAAO;;0BAC9B,cAAA,sBAAC7D;8DAAc;;sCACb,qBAACuD;4BAAGtD,OAAO;gCACTQ,QAAQ;gCACRS,OAAO;gCACPD,UAAU;gCACV2C,YAAY;4BACd;;sCACG1F,iBAAiBa,IAAI;;wBAEtB,CAAA;4BACA,MAAM+E,cAAc5F,iBAAiBa,IAAI,CAACE,WAAW;4BACrD,MAAMgE,eAAec,2BAAgB,CAACD,YAAY;4BAElD,IAAIb,cAAc;gCAChB,qBACE,sBAACjD;;;sDACC,qBAACI;4CAAEH,OAAO;gDAAEQ,QAAQ;gDAAc+C,YAAY;4CAAM;;sDACjDrE,gBAAgB8D,aAAaxD,WAAW;;sDAE3C,sBAACO;4CAAIC,OAAO;gDAAEC,cAAc;4CAAO;;;gDAChC+C,aAAaU,WAAW,kBACvB,qBAAC3C;oDAAKf,OAAO;wDACX6B,SAAS;wDACTC,YAAY;wDACZE,cAAc;wDACdhB,UAAU;wDACV2C,YAAY;wDACZ1C,OAAO;oDACT;;8DAAG;;gDAIJ+B,aAAapC,QAAQ,kBACpB,qBAACG;oDAAKf,OAAO;wDACX+D,YAAYf,aAAaU,WAAW,GAAG,WAAW;wDAClD7B,SAAS;wDACTC,YAAY;wDACZE,cAAc;wDACdhB,UAAU;wDACV2C,YAAY;wDACZ1C,OAAO;oDACT;;8DACG+B,aAAapC,QAAQ;;;;;;4BAMlC,OAAO;gCACL,qBACE,sBAACT;oCAAEH,OAAO;wCAAEQ,QAAQ;wCAAG+C,YAAY;wCAAOtC,OAAO;oCAAU;;;wCAAG;wCAC3ChD,iBAAiBa,IAAI;wCAAC;;;4BAG7C;wBACF,CAAA;;;;;;;;;;AAeZ"}