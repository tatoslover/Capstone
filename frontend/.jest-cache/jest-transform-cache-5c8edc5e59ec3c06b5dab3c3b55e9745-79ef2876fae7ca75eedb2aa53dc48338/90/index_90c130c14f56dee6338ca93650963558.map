{"version":3,"sources":["/Users/samuellove/Documents/GitHub/Capstone/frontend/pages/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout/Layout\";\nimport UserSelector from \"../components/User/UserSelector\";\nimport Loading from \"../components/UI/Loading\";\n\nimport { FilteredMechanicsList } from \"../components/Mechanics\";\nimport { CardAnatomySection } from \"../components/CardAnatomy\";\nimport { GameModesList } from \"../components/GameModes\";\nimport gameOverview from \"../data/gameOverview.json\";\nimport colours from \"../data/colours.json\";\nimport cardTypes from \"../data/cardTypes.json\";\nimport turnPhases from \"../data/turnPhases.json\";\nimport winConditions from \"../data/winConditions.json\";\nimport combatBasics from \"../data/combatBasics.json\";\nimport deckBuilding from \"../data/deckBuilding.json\";\nimport cardAnatomy from \"../data/cardAnatomy.json\";\n\nexport default function Home() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [selectedMechanic, setSelectedMechanic] = useState(null);\n\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001\";\n\n  const handleUserSelect = (user) => {\n    setCurrentUser(user);\n    if (user) {\n      localStorage.setItem(\"currentUser\", JSON.stringify(user));\n    } else {\n      localStorage.removeItem(\"currentUser\");\n    }\n  };\n\n  // Load user from localStorage on mount\n  useEffect(() => {\n    const savedUser = localStorage.getItem(\"currentUser\");\n    if (savedUser) {\n      try {\n        setCurrentUser(JSON.parse(savedUser));\n      } catch (e) {\n        localStorage.removeItem(\"currentUser\");\n      }\n    }\n  }, []);\n\n  const handleMechanicSelect = (mechanic) => {\n    setSelectedMechanic(mechanic);\n  };\n\n  const [selectedPhase, setSelectedPhase] = useState(null);\n  const [selectedColour, setSelectedColour] = useState(null);\n  const [selectedCardType, setSelectedCardType] = useState(null);\n\n  const [selectedWinCondition, setSelectedWinCondition] = useState(null);\n  const [selectedDeckType, setSelectedDeckType] = useState(null);\n  const [selectedCombatStep, setSelectedCombatStep] = useState(null);\n\n  const phaseInfo = {\n    beginning: {\n      title: turnPhases.phases.beginning.name,\n      content: (\n        <div>\n          <p style={{ marginBottom: \"1rem\", color: \"#dee2e6\" }}>\n            {turnPhases.phases.beginning.description}\n          </p>\n          {Object.values(turnPhases.phases.beginning.steps).map(\n            (step, index) => (\n              <div key={index} style={{ marginBottom: \"0.75rem\" }}>\n                <p>\n                  <strong>{step.name}:</strong> {step.description}\n                </p>\n                {step.strategicNotes && step.strategicNotes.length > 0 && (\n                  <p\n                    style={{\n                      fontSize: \"0.9rem\",\n                      color: \"#adb5bd\",\n                      fontStyle: \"italic\",\n                    }}\n                  >\n                    {step.strategicNotes[0]}\n                  </p>\n                )}\n              </div>\n            ),\n          )}\n        </div>\n      ),\n    },\n    main1: {\n      title: turnPhases.phases.main1.name,\n      content: (\n        <div>\n          <p style={{ marginBottom: \"1rem\", color: \"#dee2e6\" }}>\n            {turnPhases.phases.main1.description}\n          </p>\n          <p style={{ marginBottom: \"0.5rem\" }}>\n            <strong>You can:</strong>\n          </p>\n          <ul style={{ margin: \"0 0 1rem 1.5rem\", color: \"#dee2e6\" }}>\n            {turnPhases.phases.main1.whatYouCanDo.map((action, index) => (\n              <li key={index} style={{ marginBottom: \"0.25rem\" }}>\n                {action}\n              </li>\n            ))}\n          </ul>\n          {turnPhases.phases.main1.tips && (\n            <div\n              style={{\n                background: \"#343a40\",\n                padding: \"1rem\",\n                borderRadius: \"0.375rem\",\n                marginTop: \"1rem\",\n              }}\n            >\n              <p style={{ fontSize: \"0.9rem\", color: \"#adb5bd\", margin: \"0\" }}>\n                <strong>Tip:</strong>{\" \"}\n                {turnPhases.phases.main1.strategicConsiderations[0]}\n              </p>\n            </div>\n          )}\n        </div>\n      ),\n    },\n    combat: {\n      title: turnPhases.phases.combat.name,\n      content: (\n        <div>\n          <p style={{ marginBottom: \"1rem\", color: \"#dee2e6\" }}>\n            {turnPhases.phases.combat.description}\n          </p>\n          <p style={{ marginBottom: \"0.75rem\" }}>\n            <strong>Combat Steps:</strong>\n          </p>\n          {Object.values(turnPhases.phases.combat.steps).map((step, index) => (\n            <div key={index} style={{ marginBottom: \"0.75rem\" }}>\n              <p>\n                <strong>{step.name}:</strong> {step.description}\n              </p>\n              {step.strategicUse && step.strategicUse.length > 0 && (\n                <p\n                  style={{\n                    fontSize: \"0.85rem\",\n                    color: \"#adb5bd\",\n                    fontStyle: \"italic\",\n                    marginTop: \"0.25rem\",\n                  }}\n                >\n                  {step.strategicUse[0]}\n                </p>\n              )}\n            </div>\n          ))}\n        </div>\n      ),\n    },\n    main2: {\n      title: turnPhases.phases.main2.name,\n      content: (\n        <div>\n          <p style={{ marginBottom: \"1rem\", color: \"#dee2e6\" }}>\n            {turnPhases.phases.main2.description}\n          </p>\n          <p style={{ marginBottom: \"0.5rem\" }}>\n            <strong>You can:</strong>\n          </p>\n          <ul style={{ margin: \"0 0 1rem 1.5rem\", color: \"#dee2e6\" }}>\n            {turnPhases.phases.main2.commonActions.map((action, index) => (\n              <li key={index} style={{ marginBottom: \"0.25rem\" }}>\n                {action}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ),\n    },\n    ending: {\n      title: turnPhases.phases.ending.name,\n      content: (\n        <div>\n          <p style={{ marginBottom: \"1rem\", color: \"#dee2e6\" }}>\n            {turnPhases.phases.ending.description}\n          </p>\n          {Object.values(turnPhases.phases.ending.steps).map((step, index) => (\n            <div key={index} style={{ marginBottom: \"0.75rem\" }}>\n              <p>\n                <strong>{step.name}:</strong> {step.description}\n              </p>\n              {step.automaticActions && (\n                <ul style={{ margin: \"0.5rem 0 0 1.5rem\", color: \"#dee2e6\" }}>\n                  {step.automaticActions.map((detail, detailIndex) => (\n                    <li\n                      key={detailIndex}\n                      style={{ fontSize: \"0.9rem\", marginBottom: \"0.25rem\" }}\n                    >\n                      {detail}\n                    </li>\n                  ))}\n                </ul>\n              )}\n              {step.commonTriggers && (\n                <ul style={{ margin: \"0.5rem 0 0 1.5rem\", color: \"#dee2e6\" }}>\n                  {step.commonTriggers.map((detail, detailIndex) => (\n                    <li\n                      key={detailIndex}\n                      style={{ fontSize: \"0.9rem\", marginBottom: \"0.25rem\" }}\n                    >\n                      {detail}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          ))}\n        </div>\n      ),\n    },\n  };\n\n  return (\n    <Layout title=\"Planeswalker's Primer - MTG Rulebook for Beginners\">\n      <div className=\"container page-content\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-3\">\n          <div\n            className=\"header-box\"\n            style={{ maxWidth: \"800px\", margin: \"0 auto\" }}\n          >\n            <h1>Welcome to Planeswalker's Primer</h1>\n            <p style={{ fontSize: \"1.25rem\" }}>\n              Your beginner-friendly guide to Magic: The Gathering mechanics and\n              keywords. Learn the basics, explore cards, and save your\n              favourites!\n            </p>\n          </div>\n        </div>\n\n        {/* What is Magic: The Gathering? */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            {gameOverview.introduction.title}\n          </h2>\n          <div\n            style={{\n              maxWidth: \"700px\",\n              margin: \"0 auto\",\n              color: \"#dee2e6\",\n              lineHeight: \"1.6\",\n            }}\n          >\n            <p\n              style={{\n                marginBottom: \"1rem\",\n                fontSize: \"1.1rem\",\n                fontWeight: \"500\",\n                color: \"#ffffff\",\n              }}\n            >\n              {gameOverview.introduction.tagline}\n            </p>\n            <p style={{ marginBottom: \"1rem\" }}>\n              {gameOverview.introduction.description.replace(\n                /\\[\\d+\\](\\[\\d+\\])*/g,\n                \"\",\n              )}\n            </p>\n            <p style={{ marginBottom: \"1rem\" }}>\n              {gameOverview.coreGameplay.overview.replace(\n                /\\[\\d+\\](\\[\\d+\\])*/g,\n                \"\",\n              )}\n            </p>\n            <p style={{ marginBottom: \"1.5rem\" }}>\n              {gameOverview.coreGameplay.gameFlow.replace(\n                /\\[\\d+\\](\\[\\d+\\])*/g,\n                \"\",\n              )}\n            </p>\n\n            {/* Game Basics */}\n            <div className=\"section-content\" style={{ marginBottom: \"1.5rem\" }}>\n              <h3\n                style={{\n                  color: \"#ffffff\",\n                  marginBottom: \"1.5rem\",\n                  textAlign: \"center\",\n                }}\n              >\n                Game Basics\n              </h3>\n              <div\n                style={{\n                  display: \"grid\",\n                  gridTemplateColumns: \"repeat(auto-fit, minmax(240px, 1fr))\",\n                  gap: \"1.5rem\",\n                }}\n              >\n                <div\n                  style={{\n                    textAlign: \"center\",\n                    padding: \"1rem\",\n                    background: \"rgba(255, 255, 255, 0.05)\",\n                    borderRadius: \"0.5rem\",\n                    border: \"1px solid rgba(255, 255, 255, 0.1)\",\n                  }}\n                >\n                  <div style={{ fontSize: \"2rem\", marginBottom: \"0.5rem\" }}>\n                    👥\n                  </div>\n                  <strong\n                    style={{\n                      color: \"#ffffff\",\n                      display: \"block\",\n                      marginBottom: \"0.5rem\",\n                    }}\n                  >\n                    Players\n                  </strong>\n                  <span style={{ color: \"#dee2e6\" }}>\n                    {gameOverview.basics.players}\n                  </span>\n                </div>\n                <div\n                  style={{\n                    textAlign: \"center\",\n                    padding: \"1rem\",\n                    background: \"rgba(255, 255, 255, 0.05)\",\n                    borderRadius: \"0.5rem\",\n                    border: \"1px solid rgba(255, 255, 255, 0.1)\",\n                  }}\n                >\n                  <div style={{ fontSize: \"2rem\", marginBottom: \"0.5rem\" }}>\n                    ⏱️\n                  </div>\n                  <strong\n                    style={{\n                      color: \"#ffffff\",\n                      display: \"block\",\n                      marginBottom: \"0.5rem\",\n                    }}\n                  >\n                    Game Length\n                  </strong>\n                  <span style={{ color: \"#dee2e6\" }}>\n                    {gameOverview.basics.gameLength}\n                  </span>\n                </div>\n                <div\n                  style={{\n                    textAlign: \"center\",\n                    padding: \"1rem\",\n                    background: \"rgba(255, 255, 255, 0.05)\",\n                    borderRadius: \"0.5rem\",\n                    border: \"1px solid rgba(255, 255, 255, 0.1)\",\n                  }}\n                >\n                  <div style={{ fontSize: \"2rem\", marginBottom: \"0.5rem\" }}>\n                    🎓\n                  </div>\n                  <strong\n                    style={{\n                      color: \"#ffffff\",\n                      display: \"block\",\n                      marginBottom: \"0.5rem\",\n                    }}\n                  >\n                    Age Range\n                  </strong>\n                  <span style={{ color: \"#dee2e6\" }}>\n                    {gameOverview.basics.ageRange}\n                  </span>\n                </div>\n                <div\n                  style={{\n                    textAlign: \"center\",\n                    padding: \"1rem\",\n                    background: \"rgba(255, 255, 255, 0.05)\",\n                    borderRadius: \"0.5rem\",\n                    border: \"1px solid rgba(255, 255, 255, 0.1)\",\n                  }}\n                >\n                  <div style={{ fontSize: \"2rem\", marginBottom: \"0.5rem\" }}>\n                    🧠\n                  </div>\n                  <strong\n                    style={{\n                      color: \"#ffffff\",\n                      display: \"block\",\n                      marginBottom: \"0.5rem\",\n                    }}\n                  >\n                    Skills\n                  </strong>\n                  <span style={{ color: \"#dee2e6\" }}>\n                    {gameOverview.basics.skillTypes}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* The Five Colours */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            The Six Colours\n          </h2>\n          <p\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"1.5rem\",\n              color: \"#adb5bd\",\n            }}\n          >\n            Learn about Magic's colour pie and what each colour represents\n          </p>\n          <div\n            className=\"section-grid\"\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit, minmax(100px, 1fr))\",\n              gap: \"0.5rem\",\n              maxWidth: \"700px\",\n              margin: \"0 auto 2rem auto\",\n            }}\n          >\n            {Object.entries(colours).map(([colourKey, colourData]) => (\n              <button\n                key={colourKey}\n                onClick={() =>\n                  setSelectedColour(selectedColour === colourKey ? null : colourKey)\n                }\n                className={`section-button ${selectedColour === colourKey ? \"active\" : \"\"}`}\n              >\n                <span style={{ fontSize: \"1.5rem\" }}>{colourData.emoji}</span>\n                <span>{colourData.name}</span>\n              </button>\n            ))}\n          </div>\n\n          {selectedColour && (\n            <div className=\"section-content\">\n              <h3\n                style={{\n                  marginBottom: \"1rem\",\n                  color: \"#ffffff\",\n                  textAlign: \"center\",\n                }}\n              >\n                {colours[selectedColour].name}\n              </h3>\n              <div style={{ color: \"#dee2e6\", lineHeight: \"1.6\" }}>\n                <p style={{ marginBottom: \"1rem\", fontSize: \"1.1rem\" }}>\n                  {colours[selectedColour].description}\n                </p>\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <strong style={{ color: \"#ffffff\" }}>Philosophy: </strong>\n                  <em style={{ color: \"#adb5bd\" }}>\n                    {colours[selectedColour].philosophy}\n                  </em>\n                </div>\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <strong style={{ color: \"#ffffff\" }}>Strengths: </strong>\n                  {colours[selectedColour].strengths.join(\", \")}\n                </div>\n                <div>\n                  <strong style={{ color: \"#ffffff\" }}>Key Mechanics: </strong>\n                  {colours[selectedColour].mechanics.join(\", \")}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Card Types */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            Card Types\n          </h2>\n          <p\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"1.5rem\",\n              color: \"#adb5bd\",\n            }}\n          >\n            Understand the different types of cards in Magic\n          </p>\n          <div\n            className=\"section-grid\"\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit, minmax(120px, 1fr))\",\n              gap: \"0.5rem\",\n              maxWidth: \"800px\",\n              margin: \"0 auto 2rem auto\",\n            }}\n          >\n            {Object.entries(cardTypes).map(([typeKey, typeData]) => (\n              <button\n                key={typeKey}\n                onClick={() =>\n                  setSelectedCardType(\n                    selectedCardType === typeKey ? null : typeKey,\n                  )\n                }\n                className={`section-button ${selectedCardType === typeKey ? \"active\" : \"\"}`}\n              >\n                <span style={{ fontSize: \"1.5rem\" }}>{typeData.icon}</span>\n                <span>{typeData.name}</span>\n              </button>\n            ))}\n          </div>\n\n          {selectedCardType && (\n            <div className=\"section-content\">\n              <h3\n                style={{\n                  marginBottom: \"1rem\",\n                  color: \"#ffffff\",\n                  textAlign: \"center\",\n                }}\n              >\n                {cardTypes[selectedCardType].name}\n              </h3>\n              <div style={{ color: \"#dee2e6\", lineHeight: \"1.6\" }}>\n                <p style={{ marginBottom: \"1rem\", fontSize: \"1.1rem\" }}>\n                  {cardTypes[selectedCardType].description}\n                </p>\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <strong style={{ color: \"#ffffff\" }}>Timing: </strong>\n                  {cardTypes[selectedCardType].timing}\n                </div>\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <strong style={{ color: \"#ffffff\" }}>Usage: </strong>\n                  {cardTypes[selectedCardType].usage}\n                </div>\n                {cardTypes[selectedCardType].examples && (\n                  <div>\n                    <strong style={{ color: \"#ffffff\" }}>Examples: </strong>\n                    {cardTypes[selectedCardType].examples.join(\", \")}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Turn Phases */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            Turn Phases\n          </h2>\n          <p\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"1.5rem\",\n              color: \"#adb5bd\",\n            }}\n          >\n            Learn the structure of a Magic turn\n          </p>\n          <div\n            className=\"section-grid\"\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit, minmax(120px, 1fr))\",\n              gap: \"0.5rem\",\n              maxWidth: \"600px\",\n              margin: \"0 auto 2rem auto\",\n            }}\n          >\n            <button\n              onClick={() =>\n                setSelectedPhase(\n                  selectedPhase === \"beginning\" ? null : \"beginning\",\n                )\n              }\n              className={`section-button ${selectedPhase === \"beginning\" ? \"active\" : \"\"}`}\n            >\n              <span style={{ fontSize: \"1.5rem\" }}>🌅</span>\n              <span>Beginning</span>\n            </button>\n            <button\n              onClick={() =>\n                setSelectedPhase(selectedPhase === \"main1\" ? null : \"main1\")\n              }\n              className={`section-button ${selectedPhase === \"main1\" ? \"active\" : \"\"}`}\n            >\n              <span style={{ fontSize: \"1.5rem\" }}>🏗️</span>\n              <span>Main 1</span>\n            </button>\n            <button\n              onClick={() =>\n                setSelectedPhase(selectedPhase === \"combat\" ? null : \"combat\")\n              }\n              className={`section-button ${selectedPhase === \"combat\" ? \"active\" : \"\"}`}\n            >\n              <span style={{ fontSize: \"1.5rem\" }}>⚔️</span>\n              <span>Combat</span>\n            </button>\n            <button\n              onClick={() =>\n                setSelectedPhase(selectedPhase === \"main2\" ? null : \"main2\")\n              }\n              className={`section-button ${selectedPhase === \"main2\" ? \"active\" : \"\"}`}\n            >\n              <span style={{ fontSize: \"1.5rem\" }}>🏛️</span>\n              <span>Main 2</span>\n            </button>\n            <button\n              onClick={() =>\n                setSelectedPhase(selectedPhase === \"ending\" ? null : \"ending\")\n              }\n              className={`section-button ${selectedPhase === \"ending\" ? \"active\" : \"\"}`}\n            >\n              <span style={{ fontSize: \"1.5rem\" }}>🌙</span>\n              <span>Ending</span>\n            </button>\n          </div>\n\n          {selectedPhase && (\n            <div className=\"section-content\">\n              <h3\n                style={{\n                  marginBottom: \"1rem\",\n                  color: \"#ffffff\",\n                  textAlign: \"center\",\n                }}\n              >\n                {phaseInfo[selectedPhase].title}\n              </h3>\n              <div style={{ color: \"#dee2e6\", lineHeight: \"1.6\" }}>\n                {phaseInfo[selectedPhase].content}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Card Anatomy */}\n        <CardAnatomySection cardAnatomyData={cardAnatomy} />\n\n        {/* Mechanics Guide */}\n        <FilteredMechanicsList\n          onMechanicSelect={handleMechanicSelect}\n          selectedMechanic={selectedMechanic}\n        />\n\n        {/* Game Modes */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            Game Modes\n          </h2>\n          <p\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"1.5rem\",\n              color: \"#adb5bd\",\n            }}\n          >\n            Discover different ways to play Magic\n          </p>\n          <GameModesList />\n        </div>\n\n        {/* Win Conditions */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            Win Conditions\n          </h2>\n          <p\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"1.5rem\",\n              color: \"#adb5bd\",\n            }}\n          >\n            Learn the different ways to win a game of Magic\n          </p>\n          <div\n            className=\"section-grid\"\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit, minmax(140px, 1fr))\",\n              gap: \"0.5rem\",\n              maxWidth: \"800px\",\n              margin: \"0 auto 2rem auto\",\n            }}\n          >\n            {Object.entries({\n              ...winConditions.primaryWinConditions,\n              ...winConditions.alternativeWinConditions,\n            }).map(([conditionKey, condition]) => (\n              <button\n                key={conditionKey}\n                onClick={() =>\n                  setSelectedWinCondition(\n                    selectedWinCondition === conditionKey ? null : conditionKey,\n                  )\n                }\n                className={`section-button ${selectedWinCondition === conditionKey ? \"active\" : \"\"}`}\n              >\n                <span style={{ fontSize: \"1.5rem\" }}>{condition.emoji}</span>\n                <span>{condition.name}</span>\n              </button>\n            ))}\n          </div>\n\n          {selectedWinCondition && (\n            <div className=\"section-content\">\n              <h3\n                style={{\n                  marginBottom: \"1rem\",\n                  color: \"#ffffff\",\n                  textAlign: \"center\",\n                }}\n              >\n                {\n                  (\n                    winConditions.primaryWinConditions[selectedWinCondition] ||\n                    winConditions.alternativeWinConditions[selectedWinCondition]\n                  ).name\n                }\n              </h3>\n              <div style={{ color: \"#dee2e6\", lineHeight: \"1.6\" }}>\n                <p style={{ marginBottom: \"1rem\", fontSize: \"1.1rem\" }}>\n                  {\n                    (\n                      winConditions.primaryWinConditions[\n                        selectedWinCondition\n                      ] ||\n                      winConditions.alternativeWinConditions[\n                        selectedWinCondition\n                      ]\n                    ).description\n                  }\n                </p>\n                <p style={{ marginBottom: \"1rem\", color: \"#adb5bd\" }}>\n                  {\n                    (\n                      winConditions.primaryWinConditions[\n                        selectedWinCondition\n                      ] ||\n                      winConditions.alternativeWinConditions[\n                        selectedWinCondition\n                      ]\n                    ).explanation\n                  }\n                </p>\n                {(\n                  winConditions.primaryWinConditions[selectedWinCondition] ||\n                  winConditions.alternativeWinConditions[selectedWinCondition]\n                ).tips && (\n                  <div>\n                    <strong style={{ color: \"#ffffff\" }}>Tips: </strong>\n                    <ul style={{ margin: \"0.5rem 0 0 1rem\", padding: \"0\" }}>\n                      {(\n                        winConditions.primaryWinConditions[\n                          selectedWinCondition\n                        ] ||\n                        winConditions.alternativeWinConditions[\n                          selectedWinCondition\n                        ]\n                      ).tips.map((tip, index) => (\n                        <li key={index} style={{ marginBottom: \"0.25rem\" }}>\n                          {tip}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Deck Building Fundamentals */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            Deck Building Fundamentals\n          </h2>\n          <p\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"1.5rem\",\n              color: \"#adb5bd\",\n            }}\n          >\n            Essential rules and principles for constructing your deck\n          </p>\n\n          <div\n            className=\"section-grid\"\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit, minmax(120px, 1fr))\",\n              gap: \"0.5rem\",\n              maxWidth: \"800px\",\n              margin: \"0 auto 2rem auto\",\n            }}\n          >\n            {Object.entries(deckBuilding.deckTypes).map(\n              ([typeKey, deckType]) => {\n                const emojiMap = {\n                  aggro: \"⚡\",\n                  control: \"🛡️\",\n                  midrange: \"⚖️\",\n                  combo: \"🔗\",\n                };\n                return (\n                  <button\n                    key={typeKey}\n                    onClick={() =>\n                      setSelectedDeckType(\n                        selectedDeckType === typeKey ? null : typeKey,\n                      )\n                    }\n                    className={`section-button ${selectedDeckType === typeKey ? \"active\" : \"\"}`}\n                  >\n                    <span style={{ fontSize: \"1.5rem\" }}>\n                      {emojiMap[typeKey]}\n                    </span>\n                    <span>{deckType.name}</span>\n                  </button>\n                );\n              },\n            )}\n          </div>\n\n          {selectedDeckType && (\n            <div className=\"section-content\">\n              <h3\n                style={{\n                  marginBottom: \"1rem\",\n                  color: \"#ffffff\",\n                  textAlign: \"center\",\n                }}\n              >\n                {deckBuilding.deckTypes[selectedDeckType].name}\n              </h3>\n              <div style={{ color: \"#dee2e6\", lineHeight: \"1.6\" }}>\n                <p style={{ marginBottom: \"1rem\", fontSize: \"1.1rem\" }}>\n                  {deckBuilding.deckTypes[selectedDeckType].description}\n                </p>\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <strong style={{ color: \"#ffffff\" }}>\n                    Key Characteristics:\n                  </strong>\n                  <ul style={{ margin: \"0.5rem 0 0 1rem\", padding: \"0\" }}>\n                    {deckBuilding.deckTypes[\n                      selectedDeckType\n                    ].characteristics.map((characteristic, index) => (\n                      <li key={index} style={{ marginBottom: \"0.25rem\" }}>\n                        {characteristic}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div>\n                  <strong style={{ color: \"#ffffff\" }}>Tip: </strong>\n                  <em style={{ color: \"#adb5bd\" }}>\n                    {deckBuilding.deckTypes[selectedDeckType].tips}\n                  </em>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Combat Basics */}\n        <div className=\"card\" style={{ marginBottom: \"2rem\" }}>\n          <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\" }}>\n            {combatBasics.combatOverview.title}\n          </h2>\n          <p\n            style={{\n              textAlign: \"center\",\n              marginBottom: \"1.5rem\",\n              color: \"#adb5bd\",\n            }}\n          >\n            {combatBasics.combatOverview.description}\n          </p>\n          <div\n            className=\"section-grid\"\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(auto-fit, minmax(120px, 1fr))\",\n              gap: \"0.5rem\",\n              maxWidth: \"800px\",\n              margin: \"0 auto 2rem auto\",\n            }}\n          >\n            {Object.entries(combatBasics.combatSteps).map(([stepKey, step]) => {\n              const emojiMap = {\n                beginningOfCombat: \"🌅\",\n                declareAttackers: \"🏃\",\n                declareBlockers: \"🛡️\",\n                combatDamage: \"💥\",\n                endOfCombat: \"🏁\",\n              };\n              return (\n                <button\n                  key={stepKey}\n                  onClick={() =>\n                    setSelectedCombatStep(\n                      selectedCombatStep === stepKey ? null : stepKey,\n                    )\n                  }\n                  className={`section-button ${selectedCombatStep === stepKey ? \"active\" : \"\"}`}\n                >\n                  <span style={{ fontSize: \"1.5rem\" }}>\n                    {emojiMap[stepKey]}\n                  </span>\n                  <span>{step.name}</span>\n                </button>\n              );\n            })}\n          </div>\n\n          {selectedCombatStep && (\n            <div className=\"section-content\">\n              <h3\n                style={{\n                  marginBottom: \"1rem\",\n                  color: \"#ffffff\",\n                  textAlign: \"center\",\n                }}\n              >\n                {combatBasics.combatSteps[selectedCombatStep].name}\n              </h3>\n              <div style={{ color: \"#dee2e6\", lineHeight: \"1.6\" }}>\n                <p style={{ marginBottom: \"1rem\", fontSize: \"1.1rem\" }}>\n                  {combatBasics.combatSteps[selectedCombatStep].description}\n                </p>\n                <div>\n                  <strong style={{ color: \"#ffffff\" }}>What Happens: </strong>\n                  <ul style={{ margin: \"0.5rem 0 0 1rem\", padding: \"0\" }}>\n                    {combatBasics.combatSteps[\n                      selectedCombatStep\n                    ].whatHappens.map((point, index) => (\n                      <li key={index} style={{ marginBottom: \"0.25rem\" }}>\n                        {point}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* User Management Section */}\n        <UserSelector\n          onUserSelect={handleUserSelect}\n          currentUser={currentUser}\n        />\n      </div>\n    </Layout>\n  );\n}\n"],"names":["Home","currentUser","setCurrentUser","useState","selectedMechanic","setSelectedMechanic","API_URL","process","env","NEXT_PUBLIC_API_URL","handleUserSelect","user","localStorage","setItem","JSON","stringify","removeItem","useEffect","savedUser","getItem","parse","e","handleMechanicSelect","mechanic","selectedPhase","setSelectedPhase","selectedColour","setSelectedColour","selectedCardType","setSelectedCardType","selectedWinCondition","setSelectedWinCondition","selectedDeckType","setSelectedDeckType","selectedCombatStep","setSelectedCombatStep","phaseInfo","beginning","title","turnPhases","phases","name","content","div","p","style","marginBottom","color","description","Object","values","steps","map","step","index","strong","strategicNotes","length","fontSize","fontStyle","main1","ul","margin","whatYouCanDo","action","li","tips","background","padding","borderRadius","marginTop","strategicConsiderations","combat","strategicUse","main2","commonActions","ending","automaticActions","detail","detailIndex","commonTriggers","Layout","className","maxWidth","h1","h2","textAlign","gameOverview","introduction","lineHeight","fontWeight","tagline","replace","coreGameplay","overview","gameFlow","h3","display","gridTemplateColumns","gap","border","span","basics","players","gameLength","ageRange","skillTypes","entries","colours","colourKey","colourData","button","onClick","emoji","em","philosophy","strengths","join","mechanics","cardTypes","typeKey","typeData","icon","timing","usage","examples","CardAnatomySection","cardAnatomyData","cardAnatomy","FilteredMechanicsList","onMechanicSelect","GameModesList","winConditions","primaryWinConditions","alternativeWinConditions","conditionKey","condition","explanation","tip","deckBuilding","deckTypes","deckType","emojiMap","aggro","control","midrange","combo","characteristics","characteristic","combatBasics","combatOverview","combatSteps","stepKey","beginningOfCombat","declareAttackers","declareBlockers","combatDamage","endOfCombat","whatHappens","point","UserSelector","onUserSelect"],"mappings":"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"}