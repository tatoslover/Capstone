{"version":3,"names":["cov_280i70grdd","actualCoverage","s","CardPreview","card","onClick","currentUser","onFavouriteToggle","showFavouriteButton","b","f","imageError","setImageError","_react","useState","handleCardClick","handleFavouriteClick","e","stopPropagation","formatManaSymbols","manaCost","replace","trim","getRarityColor","rarity","toLowerCase","extractKeywords","text","keywords","found","forEach","keyword","includes","push","slice","cardKeywords","oracle_text","_jsxruntime","jsxs","className","style","cursor","gap","jsx","title","image_uris","small","src","alt","name","onError","mana_cost","type_line","power","toughness","length","map","index","set_name","set","collector_number"],"sources":["/Users/samuellove/Documents/GitHub/Capstone/frontend/components/Card/CardPreview.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function CardPreview({\n  card,\n  onClick,\n  currentUser,\n  onFavouriteToggle,\n  showFavouriteButton = true,\n}) {\n  const [imageError, setImageError] = useState(false);\n\n  if (!card) {\n    return null;\n  }\n\n  const handleCardClick = () => {\n    if (onClick) {\n      onClick(card);\n    }\n  };\n\n  const handleFavouriteClick = (e) => {\n    e.stopPropagation();\n    if (onFavouriteToggle && currentUser) {\n      onFavouriteToggle(card);\n    }\n  };\n\n  // Format mana symbols for compact display\n  const formatManaSymbols = (manaCost) => {\n    if (!manaCost) return \"\";\n    return manaCost\n      .replace(/{([^}]+)}/g, \"($1)\")\n      .replace(/\\(/g, \" (\")\n      .trim();\n  };\n\n  // Get card rarity color\n  const getRarityColor = (rarity) => {\n    switch (rarity?.toLowerCase()) {\n      case \"common\":\n        return \"#1a1a1a\";\n      case \"uncommon\":\n        return \"#c0c0c0\";\n      case \"rare\":\n        return \"#ffd700\";\n      case \"mythic\":\n        return \"#ff8c00\";\n      default:\n        return \"#6c757d\";\n    }\n  };\n\n  // Extract key abilities for preview\n  const extractKeywords = (text) => {\n    if (!text) return [];\n\n    const keywords = [\n      \"Flying\",\n      \"Trample\",\n      \"First strike\",\n      \"Double strike\",\n      \"Deathtouch\",\n      \"Lifelink\",\n      \"Vigilance\",\n      \"Haste\",\n      \"Reach\",\n      \"Hexproof\",\n      \"Indestructible\",\n      \"Menace\",\n      \"Prowess\",\n      \"Flash\",\n      \"Defender\",\n    ];\n\n    const found = [];\n    keywords.forEach((keyword) => {\n      if (text.toLowerCase().includes(keyword.toLowerCase())) {\n        found.push(keyword);\n      }\n    });\n\n    return found.slice(0, 3); // Limit to 3 for compact display\n  };\n\n  const cardKeywords = extractKeywords(card.oracle_text);\n\n  return (\n    <div\n      onClick={handleCardClick}\n      className={`card-preview ${onClick ? \"\" : \"\"}`}\n      style={{ cursor: onClick ? \"pointer\" : \"default\", gap: \"1rem\" }}\n    >\n      {/* Favourite Button */}\n      {showFavouriteButton && currentUser && (\n        <button\n          onClick={handleFavouriteClick}\n          className=\"favourite-btn-preview\"\n          title=\"Add to favourites\"\n        >\n          ‚≠ê\n        </button>\n      )}\n\n      {/* Card Image */}\n      <div className=\"card-preview-image-container\">\n        {card.image_uris?.small && !imageError ? (\n          <img\n            src={card.image_uris.small}\n            alt={card.name}\n            onError={() => setImageError(true)}\n          />\n        ) : (\n          <div className=\"card-preview-image-placeholder\">üÉè</div>\n        )}\n      </div>\n\n      {/* Card Info */}\n      <div className=\"card-preview-content\">\n        {/* Name and Mana Cost */}\n        <div className=\"card-preview-header\">\n          <h4 className=\"card-preview-title\">{card.name}</h4>\n          {card.mana_cost && (\n            <div className=\"mana-cost-small\">\n              {formatManaSymbols(card.mana_cost)}\n            </div>\n          )}\n        </div>\n\n        {/* Type Line */}\n        <div className=\"card-preview-type\">{card.type_line}</div>\n\n        {/* Rarity and Power/Toughness */}\n        <div className=\"card-preview-stats\">\n          {card.rarity && (\n            <span\n              className={`card-preview-rarity ${card.rarity?.toLowerCase()}`}\n            >\n              {card.rarity}\n            </span>\n          )}\n          {card.power && card.toughness && (\n            <span className=\"card-preview-power\">\n              {card.power}/{card.toughness}\n            </span>\n          )}\n        </div>\n\n        {/* Keywords */}\n        {cardKeywords.length > 0 && (\n          <div className=\"keywords-container\">\n            {cardKeywords.map((keyword, index) => (\n              <span key={index} className=\"keyword-badge\">\n                {keyword}\n              </span>\n            ))}\n          </div>\n        )}\n\n        {/* Truncated Oracle Text */}\n        {card.oracle_text && (\n          <div className=\"card-preview-oracle\">{card.oracle_text}</div>\n        )}\n\n        {/* Set Info */}\n        <div className=\"card-preview-set\">\n          <span>\n            {card.set_name || card.set}\n            {card.collector_number && ` #${card.collector_number}`}\n          </span>\n          {onClick && (\n            <span className=\"card-preview-click-hint\">Click for details ‚Üí</span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}