{"version":3,"names":["Documentation","API_BASE_URL","cov_21yx20qb7z","s","b","process","env","NEXT_PUBLIC_API_URL","f","selectedSection","setSelectedSection","_react","useState","dbConnectionStatus","setDbConnectionStatus","isTestingConnection","setIsTestingConnection","swaggerLoaded","setSwaggerLoaded","swaggerError","setSwaggerError","showPerformancePanel","setShowPerformancePanel","performanceMetrics","setPerformanceMetrics","handleSectionClick","section","testDatabaseConnection","response","_apiService","apiService","health","status","error","console","log","message","useEffect","checkConnection","isOnline","addConnectionListener","removeConnectionListener","fetchBackendMetrics","fetch","ok","data","json","NODE_ENV","debug","exportPerformanceReport","report","timestamp","Date","toISOString","frontend","_performance","getPerformanceMetrics","backend","url","window","location","href","blob","Blob","JSON","stringify","type","URL","createObjectURL","a","document","createElement","download","now","body","appendChild","click","removeChild","revokeObjectURL","updateMetrics","frontendMetrics","backendMetrics","interval","setInterval","clearInterval","sectionInfo","introduction","title","content","_jsxruntime","jsxs","jsx","className","product","requirements","planning","testing","implementation","api","onClick","disabled","src","onLoad","onError","target","rel","references","performance","_ClientOnly","default","fallback","style","height","background","borderRadius","display","alignItems","justifyContent","color","_PerformanceHealthIndicator","metrics","backendStatus","_PerformanceOverview","warn","note","logPerformanceSummary","currentPage","pathname","userAgent","navigator","availableMetrics","_PerformanceDashboard","isVisible","embedded","marginTop","_Layout"],"sources":["/Users/samuellove/Documents/GitHub/Capstone/frontend/pages/documentation.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Layout from \"../components/Layout/Layout\";\nimport {\n  apiService,\n  addConnectionListener,\n  removeConnectionListener,\n} from \"../services/apiService\";\nimport PerformanceDashboard from \"../components/PerformanceDashboard\";\nimport PerformanceOverview from \"../components/PerformanceOverview\";\nimport PerformanceHealthIndicator from \"../components/PerformanceHealthIndicator\";\nimport ClientOnly from \"../components/ClientOnly\";\nimport {\n  getPerformanceMetrics,\n  logPerformanceSummary,\n  exportPerformanceData,\n} from \"../utils/performance\";\n\n// API Configuration\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001\";\n\nexport default function Documentation() {\n  const [selectedSection, setSelectedSection] = useState(null);\n  const [dbConnectionStatus, setDbConnectionStatus] = useState(\"unknown\");\n  const [isTestingConnection, setIsTestingConnection] = useState(false);\n  const [swaggerLoaded, setSwaggerLoaded] = useState(false);\n  const [swaggerError, setSwaggerError] = useState(false);\n  const [showPerformancePanel, setShowPerformancePanel] = useState(false);\n  const [performanceMetrics, setPerformanceMetrics] = useState(null);\n\n  const handleSectionClick = (section) => {\n    setSelectedSection(selectedSection === section ? null : section);\n  };\n\n  // Test database connection\n  const testDatabaseConnection = async () => {\n    setIsTestingConnection(true);\n    setDbConnectionStatus(\"unknown\");\n    try {\n      const response = await apiService.health();\n      if (response && response.status === \"OK\") {\n        setDbConnectionStatus(\"connected\");\n        setSwaggerError(false);\n      } else {\n        setDbConnectionStatus(\"disconnected\");\n      }\n    } catch (error) {\n      console.log(\"Database connection test failed:\", error.message);\n      setDbConnectionStatus(\"disconnected\");\n      setSwaggerError(true);\n    } finally {\n      setIsTestingConnection(false);\n    }\n  };\n\n  // Monitor API connection status\n  useEffect(() => {\n    const checkConnection = (isOnline) => {\n      setDbConnectionStatus(isOnline ? \"connected\" : \"disconnected\");\n    };\n\n    // Initial check\n    testDatabaseConnection();\n\n    // Listen for connection changes\n    addConnectionListener(checkConnection);\n\n    return () => {\n      removeConnectionListener(checkConnection);\n    };\n  }, []);\n\n  // Fetch backend metrics for performance monitoring\n  const fetchBackendMetrics = async () => {\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}/api/monitoring/performance`,\n      );\n      if (response.ok) {\n        const data = await response.json();\n        return data;\n      } else {\n        if (process.env.NODE_ENV === \"development\") {\n          console.debug(\n            \"Backend performance endpoint not available (this is optional)\",\n          );\n        }\n      }\n    } catch (error) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.debug(\n          \"Backend performance monitoring unavailable:\",\n          error.message,\n        );\n      }\n    }\n    return null;\n  };\n\n  // Export performance report\n  const exportPerformanceReport = () => {\n    const report = {\n      timestamp: new Date().toISOString(),\n      frontend: getPerformanceMetrics(),\n      backend: performanceMetrics?.backend,\n      url: window.location.href,\n    };\n\n    const blob = new Blob([JSON.stringify(report, null, 2)], {\n      type: \"application/json\",\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `performance-report-${Date.now()}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Real-time performance updates\n  useEffect(() => {\n    const updateMetrics = async () => {\n      const frontendMetrics = getPerformanceMetrics();\n      const backendMetrics = await fetchBackendMetrics();\n      setPerformanceMetrics({ ...frontendMetrics, backend: backendMetrics });\n    };\n\n    // Initial load\n    updateMetrics();\n\n    // Set up interval only if performance panel is shown\n    if (showPerformancePanel) {\n      const interval = setInterval(updateMetrics, 5000);\n      return () => clearInterval(interval);\n    }\n  }, [showPerformancePanel]);\n\n  const sectionInfo = {\n    introduction: {\n      title: \"Introduction\",\n      content: (\n        <div>\n          <h4 className=\"doc-heading\">Purpose</h4>\n          <ul className=\"doc-list\">\n            <li>\n              TBC - What is the problem or opportunity that the project is\n              investigating?\n            </li>\n            <li>TBC - Why is this problem valuable to address?</li>\n            <li>\n              TBC - What is the current state (e.g. unsatisfied users, lost\n              revenue)?\n            </li>\n            <li>TBC - What is the desired state?</li>\n            <li>\n              TBC - Has this problem been addressed by other projects? What were\n              the outcomes?\n            </li>\n          </ul>\n\n          <h4 className=\"doc-heading\">Industry/Domain</h4>\n          <ul className=\"doc-list\">\n            <li>TBC - What is the industry/domain?</li>\n            <li>\n              TBC - What is the current state of this industry? (e.g. challenges\n              from startups)\n            </li>\n            <li>TBC - What is the overall industry value-chain?</li>\n            <li>TBC - What are the key concepts in the industry?</li>\n            <li>TBC - Is the project relevant to other industries?</li>\n          </ul>\n\n          <h4 className=\"doc-heading\">Stakeholders</h4>\n          <ul>\n            <li>\n              TBC - Who are the stakeholders? (be as specific as possible as to\n              who would have access to the software)\n            </li>\n            <li>TBC - Why do they care about this software?</li>\n            <li>TBC - What are the stakeholders' expectations?</li>\n          </ul>\n        </div>\n      ),\n    },\n    product: {\n      title: \"Product Description\",\n      content: (\n        <div>\n          <h4 className=\"doc-heading\">Architecture Diagram</h4>\n          <p className=\"doc-paragraph\">\n            TBC - Include a diagram of the building blocks of the design\n            including users and how they interact with the product.\n          </p>\n\n          <h4 className=\"doc-heading\">User Stories</h4>\n          <div className=\"doc-paragraph\">\n            <table className=\"doc-table\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>User Story Title</th>\n                  <th>Description</th>\n                  <th>Priority</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>1</td>\n                  <td>TBC</td>\n                  <td>TBC</td>\n                  <td>TBC</td>\n                </tr>\n                <tr>\n                  <td>2</td>\n                  <td>TBC</td>\n                  <td>TBC</td>\n                  <td>TBC</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <h4 className=\"doc-heading\">User Flow</h4>\n          <p className=\"doc-paragraph\">\n            TBC - Present as a flow diagram the steps a user may make in\n            interacting with the software.\n          </p>\n\n          <h4 className=\"doc-heading\">Wireframe Design</h4>\n          <p className=\"doc-paragraph\">\n            TBC - Show elements of the user interface, either manually or via a\n            tool such as Figma.\n          </p>\n\n          <h4 className=\"doc-heading\">Open Questions/Out of Scope</h4>\n          <p>TBC - What features are considered out of scope?</p>\n        </div>\n      ),\n    },\n    requirements: {\n      title: \"Non-functional Requirements\",\n      content: (\n        <div>\n          <ul>\n            <li>\n              TBC - What are the key security requirements? (e.g. login, storage\n              of personal details, inactivity timeout, data encryption)\n            </li>\n            <li>TBC - How many transactions should be enabled at peak time?</li>\n            <li>TBC - How easy to use does the software need to be?</li>\n            <li>\n              TBC - How quickly should the application respond to user requests?\n            </li>\n            <li>\n              TBC - How reliable must the application be? (e.g. mean time\n              between failures)\n            </li>\n            <li>\n              TBC - Does the software conform to any technical standards to ease\n              maintainability?\n            </li>\n          </ul>\n        </div>\n      ),\n    },\n    planning: {\n      title: \"Project Planning\",\n      content: (\n        <div>\n          <p className=\"doc-paragraph\">\n            TBC - Include a Gantt chart or screenshot of a Trello board showing\n            key milestones (with dates) to complete the project.\n          </p>\n\n          <h4 className=\"doc-heading\">Key Milestones</h4>\n          <ul>\n            <li>TBC - Project initiation and requirements gathering</li>\n            <li>TBC - Design and architecture phase</li>\n            <li>TBC - Core development sprints</li>\n            <li>TBC - Testing and quality assurance</li>\n            <li>TBC - Deployment and documentation</li>\n            <li>TBC - Final presentation and delivery</li>\n          </ul>\n        </div>\n      ),\n    },\n    testing: {\n      title: \"Testing Strategy\",\n      content: (\n        <div>\n          <ul>\n            <li>\n              TBC - What were steps undertaken to achieve product quality?\n            </li>\n            <li>TBC - How was each feature of the application tested?</li>\n            <li>TBC - How did you handle edge cases?</li>\n          </ul>\n\n          <h4 className=\"doc-heading-spaced\">Testing Approaches</h4>\n          <ul>\n            <li>TBC - Unit testing strategy</li>\n            <li>TBC - Integration testing</li>\n            <li>TBC - User acceptance testing</li>\n            <li>TBC - Performance testing</li>\n            <li>TBC - Security testing</li>\n          </ul>\n        </div>\n      ),\n    },\n    implementation: {\n      title: \"Implementation\",\n      content: (\n        <div>\n          <h4 className=\"doc-heading\">Deployment Considerations</h4>\n          <p className=\"doc-paragraph\">\n            TBC - What were the considerations for deploying the software?\n          </p>\n\n          <h4 className=\"doc-heading\">Technology Stack</h4>\n          <ul className=\"doc-list\">\n            <li>TBC - Frontend technologies (Next.js, React, etc.)</li>\n            <li>TBC - Backend technologies (Node.js, Express, etc.)</li>\n            <li>TBC - Database and storage solutions</li>\n            <li>TBC - External APIs and services</li>\n            <li>TBC - Deployment and hosting platform</li>\n          </ul>\n\n          <h4 className=\"doc-heading\">End-to-end Solution</h4>\n          <p>TBC - How well did the software meet its objectives?</p>\n        </div>\n      ),\n    },\n    api: {\n      title: \"API Documentation\",\n      content: (\n        <div>\n          <h4 className=\"doc-heading\">Railway Database Connection</h4>\n          <div className=\"api-connection-status\">\n            <div className={`connection-indicator ${dbConnectionStatus}`}>\n              <span className=\"connection-dot\"></span>\n              <span className=\"connection-text\">\n                Database:{\" \"}\n                {dbConnectionStatus === \"connected\"\n                  ? \"Connected\"\n                  : dbConnectionStatus === \"disconnected\"\n                    ? \"Disconnected\"\n                    : \"Testing...\"}\n              </span>\n            </div>\n            <button\n              className=\"btn btn-secondary btn-size-small\"\n              onClick={testDatabaseConnection}\n              disabled={isTestingConnection}\n            >\n              {isTestingConnection ? \"Testing...\" : \"Test Connection\"}\n            </button>\n          </div>\n\n          <h4 className=\"doc-heading\">Interactive API Explorer</h4>\n          <p className=\"doc-paragraph\">\n            The API documentation provides interactive testing for all backend\n            endpoints including users, favourites, messages, and MTG card search\n            functionality.\n          </p>\n\n          <div className=\"api-swagger-container\">\n            {dbConnectionStatus === \"connected\" && !swaggerError ? (\n              <iframe\n                src={`${process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001\"}/api-docs`}\n                className=\"swagger-iframe\"\n                title=\"API Documentation\"\n                onLoad={() => setSwaggerLoaded(true)}\n                onError={() => setSwaggerError(true)}\n              />\n            ) : (\n              <div className=\"swagger-fallback\">\n                <div className=\"swagger-fallback-content\">\n                  <h5>📋 API Documentation Unavailable</h5>\n                  <p>\n                    The interactive Swagger documentation requires the backend\n                    server to be running.\n                  </p>\n                  {dbConnectionStatus === \"disconnected\" && (\n                    <div className=\"swagger-fallback-instructions\">\n                      <p>\n                        <strong>\n                          To view the interactive API documentation:\n                        </strong>\n                      </p>\n                      <ol>\n                        <li>\n                          Start the backend server:{\" \"}\n                          <code>cd backend && npm start</code>\n                        </li>\n                        <li>\n                          Ensure it's running on{\" \"}\n                          <code>http://localhost:3001</code>\n                        </li>\n                        <li>\n                          Click \"Test Connection\" above to verify connectivity\n                        </li>\n                        <li>Refresh this page once connected</li>\n                      </ol>\n                      <p>\n                        Alternatively, visit{\" \"}\n                        <a\n                          href=\"http://localhost:3001/api-docs\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          http://localhost:3001/api-docs\n                        </a>{\" \"}\n                        directly when the server is running.\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <h4 className=\"doc-heading\">Available Endpoints</h4>\n          <div className=\"api-endpoints-grid\">\n            <div className=\"api-endpoint-card\">\n              <h5>Health & Status</h5>\n              <ul className=\"doc-list\">\n                <li>\n                  <code>GET /health</code> - Server health check\n                </li>\n                <li>\n                  <code>GET /</code> - Welcome message\n                </li>\n              </ul>\n            </div>\n\n            <div className=\"api-endpoint-card\">\n              <h5>User Management</h5>\n              <ul className=\"doc-list\">\n                <li>\n                  <code>GET /api/users</code> - List all users\n                </li>\n                <li>\n                  <code>POST /api/users</code> - Create new user\n                </li>\n                <li>\n                  <code>PUT /api/users/:id</code> - Update user\n                </li>\n                <li>\n                  <code>DELETE /api/users/:id</code> - Delete user\n                </li>\n              </ul>\n            </div>\n\n            <div className=\"api-endpoint-card\">\n              <h5>Favourites System</h5>\n              <ul className=\"doc-list\">\n                <li>\n                  <code>GET /api/favourites?user_id=:userId</code> - User's\n                  favourites\n                </li>\n                <li>\n                  <code>POST /api/favourites</code> - Add favourite\n                </li>\n                <li>\n                  <code>PUT /api/favourites/:id</code> - Update favourite\n                </li>\n                <li>\n                  <code>DELETE /api/favourites/:id</code> - Remove favourite\n                </li>\n              </ul>\n            </div>\n\n            <div className=\"api-endpoint-card\">\n              <h5>MTG Cards (Scryfall)</h5>\n              <ul className=\"doc-list\">\n                <li>\n                  <code>GET /api/cards/search</code> - Search cards\n                </li>\n                <li>\n                  <code>GET /api/cards/random</code> - Random cards\n                </li>\n                <li>\n                  <code>GET /api/cards/:id</code> - Get card by ID\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          <h4 className=\"doc-heading\">Database Schema</h4>\n          <p className=\"doc-paragraph\">\n            The application uses PostgreSQL hosted on Railway with the following\n            main tables:\n          </p>\n          <ul className=\"doc-list\">\n            <li>\n              <strong>users</strong> - User account information\n            </li>\n            <li>\n              <strong>favourites</strong> - User's favourite MTG cards with\n              personal notes\n            </li>\n            <li>\n              <strong>messages</strong> - System messages and notifications\n            </li>\n          </ul>\n        </div>\n      ),\n    },\n    references: {\n      title: \"References\",\n      content: (\n        <div>\n          <h4 className=\"doc-heading\">Code Repository</h4>\n          <p className=\"doc-paragraph\">\n            TBC - Where is the code used in the project? (link to GitHub)\n          </p>\n\n          <h4 className=\"doc-heading\">Resources Used</h4>\n          <ul>\n            <li>TBC - Libraries and frameworks</li>\n            <li>TBC - APIs and external services</li>\n            <li>TBC - Databases and storage</li>\n            <li>TBC - Development tools</li>\n            <li>TBC - Design resources</li>\n            <li>TBC - Documentation and references</li>\n          </ul>\n        </div>\n      ),\n    },\n    performance: {\n      title: \"Performance Monitoring\",\n      content: (\n        <div>\n          <h4 className=\"doc-heading\">Real-time Performance Dashboard</h4>\n          <p className=\"doc-paragraph\">\n            Monitor application performance including Web Vitals, API response\n            times, memory usage, and system health in real-time.\n          </p>\n\n          {/* Performance Health Indicator */}\n          <ClientOnly\n            fallback={\n              <div\n                style={{\n                  height: \"100px\",\n                  background: \"var(--theme-cardBg)\",\n                  borderRadius: \"8px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  color: \"var(--theme-textLight)\",\n                }}\n              >\n                Loading performance data...\n              </div>\n            }\n          >\n            {performanceMetrics && (\n              <PerformanceHealthIndicator\n                metrics={performanceMetrics}\n                backendStatus={performanceMetrics.backend?.status || \"unknown\"}\n              />\n            )}\n          </ClientOnly>\n\n          {/* Performance Overview Cards */}\n          <ClientOnly\n            fallback={\n              <div\n                style={{\n                  height: \"200px\",\n                  background: \"var(--theme-cardBg)\",\n                  borderRadius: \"8px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  color: \"var(--theme-textLight)\",\n                }}\n              >\n                Loading performance overview...\n              </div>\n            }\n          >\n            <PerformanceOverview metrics={performanceMetrics} />\n          </ClientOnly>\n\n          <div className=\"performance-controls\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => setShowPerformancePanel(!showPerformancePanel)}\n            >\n              {showPerformancePanel ? \"Hide\" : \"Show\"} Detailed Dashboard\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              onClick={async () => {\n                try {\n                  const frontendMetrics = getPerformanceMetrics();\n                  const backendMetrics = await fetchBackendMetrics();\n                  setPerformanceMetrics({\n                    ...frontendMetrics,\n                    backend: backendMetrics,\n                  });\n                } catch (error) {\n                  console.warn(\"Failed to refresh metrics:\", error);\n                  // Still update with frontend metrics even if backend fails\n                  const frontendMetrics = getPerformanceMetrics();\n                  setPerformanceMetrics({ ...frontendMetrics, backend: null });\n                }\n              }}\n            >\n              Refresh Metrics\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                try {\n                  exportPerformanceReport();\n                } catch (error) {\n                  console.warn(\"Failed to export report:\", error);\n                  // Fallback: create a simple report with available data\n                  const report = {\n                    timestamp: new Date().toISOString(),\n                    frontend: performanceMetrics || getPerformanceMetrics(),\n                    backend: performanceMetrics?.backend || null,\n                    url: window.location.href,\n                    note: \"Exported with limited data due to system constraints\",\n                  };\n\n                  const blob = new Blob([JSON.stringify(report, null, 2)], {\n                    type: \"application/json\",\n                  });\n                  const url = URL.createObjectURL(blob);\n                  const a = document.createElement(\"a\");\n                  a.href = url;\n                  a.download = `performance-report-${Date.now()}.json`;\n                  document.body.appendChild(a);\n                  a.click();\n                  document.body.removeChild(a);\n                  URL.revokeObjectURL(url);\n                }\n              }}\n            >\n              Export Report\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                try {\n                  logPerformanceSummary();\n                } catch (error) {\n                  console.warn(\"Performance summary failed:\", error);\n                  console.log(\"📊 Basic Performance Info:\", {\n                    currentPage: window.location.pathname,\n                    timestamp: new Date().toISOString(),\n                    userAgent: navigator.userAgent,\n                    availableMetrics: performanceMetrics\n                      ? \"Available\"\n                      : \"Loading...\",\n                  });\n                }\n              }}\n            >\n              Log to Console\n            </button>\n          </div>\n\n          <ClientOnly>\n            {showPerformancePanel && (\n              <div className=\"performance-embedded\">\n                <PerformanceDashboard isVisible={true} embedded={true} />\n              </div>\n            )}\n          </ClientOnly>\n\n          <h4 className=\"doc-heading\" style={{ marginTop: \"30px\" }}>\n            Performance Features\n          </h4>\n          <ul className=\"doc-list\">\n            <li>\n              <strong>Web Vitals Monitoring:</strong> Tracks LCP, FID, and CLS\n              metrics following Google's Core Web Vitals standards\n            </li>\n            <li>\n              <strong>API Performance:</strong> Monitors response times, success\n              rates, and identifies slow endpoints\n            </li>\n            <li>\n              <strong>User Interaction Tracking:</strong> Measures interaction\n              response times and identifies performance bottlenecks\n            </li>\n            <li>\n              <strong>Memory Monitoring:</strong> Tracks JavaScript heap usage\n              and identifies potential memory leaks\n            </li>\n            <li>\n              <strong>Error Tracking:</strong> Captures and reports JavaScript\n              errors and unhandled promise rejections\n            </li>\n            <li>\n              <strong>Real-time Updates:</strong> Automatically refreshes\n              metrics every 5 seconds when dashboard is visible\n            </li>\n            <li>\n              <strong>Export Functionality:</strong> Download detailed\n              performance reports in JSON format\n            </li>\n          </ul>\n\n          <h4 className=\"doc-heading\" style={{ marginTop: \"20px\" }}>\n            Developer Tools\n          </h4>\n          <p className=\"doc-paragraph\">\n            Performance monitoring includes developer tools accessible via\n            keyboard shortcuts and console commands:\n          </p>\n          <ul className=\"doc-list\">\n            <li>\n              <strong>Keyboard Shortcut:</strong> Press <kbd>Ctrl+Shift+P</kbd>{\" \"}\n              to toggle floating performance dashboard\n            </li>\n            <li>\n              <strong>Console Access:</strong> Use{\" \"}\n              <code>window.performanceUtils</code> object for programmatic\n              access\n            </li>\n            <li>\n              <strong>Automatic Reporting:</strong> Metrics are automatically\n              sent to backend monitoring endpoints\n            </li>\n            <li>\n              <strong>Development Warnings:</strong> Console warnings for slow\n              operations and high memory usage\n            </li>\n          </ul>\n        </div>\n      ),\n    },\n  };\n\n  return (\n    <Layout title=\"Documentation - Planeswalker's Primer\">\n      <div className=\"container page-content\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-3\">\n          <div className=\"header-box doc-hero-container\">\n            <h1>Capstone Project Documentation</h1>\n            <p className=\"doc-hero-subtitle\">\n              Comprehensive documentation for the Planeswalker's Primer project\n              development and implementation.\n            </p>\n          </div>\n        </div>\n\n        {/* Quick Overview */}\n        <div className=\"card doc-overview-container\">\n          <h2 className=\"doc-section-title\">Project Overview</h2>\n          <div className=\"doc-overview-text\">\n            <p className=\"doc-overview-paragraph\">\n              TBC - Planeswalker's Primer is a beginner-friendly web application\n              designed to help new Magic: The Gathering players understand the\n              game's mechanics, rules, and concepts.\n            </p>\n            <p className=\"doc-overview-paragraph\">\n              TBC - The project addresses the steep learning curve that new MTG\n              players face by providing an accessible, mobile-first interface\n              with interactive learning sections.\n            </p>\n            <p>\n              TBC - This capstone project demonstrates full-stack development\n              skills, user experience design, and educational content creation.\n            </p>\n          </div>\n        </div>\n\n        {/* Navigation Sections */}\n        <div className=\"card doc-sections-container\">\n          <h2 className=\"doc-section-title\">Project Documentation</h2>\n\n          <div className=\"doc-section-buttons\">\n            <button\n              onClick={() => handleSectionClick(\"introduction\")}\n              className={`doc-section-btn ${selectedSection === \"introduction\" ? \"active\" : \"\"}`}\n            >\n              📋 Introduction\n            </button>\n            <button\n              onClick={() => handleSectionClick(\"product\")}\n              className={`doc-section-btn ${selectedSection === \"product\" ? \"active\" : \"\"}`}\n            >\n              🏗️ Product Description\n            </button>\n            <button\n              onClick={() => handleSectionClick(\"requirements\")}\n              className={`doc-section-btn ${selectedSection === \"requirements\" ? \"active\" : \"\"}`}\n            >\n              ⚙️ Requirements\n            </button>\n            <button\n              onClick={() => handleSectionClick(\"planning\")}\n              className={`doc-section-btn ${selectedSection === \"planning\" ? \"active\" : \"\"}`}\n            >\n              📅 Project Planning\n            </button>\n            <button\n              onClick={() => handleSectionClick(\"testing\")}\n              className={`doc-section-btn ${selectedSection === \"testing\" ? \"active\" : \"\"}`}\n            >\n              🧪 Testing Strategy\n            </button>\n            <button\n              onClick={() => handleSectionClick(\"implementation\")}\n              className={`doc-section-btn ${selectedSection === \"implementation\" ? \"active\" : \"\"}`}\n            >\n              🚀 Implementation\n            </button>\n            <button\n              onClick={() => handleSectionClick(\"api\")}\n              className={`doc-section-btn ${selectedSection === \"api\" ? \"active\" : \"\"}`}\n            >\n              🔌 API Documentation\n            </button>\n            <button\n              onClick={() => handleSectionClick(\"performance\")}\n              className={`doc-section-btn ${selectedSection === \"performance\" ? \"active\" : \"\"}`}\n            >\n              🚀 Performance Monitoring\n            </button>\n            <button\n              onClick={() => handleSectionClick(\"references\")}\n              className={`doc-section-btn ${selectedSection === \"references\" ? \"active\" : \"\"}`}\n            >\n              📚 References\n            </button>\n          </div>\n\n          {selectedSection && (\n            <div className=\"doc-content-panel\">\n              <h3 className=\"doc-content-title\">\n                {sectionInfo[selectedSection].title}\n              </h3>\n              <div className=\"doc-content-body\">\n                {sectionInfo[selectedSection].content}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n"],"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","ignoreList":[]}