{"version":3,"names":["_default","API_BASE_URL","cov_24kx0yurut","s","b","process","env","NEXT_PUBLIC_API_URL","PerformanceDashboard","isVisible","embedded","f","metrics","setMetrics","_react","useState","backendMetrics","setBackendMetrics","refreshInterval","setRefreshInterval","autoRefresh","setAutoRefresh","refreshMetrics","frontendMetrics","_performance","getPerformanceMetrics","fetchBackendMetrics","response","fetch","ok","data","json","error","NODE_ENV","console","debug","message","useEffect","interval","setInterval","clearInterval","formatBytes","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDuration","ms","seconds","minutes","hours","getVitalRating","vital","rating","getRatingColor","_jsxruntime","jsxs","style","position","top","right","width","maxHeight","backgroundColor","color","border","borderRadius","padding","fontSize","fontFamily","overflowY","zIndex","boxShadow","display","justifyContent","alignItems","marginBottom","jsx","margin","gap","onClick","cursor","transition","onMouseEnter","e","target","transform","onMouseLeave","exportPerformanceData","marginLeft","session","duration","window","location","pathname","webVitals","lcp","round","value","fid","cls","apiCalls","total","successful","failed","averageResponseTime","slowCalls","length","userInteractions","slowInteractions","memory","usedJSHeapSize","totalJSHeapSize","usedPercentage","connection","effectiveType","downlink","rtt","status","uptime","errorRate","errors","recent","slice","map","index","marginTop","wordBreak","substring","paddingTop","borderTop","onChange","Number","logPerformanceSummary"],"sources":["/Users/samuellove/Documents/GitHub/Capstone/frontend/components/PerformanceDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getPerformanceMetrics, logPerformanceSummary, exportPerformanceData } from '../utils/performance';\n\n// API Configuration\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001';\n\nconst PerformanceDashboard = ({ isVisible = false, embedded = false }) => {\n  const [metrics, setMetrics] = useState(null);\n  const [backendMetrics, setBackendMetrics] = useState(null);\n  const [refreshInterval, setRefreshInterval] = useState(5000);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n\n  // Fetch frontend metrics\n  const refreshMetrics = () => {\n    const frontendMetrics = getPerformanceMetrics();\n    setMetrics(frontendMetrics);\n  };\n\n  // Fetch backend metrics\n  const fetchBackendMetrics = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/monitoring/performance`);\n      if (response.ok) {\n        const data = await response.json();\n        setBackendMetrics(data);\n      }\n    } catch (error) {\n      // Silently handle backend unavailability - this is optional functionality\n      if (process.env.NODE_ENV === 'development') {\n        console.debug('Backend metrics unavailable (this is optional):', error.message);\n      }\n    }\n  };\n\n  // Auto-refresh functionality\n  useEffect(() => {\n    if (!isVisible) return;\n\n    refreshMetrics();\n    fetchBackendMetrics();\n\n    if (autoRefresh) {\n      const interval = setInterval(() => {\n        refreshMetrics();\n        fetchBackendMetrics();\n      }, refreshInterval);\n\n      return () => clearInterval(interval);\n    }\n  }, [isVisible, autoRefresh, refreshInterval]);\n\n  if (!isVisible || !metrics) {\n    return null;\n  }\n\n  const formatBytes = (bytes) => {\n    if (!bytes) return 'N/A';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const formatDuration = (ms) => {\n    const seconds = Math.floor(ms / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n\n    if (hours > 0) return `${hours}h ${minutes % 60}m`;\n    if (minutes > 0) return `${minutes}m ${seconds % 60}s`;\n    return `${seconds}s`;\n  };\n\n  const getVitalRating = (vital) => {\n    if (!vital) return 'unknown';\n    return vital.rating || 'unknown';\n  };\n\n  const getRatingColor = (rating) => {\n    switch (rating) {\n      case 'good': return '#22c55e';\n      case 'needs_improvement': return '#f59e0b';\n      case 'poor': return '#ef4444';\n      default: return '#6b7280';\n    }\n  };\n\n  return (\n    <div style={{\n      position: embedded ? 'relative' : 'fixed',\n      top: embedded ? 'auto' : '20px',\n      right: embedded ? 'auto' : '20px',\n      width: embedded ? '100%' : '400px',\n      maxHeight: embedded ? 'none' : '80vh',\n      backgroundColor: embedded ? 'var(--theme-cardBg)' : '#1f2937',\n      color: embedded ? 'var(--theme-text)' : '#f9fafb',\n      border: embedded ? '1px solid var(--theme-border)' : '1px solid #374151',\n      borderRadius: '8px',\n      padding: '20px',\n      fontSize: '14px',\n      fontFamily: 'monospace',\n      overflowY: embedded ? 'visible' : 'auto',\n      zIndex: embedded ? 'auto' : 9999,\n      boxShadow: embedded ? 'none' : '0 10px 25px rgba(0, 0, 0, 0.5)'\n    }}>\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px' }}>\n        <h3 style={{ margin: 0, color: embedded ? 'var(--theme-primary)' : '#3b82f6' }}>⚡ Performance Dashboard</h3>\n        <div style={{ display: 'flex', gap: '8px' }}>\n          <button\n            onClick={refreshMetrics}\n            style={{\n              padding: '4px 8px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '12px',\n              transition: 'all 0.2s ease'\n            }}\n            onMouseEnter={(e) => {\n              e.target.style.backgroundColor = '#0056b3';\n              e.target.style.transform = 'translateY(-2px)';\n              e.target.style.boxShadow = '0 4px 8px rgba(0, 123, 255, 0.3)';\n            }}\n            onMouseLeave={(e) => {\n              e.target.style.backgroundColor = '#007bff';\n              e.target.style.transform = 'translateY(0)';\n              e.target.style.boxShadow = 'none';\n            }}\n          >\n            🔄\n          </button>\n          <button\n            onClick={() => setAutoRefresh(!autoRefresh)}\n            style={{\n              padding: '4px 8px',\n              backgroundColor: autoRefresh ? '#22c55e' : '#6b7280',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '12px'\n            }}\n          >\n            {autoRefresh ? '⏸️' : '▶️'}\n          </button>\n          <button\n            onClick={exportPerformanceData}\n            style={{\n              padding: '4px 8px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '12px',\n              transition: 'all 0.2s ease'\n            }}\n            onMouseEnter={(e) => {\n              e.target.style.backgroundColor = '#0056b3';\n              e.target.style.transform = 'translateY(-2px)';\n              e.target.style.boxShadow = '0 4px 8px rgba(0, 123, 255, 0.3)';\n            }}\n            onMouseLeave={(e) => {\n              e.target.style.backgroundColor = '#007bff';\n              e.target.style.transform = 'translateY(0)';\n              e.target.style.boxShadow = 'none';\n            }}\n          >\n            📁\n          </button>\n        </div>\n      </div>\n\n      {/* Session Info */}\n      <div style={{ marginBottom: '20px' }}>\n        <h4 style={{ margin: '0 0 10px 0', color: embedded ? 'var(--theme-success)' : '#10b981' }}>📊 Session</h4>\n        <div style={{ marginLeft: '10px' }}>\n          <div>Duration: {formatDuration(metrics.session.duration)}</div>\n          <div>Page: {window.location.pathname}</div>\n        </div>\n      </div>\n\n      {/* Web Vitals */}\n      <div style={{ marginBottom: '20px' }}>\n        <h4 style={{ margin: '0 0 10px 0', color: embedded ? 'var(--theme-success)' : '#10b981' }}>🎯 Web Vitals</h4>\n        <div style={{ marginLeft: '10px' }}>\n          {metrics.webVitals.lcp && (\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>LCP:</span>\n              <span style={{ color: getRatingColor(getVitalRating(metrics.webVitals.lcp)) }}>\n                {Math.round(metrics.webVitals.lcp.value)}ms\n              </span>\n            </div>\n          )}\n          {metrics.webVitals.fid && (\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>FID:</span>\n              <span style={{ color: getRatingColor(getVitalRating(metrics.webVitals.fid)) }}>\n                {Math.round(metrics.webVitals.fid.value)}ms\n              </span>\n            </div>\n          )}\n          {metrics.webVitals.cls && (\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>CLS:</span>\n              <span style={{ color: getRatingColor(getVitalRating(metrics.webVitals.cls)) }}>\n                {metrics.webVitals.cls.value.toFixed(3)}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* API Calls */}\n      <div style={{ marginBottom: '20px' }}>\n        <h4 style={{ margin: '0 0 10px 0', color: embedded ? 'var(--theme-success)' : '#10b981' }}>🌐 API Calls</h4>\n        <div style={{ marginLeft: '10px' }}>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <span>Total:</span>\n            <span>{metrics.apiCalls.total}</span>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <span>Success:</span>\n            <span style={{ color: '#22c55e' }}>{metrics.apiCalls.successful}</span>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <span>Failed:</span>\n            <span style={{ color: '#ef4444' }}>{metrics.apiCalls.failed}</span>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <span>Avg Time:</span>\n            <span>{metrics.apiCalls.averageResponseTime}ms</span>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <span>Slow Calls:</span>\n            <span style={{ color: metrics.apiCalls.slowCalls.length > 0 ? '#f59e0b' : '#6b7280' }}>\n              {metrics.apiCalls.slowCalls.length}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* User Interactions */}\n      <div style={{ marginBottom: '20px' }}>\n        <h4 style={{ margin: '0 0 10px 0', color: embedded ? 'var(--theme-success)' : '#10b981' }}>👆 Interactions</h4>\n        <div style={{ marginLeft: '10px' }}>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <span>Total:</span>\n            <span>{metrics.userInteractions.total}</span>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <span>Avg Time:</span>\n            <span>{metrics.userInteractions.averageResponseTime}ms</span>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <span>Slow:</span>\n            <span style={{ color: metrics.userInteractions.slowInteractions.length > 0 ? '#f59e0b' : '#6b7280' }}>\n              {metrics.userInteractions.slowInteractions.length}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Memory Usage */}\n      {metrics.memory && (\n        <div style={{ marginBottom: '20px' }}>\n          <h4 style={{ margin: '0 0 10px 0', color: embedded ? 'var(--theme-success)' : '#10b981' }}>🧠 Memory</h4>\n          <div style={{ marginLeft: '10px' }}>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>Used:</span>\n              <span>{formatBytes(metrics.memory.usedJSHeapSize)}</span>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>Total:</span>\n              <span>{formatBytes(metrics.memory.totalJSHeapSize)}</span>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>Usage:</span>\n              <span style={{\n                color: metrics.memory.usedPercentage > 80 ? '#ef4444' :\n                       metrics.memory.usedPercentage > 60 ? '#f59e0b' : '#22c55e'\n              }}>\n                {metrics.memory.usedPercentage}%\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Connection Info */}\n      {metrics.connection && (\n        <div style={{ marginBottom: '20px' }}>\n          <h4 style={{ margin: '0 0 10px 0', color: embedded ? 'var(--theme-success)' : '#10b981' }}>📶 Connection</h4>\n          <div style={{ marginLeft: '10px' }}>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>Type:</span>\n              <span>{metrics.connection.effectiveType}</span>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>Downlink:</span>\n              <span>{metrics.connection.downlink} Mbps</span>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>RTT:</span>\n              <span>{metrics.connection.rtt}ms</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Backend Metrics */}\n      {backendMetrics && (\n        <div style={{ marginBottom: '20px' }}>\n          <h4 style={{ margin: '0 0 10px 0', color: embedded ? 'var(--theme-success)' : '#10b981' }}>🖥️ Backend</h4>\n          <div style={{ marginLeft: '10px' }}>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>Status:</span>\n              <span style={{\n                color: backendMetrics.status === 'optimal' ? '#22c55e' :\n                       backendMetrics.status === 'degraded' ? '#f59e0b' : '#ef4444'\n              }}>\n                {backendMetrics.status}\n              </span>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>Uptime:</span>\n              <span>{backendMetrics.uptime}</span>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>Avg Response:</span>\n              <span>{Math.round(backendMetrics.averageResponseTime)}ms</span>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>Error Rate:</span>\n              <span style={{ color: backendMetrics.errorRate > 5 ? '#ef4444' : '#22c55e' }}>\n                {backendMetrics.errorRate.toFixed(1)}%\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Errors */}\n      {metrics.errors.total > 0 && (\n        <div style={{ marginBottom: '20px' }}>\n          <h4 style={{ margin: '0 0 10px 0', color: embedded ? 'var(--theme-error)' : '#ef4444' }}>🚨 Errors</h4>\n          <div style={{ marginLeft: '10px' }}>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <span>Total:</span>\n              <span style={{ color: '#ef4444' }}>{metrics.errors.total}</span>\n            </div>\n            {metrics.errors.recent.slice(0, 3).map((error, index) => (\n              <div key={index} style={{\n                fontSize: '12px',\n                color: '#fca5a5',\n                marginTop: '5px',\n                wordBreak: 'break-word'\n              }}>\n                {error.message?.substring(0, 50)}...\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Controls */}\n      <div style={{ marginTop: '20px', paddingTop: '10px', borderTop: embedded ? '1px solid var(--theme-border)' : '1px solid #374151' }}>\n        <div style={{ marginBottom: '10px' }}>\n          <label style={{ display: 'block', marginBottom: '5px', fontSize: '12px' }}>\n            Refresh Interval:\n          </label>\n          <select\n            value={refreshInterval}\n            onChange={(e) => setRefreshInterval(Number(e.target.value))}\n            style={{\n              width: '100%',\n              padding: '4px',\n              backgroundColor: embedded ? 'var(--theme-cardBg)' : '#374151',\n              color: embedded ? 'var(--theme-text)' : '#f9fafb',\n              border: embedded ? '1px solid var(--theme-border)' : '1px solid #4b5563',\n              borderRadius: '4px'\n            }}\n          >\n            <option value={1000}>1 second</option>\n            <option value={5000}>5 seconds</option>\n            <option value={10000}>10 seconds</option>\n            <option value={30000}>30 seconds</option>\n          </select>\n        </div>\n\n        <button\n          onClick={logPerformanceSummary}\n          style={{\n            width: '100%',\n            padding: '8px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px',\n            transition: 'all 0.2s ease'\n          }}\n          onMouseEnter={(e) => {\n            e.target.style.backgroundColor = '#0056b3';\n            e.target.style.transform = 'translateY(-2px)';\n            e.target.style.boxShadow = '0 4px 8px rgba(0, 123, 255, 0.3)';\n          }}\n          onMouseLeave={(e) => {\n            e.target.style.backgroundColor = '#007bff';\n            e.target.style.transform = 'translateY(0)';\n            e.target.style.boxShadow = 'none';\n          }}\n        >\n          📋 Log Summary to Console\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PerformanceDashboard;\n"],"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","ignoreList":[]}